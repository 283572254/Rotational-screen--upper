#ifndef _DemoPage7_h
#define _DemoPage7_h
#include "gWidgetInfo.h"
#include "gStdint.h"
#include "gReturn.h"
#include "gResMsg.h"
#include "lcddriver.h"
#define GPwID 0x7001
static const PAGE_INFO GraphPage={
	{.wType = WIDGET_TYPE_PAGE , .wId = GPwID , .wVscope = WIDGET_VS_PRIVATE},
	{.x = 0 , .y = 0 , .width = 480 , .height = 320},
	.backMode = WIDGET_BACKMODE_COLOR , 
	.backColor = 0xFFFF,
	.picId = 0,
	.enterEvent = GUI_NULL,
	.leaveEvent = GUI_NULL,
	.pressEvent = GUI_NULL,
	.releaseEvent = GUI_NULL,
};
#define GPPic1wID 0x7002
static const PICTUREBOX_INFO GraphPagePicBox1={
 {.wType = WIDGET_TYPE_PICTUREBOX , .wId = GPPic1wID , .wVscope = WIDGET_VS_PRIVATE},
 {.x = 17 , .y = 255 , .width = 54 , .height = 59},    
 .picId = 9,
 .pressEvent = GUI_NULL,               
 .releaseEvent = GUI_NULL,             
 .updateEvent = GUI_NULL  
};
#define GPPic2wID 0x7003
static const PICTUREBOX_INFO GraphPagePicBox2={
 {.wType = WIDGET_TYPE_PICTUREBOX , .wId = GPPic2wID , .wVscope = WIDGET_VS_PRIVATE},
 {.x = 389 , .y = 250 , .width = 89 , .height = 69},    
 .picId = 8,
 .pressEvent = GUI_NULL,               
 .releaseEvent = GUI_NULL,             
 .updateEvent = GUI_NULL  
};
#define GPSlider1wID 0x7004
static const SLIDER_INFO GraphPageSlider1={    
 {.wType = WIDGET_TYPE_SLIDER , .wId = GPSlider1wID , .wVscope = WIDGET_VS_PRIVATE},
 {.x = 85 , .y = 258 , .width = 301 , .height = 50},  
 .dir = SLIDER_DIR_H,
 .backMode = WIDGET_BACKMODE_PIC,
 .backColor = 0xFF00,
 .backPicId = 10,
 .vernierMode = WIDGET_BACKMODE_PIC,
 .vernierColor = 0x00FF,
 .vernierPicId = 11,
 .vernierWidth = 38,
 .vernierHeight = 40,
 .value = LCD_LuminanceMax,
 .v_last_x = 30,                    
 .v_last_y = 0,
 .pressEvent = GUI_NULL,               
 .releaseEvent = GUI_NULL, 
 .slidEvent = GUI_NULL, 
 .updateEvent = GUI_NULL  
};
#define GPSlider2wID 0x7005
static const SLIDER_INFO GraphPageSlider2={    
 {.wType = WIDGET_TYPE_SLIDER , .wId = GPSlider2wID , .wVscope = WIDGET_VS_PRIVATE},
 {.x = 20 , .y = 19 , .width = 34 , .height = 221},  
 .dir = SLIDER_DIR_V,
 .backMode = WIDGET_BACKMODE_COLOR,
 .backColor = 0xFF00,
 .backPicId = 10,
 .vernierMode = WIDGET_BACKMODE_COLOR,
 .vernierColor = 0x00FF,
 .vernierPicId = 11,
 .vernierWidth = 34,
 .vernierHeight = 20,
 .value = 50,
 .v_last_x = 30,                    
 .v_last_y = 0,
 .pressEvent = GUI_NULL,               
 .releaseEvent = GUI_NULL, 
 .slidEvent = GUI_NULL, 
 .updateEvent = GUI_NULL  
};
#define GPGraphBoxwID 0x7006
static const GRAPH_INFO GraphPageGraphBox={     
 {.wType = WIDGET_TYPE_GRAPH , .wId = GPGraphBoxwID , .wVscope = WIDGET_VS_PRIVATE},
 {.x = 0x0055 , .y = 0x0013 , .width = 0x017A , .height = 0x00DD},  
 .backMode = WIDGET_BACKMODE_COLOR,                        //背景模式
 .dir = GRAPH_SCAN_LR,                             //bit0-bit3控制波形推荐方式，0000左到右推进,0001右到左推进
 .xAxis_loc = GRAPH_XAXIS_C,                       //轴位置，
 .yAxis_loc = GRAPH_YAXIS_C,                       //轴位置，
 .channelCount = 4,                    //通道数量，1-4，共计4个通道
 .axisColor = 0xF800,                      //显示出来的轴颜色
 .backColor = 0xD678,                       //背景颜色
 .gridColor = 0x0400,                       //网格颜色
 .gridWidth = 30,                      //网格宽度0表示没有网格
 .gridHeight = 30,                    //网格高度0表示没有网格
 .picId = 5,                          //切图模式或者图片模式下，图片ID
 .graphColor = {0x0000,0xFFEF,0xF800,0x07E0},    //4个通道的颜色值
 .dis = 1,                            //波形Y轴上缩放系数
 .pressEvent = GUI_NULL,               
 .releaseEvent = GUI_NULL, 
 .updateEvent = GUI_NULL  
};
#define GPGTimerwID 0x7007
static const GTIMER_INFO GPGTimer={
 {.wType = WIDGET_TYPE_GTIMER , .wId = GPGTimerwID , .wVscope = WIDGET_VS_PRIVATE},
 .timeOut = 80,
 .enable = 1,                         //定时器开关位，0关，1开
 .timeValue = 0,                     //定时器当前计数值（周期是1MS）低16位是当前计数器值，高16位是定时器溢出标志，或者其他标识
}; 

static const gui_uint8 sin_data[256]={
 0x7F,0x82,0x85,0x88,0x8B,0x8F,0x92,0x95,0x98,0x9B,0x9E,0xA1,0xA4,0xA7,0xAA,0xAD
,0xB0,0xB3,0xB6,0xB8,0xBB,0xBE,0xC1,0xC3,0xC6,0xC8,0xCB,0xCD,0xD0,0xD2,0xD5,0xD7
,0xD9,0xDB,0xDD,0xE0,0xE2,0xE4,0xE5,0xE7,0xE9,0xEB,0xEC,0xEE,0xEF,0xF1,0xF2,0xF4
,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFB,0xFC,0xFD,0xFD,0xFE,0xFE,0xFE,0xFE,0xFE
,0xFE,0xFE,0xFE,0xFE,0xFE,0xFE,0xFD,0xFD,0xFC,0xFB,0xFB,0xFA,0xF9,0xF8,0xF7,0xF6
,0xF5,0xF4,0xF2,0xF1,0xEF,0xEE,0xEC,0xEB,0xE9,0xE7,0xE5,0xE4,0xE2,0xE0,0xDD,0xDB
,0xD9,0xD7,0xD5,0xD2,0xD0,0xCD,0xCB,0xC8,0xC6,0xC3,0xC1,0xBE,0xBB,0xB8,0xB6,0xB3
,0xB0,0xAD,0xAA,0xA7,0xA4,0xA1,0x9E,0x9B,0x98,0x95,0x92,0x8F,0x8B,0x88,0x85,0x82
,0x7F,0x7C,0x79,0x76,0x73,0x6F,0x6C,0x69,0x66,0x63,0x60,0x5D,0x5A,0x57,0x54,0x51
,0x4E,0x4B,0x48,0x46,0x43,0x40,0x3D,0x3B,0x38,0x36,0x33,0x31,0x2E,0x2C,0x29,0x27
,0x25,0x23,0x21,0x1E,0x1C,0x1A,0x19,0x17,0x15,0x13,0x12,0x10,0x0F,0x0D,0x0C,0x0A
,0x09,0x08,0x07,0x06,0x05,0x04,0x03,0x03,0x02,0x01,0x01,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x01,0x02,0x03,0x03,0x04,0x05,0x06,0x07,0x08
,0x09,0x0A,0x0C,0x0D,0x0F,0x10,0x12,0x13,0x15,0x17,0x19,0x1A,0x1C,0x1E,0x21,0x23
,0x25,0x27,0x29,0x2C,0x2E,0x31,0x33,0x36,0x38,0x3B,0x3D,0x40,0x43,0x46,0x48,0x4B
,0x4E,0x51,0x54,0x57,0x5A,0x5D,0x60,0x63,0x66,0x69,0x6C,0x6F,0x73,0x76,0x79,0x7C
};
static const gui_uint8 cos_data[256]={
 0x7F,0x7C,0x79,0x76,0x73,0x6F,0x6C,0x69,0x66,0x63,0x60,0x5D,0x5A,0x57,0x54,0x51
,0x4E,0x4B,0x48,0x46,0x43,0x40,0x3D,0x3B,0x38,0x36,0x33,0x31,0x2E,0x2C,0x29,0x27
,0x25,0x23,0x21,0x1E,0x1C,0x1A,0x19,0x17,0x15,0x13,0x12,0x10,0x0F,0x0D,0x0C,0x0A
,0x09,0x08,0x07,0x06,0x05,0x04,0x03,0x03,0x02,0x01,0x01,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x01,0x02,0x03,0x03,0x04,0x05,0x06,0x07,0x08
,0x09,0x0A,0x0C,0x0D,0x0F,0x10,0x12,0x13,0x15,0x17,0x19,0x1A,0x1C,0x1E,0x21,0x23
,0x25,0x27,0x29,0x2C,0x2E,0x31,0x33,0x36,0x38,0x3B,0x3D,0x40,0x43,0x46,0x48,0x4B
,0x4E,0x51,0x54,0x57,0x5A,0x5D,0x60,0x63,0x66,0x69,0x6C,0x6F,0x73,0x76,0x79,0x7C
,0x7F,0x82,0x85,0x88,0x8B,0x8F,0x92,0x95,0x98,0x9B,0x9E,0xA1,0xA4,0xA7,0xAA,0xAD
,0xB0,0xB3,0xB6,0xB8,0xBB,0xBE,0xC1,0xC3,0xC6,0xC8,0xCB,0xCD,0xD0,0xD2,0xD5,0xD7
,0xD9,0xDB,0xDD,0xE0,0xE2,0xE4,0xE5,0xE7,0xE9,0xEB,0xEC,0xEE,0xEF,0xF1,0xF2,0xF4
,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFB,0xFC,0xFD,0xFD,0xFE,0xFE,0xFE,0xFE,0xFE
,0xFE,0xFE,0xFE,0xFE,0xFE,0xFE,0xFD,0xFD,0xFC,0xFB,0xFB,0xFA,0xF9,0xF8,0xF7,0xF6
,0xF5,0xF4,0xF2,0xF1,0xEF,0xEE,0xEC,0xEB,0xE9,0xE7,0xE5,0xE4,0xE2,0xE0,0xDD,0xDB
,0xD9,0xD7,0xD5,0xD2,0xD0,0xCD,0xCB,0xC8,0xC6,0xC3,0xC1,0xBE,0xBB,0xB8,0xB6,0xB3
,0xB0,0xAD,0xAA,0xA7,0xA4,0xA1,0x9E,0x9B,0x98,0x95,0x92,0x8F,0x8B,0x88,0x85,0x82
};
















gui_Err GraphPageEnterEvent(gui_int32 argc , const char **argv);
gui_Err GraphPageLeaveEvent(gui_int32 argc , const char **argv);
static gui_Err BackToHome_releaseEvent(gui_int32 argc , const char **argv);
static gui_Err GraphPage_Slider1_slideEvent(gui_int32 argc , const char **argv);
static gui_Err GraphPage_Graph_timeoutEvent(gui_int32 argc , const char **argv);
	

#endif
