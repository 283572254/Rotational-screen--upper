<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Obj\TDOGUIV1_0.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Obj\TDOGUIV1_0.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5050106: Last Updated: Thu Nov 02 00:41:20 2023
<BR><P>
<H3>Maximum Stack Usage =        700 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
w_TimeOutEventRollTextBox &rArr; w_dispRollTextBox &rArr; w_dispCharUseExFont &rArr; w_GetStringNeedWH &rArr; wResGetFontMsg &rArr; wGetResoureAddrEX &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NMI_Handler</a><BR>
 <LI><a href="#[19]">ADC0_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[19]">ADC0_IRQHandler</a><BR>
 <LI><a href="#[1c9]">PutUnsignedInt</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1c9]">PutUnsignedInt</a><BR>
 <LI><a href="#[1c8]">PutSignedInt</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1c8]">PutSignedInt</a><BR>
 <LI><a href="#[1c7]">PutHexa</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1c7]">PutHexa</a><BR>
 <LI><a href="#[178]">Decrypt_pro</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[17a]">LCD_Init</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[19]">ADC0_IRQHandler</a> from startup_y6.o(.text) referenced from startup_y6.o(RESET)
 <LI><a href="#[61]">Alternative1_releaseEvent</a> from fullfunckeyboard.o(i.Alternative1_releaseEvent) referenced from fullfunckeyboard.o(i.CreatePreviewArea)
 <LI><a href="#[62]">Alternative2_releaseEvent</a> from fullfunckeyboard.o(i.Alternative2_releaseEvent) referenced from fullfunckeyboard.o(i.CreatePreviewArea)
 <LI><a href="#[63]">Alternative3_releaseEvent</a> from fullfunckeyboard.o(i.Alternative3_releaseEvent) referenced from fullfunckeyboard.o(i.CreatePreviewArea)
 <LI><a href="#[1e]">BITCOPY_IRQHandler</a> from startup_y6.o(.text) referenced from startup_y6.o(RESET)
 <LI><a href="#[1a]">BOD_IRQHandler</a> from startup_y6.o(.text) referenced from startup_y6.o(RESET)
 <LI><a href="#[1b]">BOR_IRQHandler</a> from startup_y6.o(.text) referenced from startup_y6.o(RESET)
 <LI><a href="#[1c]">CMP_IRQHandler</a> from startup_y6.o(.text) referenced from startup_y6.o(RESET)
 <LI><a href="#[72]">CreateKeyBoardPage</a> from fullfunckeyboard.o(i.CreateKeyBoardPage) referenced from fullfunckeyboard.o(i.wCreateFullKeyBoard)
 <LI><a href="#[73]">CreateKeyBoardPage</a> from numberfunckeyboard1.o(i.CreateKeyBoardPage) referenced from numberfunckeyboard1.o(i.wCreatenumberFuncKeyBoard1)
 <LI><a href="#[16]">DMA_IRQHandler</a> from y6_dma.o(i.DMA_IRQHandler) referenced from startup_y6.o(RESET)
 <LI><a href="#[67]">DemoMain_PageEnterEvent</a> from demotest01.o(i.DemoMain_PageEnterEvent) referenced from demotest01.o(i.DemoTestPage_Init)
 <LI><a href="#[67]">DemoMain_PageEnterEvent</a> from demotest01.o(i.DemoMain_PageEnterEvent) referenced from main.o(i.key_control)
 <LI><a href="#[67]">DemoMain_PageEnterEvent</a> from demotest01.o(i.DemoMain_PageEnterEvent) referenced from main.o(i.page_init)
 <LI><a href="#[67]">DemoMain_PageEnterEvent</a> from demotest01.o(i.DemoMain_PageEnterEvent) referenced from main.o(i.pump)
 <LI><a href="#[67]">DemoMain_PageEnterEvent</a> from demotest01.o(i.DemoMain_PageEnterEvent) referenced from main.o(i.rotary_control)
 <LI><a href="#[66]">DemoTest01_timeoutEvent</a> from demotest01.o(i.DemoTest01_timeoutEvent) referenced from demotest01.o(i.DemoMain_PageEnterEvent)
 <LI><a href="#[17]">GPIO0_IRQHandler</a> from y6_it.o(i.GPIO0_IRQHandler) referenced from startup_y6.o(RESET)
 <LI><a href="#[18]">GPIO1_IRQHandler</a> from y6_it.o(i.GPIO1_IRQHandler) referenced from startup_y6.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from y6_it.o(i.HardFault_Handler) referenced from startup_y6.o(RESET)
 <LI><a href="#[11]">I2C0_IRQHandler</a> from startup_y6.o(.text) referenced from startup_y6.o(RESET)
 <LI><a href="#[31]">LCD_Clear</a> from lcdinterface.o(i.LCD_Clear) referenced from lcdinterface.o(.constdata)
 <LI><a href="#[27]">LCD_DisplayOff</a> from lcddriver.o(i.LCD_DisplayOff) referenced from lcddriver.o(.constdata)
 <LI><a href="#[26]">LCD_DisplayOn</a> from lcddriver.o(i.LCD_DisplayOn) referenced from lcddriver.o(.constdata)
 <LI><a href="#[2a]">LCD_DrawPoint</a> from lcdinterface.o(i.LCD_DrawPoint) referenced from lcdinterface.o(.constdata)
 <LI><a href="#[2c]">LCD_Fill</a> from lcdinterface.o(i.LCD_Fill) referenced from lcdinterface.o(.constdata)
 <LI><a href="#[2e]">LCD_Fill_UseContinuousData</a> from lcdinterface.o(i.LCD_Fill_UseContinuousData) referenced from lcdinterface.o(.constdata)
 <LI><a href="#[30]">LCD_Fill_UseContinuousDataSplitBit</a> from lcdinterface.o(i.LCD_Fill_UseContinuousDataSplitBit) referenced from lcdinterface.o(.constdata)
 <LI><a href="#[2d]">LCD_Fill_UseOneData</a> from lcdinterface.o(i.LCD_Fill_UseOneData) referenced from lcdinterface.o(.constdata)
 <LI><a href="#[2f]">LCD_Fill_UsePartContinuousData</a> from lcdinterface.o(i.LCD_Fill_UsePartContinuousData) referenced from lcdinterface.o(.constdata)
 <LI><a href="#[2b]">LCD_ReadPoint</a> from lcdinterface.o(i.LCD_ReadPoint) referenced from lcdinterface.o(.constdata)
 <LI><a href="#[22]">LCD_Read_DATA</a> from lcddriver.o(i.LCD_Read_DATA) referenced from lcddriver.o(.constdata)
 <LI><a href="#[25]">LCD_Scan_Dir</a> from lcddriver.o(i.LCD_Scan_Dir) referenced from lcddriver.o(.constdata)
 <LI><a href="#[28]">LCD_Scroll</a> from lcddriver.o(i.LCD_Scroll) referenced from lcddriver.o(.constdata)
 <LI><a href="#[24]">LCD_SetCursor</a> from lcddriver.o(i.LCD_SetCursor) referenced from lcddriver.o(.constdata)
 <LI><a href="#[23]">LCD_Write_CMD</a> from lcddriver.o(i.LCD_Write_CMD) referenced from lcddriver.o(.constdata)
 <LI><a href="#[21]">LCD_Write_DATA</a> from lcddriver.o(i.LCD_Write_DATA) referenced from lcddriver.o(.constdata)
 <LI><a href="#[1d]">LED_IRQHandler</a> from startup_y6.o(.text) referenced from startup_y6.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from startup_y6.o(.text) referenced from startup_y6.o(RESET)
 <LI><a href="#[4]">PendSV_Handler</a> from y6_it.o(i.PendSV_Handler) referenced from startup_y6.o(RESET)
 <LI><a href="#[13]">QSPI0_IRQHandler</a> from startup_y6.o(.text) referenced from startup_y6.o(RESET)
 <LI><a href="#[14]">QSPI1_IRQHandler</a> from startup_y6.o(.text) referenced from startup_y6.o(RESET)
 <LI><a href="#[15]">QSPI2_IRQHandler</a> from startup_y6.o(.text) referenced from startup_y6.o(RESET)
 <LI><a href="#[b]">RTC_IRQHandler</a> from startup_y6.o(.text) referenced from startup_y6.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_y6.o(.text) referenced from startup_y6.o(RESET)
 <LI><a href="#[3]">SVC_Handler</a> from y6_it.o(i.SVC_Handler) referenced from startup_y6.o(RESET)
 <LI><a href="#[29]">SetPwm</a> from pwm.o(i.SetPwm) referenced from lcddriver.o(.constdata)
 <LI><a href="#[5]">SysTick_Handler</a> from y6_it.o(i.SysTick_Handler) referenced from startup_y6.o(RESET)
 <LI><a href="#[1f]">SystemInit</a> from system_y6.o(i.SystemInit) referenced from startup_y6.o(.text)
 <LI><a href="#[8]">TIM15_IRQHandler</a> from startup_y6.o(.text) referenced from startup_y6.o(RESET)
 <LI><a href="#[9]">TIM16_IRQHandler</a> from y6_it.o(i.TIM16_IRQHandler) referenced from startup_y6.o(RESET)
 <LI><a href="#[a]">TIM17_IRQHandler</a> from y6_it.o(i.TIM17_IRQHandler) referenced from startup_y6.o(RESET)
 <LI><a href="#[7]">TIM1_IRQHandler</a> from startup_y6.o(.text) referenced from startup_y6.o(RESET)
 <LI><a href="#[e]">TIM4_IRQHandler</a> from y6_it.o(i.TIM4_IRQHandler) referenced from startup_y6.o(RESET)
 <LI><a href="#[f]">UART0_IRQHandler</a> from startup_y6.o(.text) referenced from startup_y6.o(RESET)
 <LI><a href="#[10]">UART1_IRQHandler</a> from startup_y6.o(.text) referenced from startup_y6.o(RESET)
 <LI><a href="#[12]">UART2_IRQHandler</a> from y6_it.o(i.UART2_IRQHandler) referenced from startup_y6.o(RESET)
 <LI><a href="#[d]">USB0_DMA_IRQHandler</a> from startup_y6.o(.text) referenced from startup_y6.o(RESET)
 <LI><a href="#[c]">USB0_IRQHandler</a> from startup_y6.o(.text) referenced from startup_y6.o(RESET)
 <LI><a href="#[6]">WKT_IRQHandler</a> from startup_y6.o(.text) referenced from startup_y6.o(RESET)
 <LI><a href="#[79]">XIP_EraseFlash_Block_4K</a> from y6_xip_write.o(i.XIP_EraseFlash_Block_4K) referenced from flashinterface.o(.constdata)
 <LI><a href="#[7a]">XIP_WriteFlash_NoCheck</a> from y6_xip_write.o(i.XIP_WriteFlash_NoCheck) referenced from flashinterface.o(.constdata)
 <LI><a href="#[7e]">Y6_ClearScreen</a> from y6_comparacommand.o(i.Y6_ClearScreen) referenced from y6_command.o(.constdata)
 <LI><a href="#[82]">Y6_HMISet_Work_Mode</a> from y6_comparacommand.o(i.Y6_HMISet_Work_Mode) referenced from y6_command.o(.constdata)
 <LI><a href="#[81]">Y6_HMI_RESET</a> from y6_comparacommand.o(i.Y6_HMI_RESET) referenced from y6_command.o(.constdata)
 <LI><a href="#[7f]">Y6_HMI_led_Opera</a> from y6_comparacommand.o(i.Y6_HMI_led_Opera) referenced 2 times from y6_command.o(.constdata)
 <LI><a href="#[7d]">Y6_NULL_HANDLE</a> from y6_command.o(i.Y6_NULL_HANDLE) referenced 243 times from y6_command.o(.constdata)
 <LI><a href="#[7c]">Y6_Return</a> from y6_comparacommand.o(i.Y6_Return) referenced from y6_command.o(.constdata)
 <LI><a href="#[80]">Y6_Set_Key</a> from decrypt.o(i.Y6_Set_Key) referenced from y6_command.o(.constdata)
 <LI><a href="#[20]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_y6.o(.text)
 <LI><a href="#[69]">_sputc</a> from printf8.o(i._sputc) referenced from printf8.o(i.__0sprintf$8)
 <LI><a href="#[3e]">clearIutput</a> from cominterface.o(i.clearIutput) referenced from cominterface.o(.constdata)
 <LI><a href="#[3d]">clearOutput</a> from cominterface.o(i.clearOutput) referenced from cominterface.o(.constdata)
 <LI><a href="#[68]">fputc</a> from y6_it.o(i.fputc) referenced from printf8.o(i.__0printf$8)
 <LI><a href="#[75]">free</a> from mallocr.o(i.__free$realloc) referenced from memoryinterface.o(.constdata)
 <LI><a href="#[6a]">infrared_PageEnterEvent</a> from demotest01.o(i.infrared_PageEnterEvent) referenced from main.o(i.fan)
 <LI><a href="#[6a]">infrared_PageEnterEvent</a> from demotest01.o(i.infrared_PageEnterEvent) referenced from main.o(i.fan2)
 <LI><a href="#[6a]">infrared_PageEnterEvent</a> from demotest01.o(i.infrared_PageEnterEvent) referenced from main.o(i.infrared_red)
 <LI><a href="#[6a]">infrared_PageEnterEvent</a> from demotest01.o(i.infrared_PageEnterEvent) referenced from main.o(i.infrared_red2)
 <LI><a href="#[6a]">infrared_PageEnterEvent</a> from demotest01.o(i.infrared_PageEnterEvent) referenced from main.o(i.page_init)
 <LI><a href="#[6a]">infrared_PageEnterEvent</a> from demotest01.o(i.infrared_PageEnterEvent) referenced from main.o(i.red_light_group)
 <LI><a href="#[6a]">infrared_PageEnterEvent</a> from demotest01.o(i.infrared_PageEnterEvent) referenced from main.o(i.red_light_num)
 <LI><a href="#[6a]">infrared_PageEnterEvent</a> from demotest01.o(i.infrared_PageEnterEvent) referenced from main.o(i.red_light_on_off)
 <LI><a href="#[6a]">infrared_PageEnterEvent</a> from demotest01.o(i.infrared_PageEnterEvent) referenced from main.o(i.rotary_control)
 <LI><a href="#[6b]">infrared_PageEnterEvent2</a> from demotest01.o(i.infrared_PageEnterEvent2) referenced from main.o(i.fan)
 <LI><a href="#[6b]">infrared_PageEnterEvent2</a> from demotest01.o(i.infrared_PageEnterEvent2) referenced from main.o(i.infrared_red)
 <LI><a href="#[6b]">infrared_PageEnterEvent2</a> from demotest01.o(i.infrared_PageEnterEvent2) referenced from main.o(i.page_init)
 <LI><a href="#[6b]">infrared_PageEnterEvent2</a> from demotest01.o(i.infrared_PageEnterEvent2) referenced from main.o(i.pump)
 <LI><a href="#[6b]">infrared_PageEnterEvent2</a> from demotest01.o(i.infrared_PageEnterEvent2) referenced from main.o(i.red_light_num)
 <LI><a href="#[6b]">infrared_PageEnterEvent2</a> from demotest01.o(i.infrared_PageEnterEvent2) referenced from main.o(i.rotary_control)
 <LI><a href="#[6c]">infrared_timeoutEvent</a> from demotest01.o(i.infrared_timeoutEvent) referenced from demotest01.o(i.infrared_PageEnterEvent)
 <LI><a href="#[6d]">infrared_timeoutEvent2</a> from demotest01.o(i.infrared_timeoutEvent2) referenced from demotest01.o(i.infrared_PageEnterEvent2)
 <LI><a href="#[60]">inputButton00_releaseEvent</a> from numberfunckeyboard1.o(i.inputButton00_releaseEvent) referenced from numberfunckeyboard1.o(i.CreateInputArea)
 <LI><a href="#[4a]">inputButton01_releaseEvent</a> from fullfunckeyboard.o(i.inputButton01_releaseEvent) referenced 2 times from fullfunckeyboard.o(i.CreateInputArea)
 <LI><a href="#[4b]">inputButton02_releaseEvent</a> from fullfunckeyboard.o(i.inputButton02_releaseEvent) referenced 2 times from fullfunckeyboard.o(i.CreateInputArea)
 <LI><a href="#[4c]">inputButton03_releaseEvent</a> from fullfunckeyboard.o(i.inputButton03_releaseEvent) referenced 2 times from fullfunckeyboard.o(i.CreateInputArea)
 <LI><a href="#[4d]">inputButton04_releaseEvent</a> from fullfunckeyboard.o(i.inputButton04_releaseEvent) referenced 2 times from fullfunckeyboard.o(i.CreateInputArea)
 <LI><a href="#[4e]">inputButton05_releaseEvent</a> from fullfunckeyboard.o(i.inputButton05_releaseEvent) referenced 2 times from fullfunckeyboard.o(i.CreateInputArea)
 <LI><a href="#[4f]">inputButton06_releaseEvent</a> from fullfunckeyboard.o(i.inputButton06_releaseEvent) referenced 2 times from fullfunckeyboard.o(i.CreateInputArea)
 <LI><a href="#[50]">inputButton07_releaseEvent</a> from fullfunckeyboard.o(i.inputButton07_releaseEvent) referenced 2 times from fullfunckeyboard.o(i.CreateInputArea)
 <LI><a href="#[51]">inputButton08_releaseEvent</a> from fullfunckeyboard.o(i.inputButton08_releaseEvent) referenced 2 times from fullfunckeyboard.o(i.CreateInputArea)
 <LI><a href="#[52]">inputButton09_releaseEvent</a> from fullfunckeyboard.o(i.inputButton09_releaseEvent) referenced 2 times from fullfunckeyboard.o(i.CreateInputArea)
 <LI><a href="#[53]">inputButton10_releaseEvent</a> from fullfunckeyboard.o(i.inputButton10_releaseEvent) referenced from fullfunckeyboard.o(i.CreateInputArea)
 <LI><a href="#[54]">inputButton11_releaseEvent</a> from fullfunckeyboard.o(i.inputButton11_releaseEvent) referenced from fullfunckeyboard.o(i.CreateInputArea)
 <LI><a href="#[55]">inputButton12_releaseEvent</a> from fullfunckeyboard.o(i.inputButton12_releaseEvent) referenced from fullfunckeyboard.o(i.CreateInputArea)
 <LI><a href="#[59]">inputButtonDot_releaseEvent</a> from numberfunckeyboard1.o(i.inputButtonDot_releaseEvent) referenced from numberfunckeyboard1.o(i.CreateInputArea)
 <LI><a href="#[3a]">inputChar</a> from cominterface.o(i.inputChar) referenced from cominterface.o(.constdata)
 <LI><a href="#[3c]">inputEnd</a> from cominterface.o(i.inputEnd) referenced from cominterface.o(.constdata)
 <LI><a href="#[45]">inputFuncBack_releaseEvent</a> from fullfunckeyboard.o(i.inputFuncBack_releaseEvent) referenced 2 times from fullfunckeyboard.o(i.CreateFunctionArea)
 <LI><a href="#[44]">inputFuncDelete_releaseEvent</a> from fullfunckeyboard.o(i.inputFuncDelete_releaseEvent) referenced 2 times from fullfunckeyboard.o(i.CreateFunctionArea)
 <LI><a href="#[41]">inputFuncNumber_releaseEvent</a> from fullfunckeyboard.o(i.inputFuncNumber_releaseEvent) referenced from fullfunckeyboard.o(i.CreateFunctionArea)
 <LI><a href="#[46]">inputFuncOK_releaseEvent</a> from fullfunckeyboard.o(i.inputFuncOK_releaseEvent) referenced 2 times from fullfunckeyboard.o(i.CreateFunctionArea)
 <LI><a href="#[42]">inputFuncSpace_releaseEvent</a> from fullfunckeyboard.o(i.inputFuncSpace_releaseEvent) referenced from fullfunckeyboard.o(i.CreateFunctionArea)
 <LI><a href="#[40]">inputFuncSymbol_releaseEvent</a> from fullfunckeyboard.o(i.inputFuncSymbol_releaseEvent) referenced from fullfunckeyboard.o(i.CreateFunctionArea)
 <LI><a href="#[43]">inputFuncascASCchina_releaseEvent</a> from fullfunckeyboard.o(i.inputFuncascASCchina_releaseEvent) referenced from fullfunckeyboard.o(i.CreateFunctionArea)
 <LI><a href="#[3b]">inputString</a> from cominterface.o(i.inputString) referenced from cominterface.o(.constdata)
 <LI><a href="#[7b]">loadData8FromQspi0</a> from y6_xip_write.o(i.loadData8FromQspi0) referenced from flashinterface.o(.constdata)
 <LI><a href="#[3f]">main</a> from y6_init.o(i.$Sub$$main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
 <LI><a href="#[74]">malloc</a> from mallocr.o(i.__malloc$realloc) referenced from memoryinterface.o(.constdata)
 <LI><a href="#[78]">memcpy</a> from memmove.o(.text) referenced from memoryinterface.o(.constdata)
 <LI><a href="#[77]">memset</a> from memseta.o(.text) referenced from memoryinterface.o(.constdata)
 <LI><a href="#[32]">printChar</a> from systemuart.o(i.printChar) referenced from cominterface.o(.constdata)
 <LI><a href="#[33]">printString</a> from systemuart.o(i.printString) referenced 2 times from cominterface.o(.constdata)
 <LI><a href="#[76]">realloc</a> from mallocr.o(i.realloc) referenced from memoryinterface.o(.constdata)
 <LI><a href="#[6e]">red_led_PageEnterEvent</a> from demotest01.o(i.red_led_PageEnterEvent) referenced from main.o(i.page_init)
 <LI><a href="#[6e]">red_led_PageEnterEvent</a> from demotest01.o(i.red_led_PageEnterEvent) referenced from main.o(i.red_led)
 <LI><a href="#[6e]">red_led_PageEnterEvent</a> from demotest01.o(i.red_led_PageEnterEvent) referenced from main.o(i.red_led2)
 <LI><a href="#[6e]">red_led_PageEnterEvent</a> from demotest01.o(i.red_led_PageEnterEvent) referenced from main.o(i.red_led3)
 <LI><a href="#[6e]">red_led_PageEnterEvent</a> from demotest01.o(i.red_led_PageEnterEvent) referenced from main.o(i.red_led4)
 <LI><a href="#[6e]">red_led_PageEnterEvent</a> from demotest01.o(i.red_led_PageEnterEvent) referenced from main.o(i.rotary_control)
 <LI><a href="#[6f]">red_led_PageEnterEvent2</a> from demotest01.o(i.red_led_PageEnterEvent2) referenced from main.o(i.red_led)
 <LI><a href="#[6f]">red_led_PageEnterEvent2</a> from demotest01.o(i.red_led_PageEnterEvent2) referenced from main.o(i.red_led3)
 <LI><a href="#[6f]">red_led_PageEnterEvent2</a> from demotest01.o(i.red_led_PageEnterEvent2) referenced from main.o(i.rotary_control)
 <LI><a href="#[70]">red_led_timeoutEvent</a> from demotest01.o(i.red_led_timeoutEvent) referenced from demotest01.o(i.red_led_PageEnterEvent)
 <LI><a href="#[71]">red_led_timeoutEvent2</a> from demotest01.o(i.red_led_timeoutEvent2) referenced from demotest01.o(i.red_led_PageEnterEvent2)
 <LI><a href="#[37]">returnInputBuff</a> from cominterface.o(i.returnInputBuff) referenced from cominterface.o(.constdata)
 <LI><a href="#[38]">returnInputLen</a> from cominterface.o(i.returnInputLen) referenced from cominterface.o(.constdata)
 <LI><a href="#[39]">returnInputStatus</a> from cominterface.o(i.returnInputStatus) referenced from cominterface.o(.constdata)
 <LI><a href="#[36]">returnIutputMaxLen</a> from cominterface.o(i.returnIutputMaxLen) referenced from cominterface.o(.constdata)
 <LI><a href="#[35]">returnOutputBuff</a> from cominterface.o(i.returnOutputBuff) referenced from cominterface.o(.constdata)
 <LI><a href="#[34]">returnOutputMaxLen</a> from cominterface.o(i.returnOutputMaxLen) referenced from cominterface.o(.constdata)
 <LI><a href="#[65]">switchAlterBackward_releaseEvent</a> from fullfunckeyboard.o(i.switchAlterBackward_releaseEvent) referenced from fullfunckeyboard.o(i.CreatePreviewArea)
 <LI><a href="#[64]">switchAlterForward_releaseEvent</a> from fullfunckeyboard.o(i.switchAlterForward_releaseEvent) referenced from fullfunckeyboard.o(i.CreatePreviewArea)
 <LI><a href="#[12e]">w_AppendTextBinaryButton</a> from binarybutton.o(i.w_AppendTextBinaryButton) referenced from widgetindex.o(.constdata)
 <LI><a href="#[12c]">w_AppendTextButton</a> from button.o(i.w_AppendTextButton) referenced from widgetindex.o(.constdata)
 <LI><a href="#[12d]">w_AppendTextGvariate</a> from gvariate.o(i.w_AppendTextGvariate) referenced from widgetindex.o(.constdata)
 <LI><a href="#[129]">w_AppendTextNull</a> from widgetindex.o(i.w_AppendTextNull) referenced 16 times from widgetindex.o(.constdata)
 <LI><a href="#[12f]">w_AppendTextQRcodeBox</a> from qrcodebox.o(i.w_AppendTextQRcodeBox) referenced from widgetindex.o(.constdata)
 <LI><a href="#[12b]">w_AppendTextRollTextBox</a> from rolltextbox.o(i.w_AppendTextRollTextBox) referenced from widgetindex.o(.constdata)
 <LI><a href="#[12a]">w_AppendTextTextBox</a> from textbox.o(i.w_AppendTextTextBox) referenced from widgetindex.o(.constdata)
 <LI><a href="#[135]">w_DeleteTextBinaryButton</a> from binarybutton.o(i.w_DeleteTextBinaryButton) referenced from widgetindex.o(.constdata)
 <LI><a href="#[133]">w_DeleteTextButton</a> from button.o(i.w_DeleteTextButton) referenced from widgetindex.o(.constdata)
 <LI><a href="#[134]">w_DeleteTextGvariate</a> from gvariate.o(i.w_DeleteTextGvariate) referenced from widgetindex.o(.constdata)
 <LI><a href="#[130]">w_DeleteTextNull</a> from widgetindex.o(i.w_DeleteTextNull) referenced 16 times from widgetindex.o(.constdata)
 <LI><a href="#[136]">w_DeleteTextQRcodeBox</a> from qrcodebox.o(i.w_DeleteTextQRcodeBox) referenced from widgetindex.o(.constdata)
 <LI><a href="#[132]">w_DeleteTextRollTextBox</a> from rolltextbox.o(i.w_DeleteTextRollTextBox) referenced from widgetindex.o(.constdata)
 <LI><a href="#[131]">w_DeleteTextTextBox</a> from textbox.o(i.w_DeleteTextTextBox) referenced from widgetindex.o(.constdata)
 <LI><a href="#[13c]">w_GetTextBinaryButton</a> from binarybutton.o(i.w_GetTextBinaryButton) referenced from widgetindex.o(.constdata)
 <LI><a href="#[13a]">w_GetTextButton</a> from button.o(i.w_GetTextButton) referenced from widgetindex.o(.constdata)
 <LI><a href="#[13b]">w_GetTextGvariate</a> from gvariate.o(i.w_GetTextGvariate) referenced from widgetindex.o(.constdata)
 <LI><a href="#[137]">w_GetTextNull</a> from widgetindex.o(i.w_GetTextNull) referenced 16 times from widgetindex.o(.constdata)
 <LI><a href="#[13d]">w_GetTextQRcodeBox</a> from qrcodebox.o(i.w_GetTextQRcodeBox) referenced from widgetindex.o(.constdata)
 <LI><a href="#[139]">w_GetTextRollTextBox</a> from rolltextbox.o(i.w_GetTextRollTextBox) referenced from widgetindex.o(.constdata)
 <LI><a href="#[138]">w_GetTextTextBox</a> from textbox.o(i.w_GetTextTextBox) referenced from widgetindex.o(.constdata)
 <LI><a href="#[cd]">w_PressEventBinaryButton</a> from binarybutton.o(i.w_PressEventBinaryButton) referenced from widgetindex.o(.constdata)
 <LI><a href="#[c5]">w_PressEventButton</a> from button.o(i.w_PressEventButton) referenced from widgetindex.o(.constdata)
 <LI><a href="#[c8]">w_PressEventCutPicture</a> from cutpicture.o(i.w_PressEventCutPicture) referenced from widgetindex.o(.constdata)
 <LI><a href="#[c4]">w_PressEventFloatNumberBox</a> from floatnumberbox.o(i.w_PressEventFloatNumberBox) referenced from widgetindex.o(.constdata)
 <LI><a href="#[cb]">w_PressEventGraph</a> from graph.o(i.w_PressEventGraph) referenced from widgetindex.o(.constdata)
 <LI><a href="#[bf]">w_PressEventNULL</a> from widgetindex.o(i.w_PressEventNULL) referenced 3 times from widgetindex.o(.constdata)
 <LI><a href="#[c3]">w_PressEventNumberBox</a> from numberbox.o(i.w_PressEventNumberBox) referenced from widgetindex.o(.constdata)
 <LI><a href="#[ce]">w_PressEventOptionBox</a> from optionbox.o(i.w_PressEventOptionBox) referenced from widgetindex.o(.constdata)
 <LI><a href="#[c0]">w_PressEventPage</a> from page.o(i.w_PressEventPage) referenced from widgetindex.o(.constdata)
 <LI><a href="#[d2]">w_PressEventPicanimation</a> from picanimation.o(i.w_PressEventPicanimation) referenced from widgetindex.o(.constdata)
 <LI><a href="#[c7]">w_PressEventPictureBox</a> from picturebox.o(i.w_PressEventPictureBox) referenced from widgetindex.o(.constdata)
 <LI><a href="#[ca]">w_PressEventPointer</a> from pointer.o(i.w_PressEventPointer) referenced from widgetindex.o(.constdata)
 <LI><a href="#[c6]">w_PressEventProgressBar</a> from progressbar.o(i.w_PressEventProgressBar) referenced from widgetindex.o(.constdata)
 <LI><a href="#[cf]">w_PressEventQRcodeBox</a> from qrcodebox.o(i.w_PressEventQRcodeBox) referenced from widgetindex.o(.constdata)
 <LI><a href="#[c2]">w_PressEventRollTextBox</a> from rolltextbox.o(i.w_PressEventRollTextBox) referenced from widgetindex.o(.constdata)
 <LI><a href="#[d1]">w_PressEventRoundSlider</a> from roundslider.o(i.w_PressEventRoundSlider) referenced from widgetindex.o(.constdata)
 <LI><a href="#[cc]">w_PressEventSlider</a> from slider.o(i.w_PressEventSlider) referenced from widgetindex.o(.constdata)
 <LI><a href="#[c1]">w_PressEventTextBox</a> from textbox.o(i.w_PressEventTextBox) referenced from widgetindex.o(.constdata)
 <LI><a href="#[c9]">w_PressEventTouchArea</a> from toucharea.o(i.w_PressEventTouchArea) referenced from widgetindex.o(.constdata)
 <LI><a href="#[d0]">w_PressEventVirtualGif</a> from virtualgif.o(i.w_PressEventVirtualGif) referenced from widgetindex.o(.constdata)
 <LI><a href="#[e1]">w_ReleaseEventBinaryButton</a> from binarybutton.o(i.w_ReleaseEventBinaryButton) referenced from widgetindex.o(.constdata)
 <LI><a href="#[d9]">w_ReleaseEventButton</a> from button.o(i.w_ReleaseEventButton) referenced from widgetindex.o(.constdata)
 <LI><a href="#[dc]">w_ReleaseEventCutPicture</a> from cutpicture.o(i.w_ReleaseEventCutPicture) referenced from widgetindex.o(.constdata)
 <LI><a href="#[d8]">w_ReleaseEventFloatNumberBox</a> from floatnumberbox.o(i.w_ReleaseEventFloatNumberBox) referenced from widgetindex.o(.constdata)
 <LI><a href="#[df]">w_ReleaseEventGraph</a> from graph.o(i.w_ReleaseEventGraph) referenced from widgetindex.o(.constdata)
 <LI><a href="#[d3]">w_ReleaseEventNULL</a> from widgetindex.o(i.w_ReleaseEventNULL) referenced 3 times from widgetindex.o(.constdata)
 <LI><a href="#[d7]">w_ReleaseEventNumberBox</a> from numberbox.o(i.w_ReleaseEventNumberBox) referenced from widgetindex.o(.constdata)
 <LI><a href="#[e2]">w_ReleaseEventOptionBox</a> from optionbox.o(i.w_ReleaseEventOptionBox) referenced from widgetindex.o(.constdata)
 <LI><a href="#[d4]">w_ReleaseEventPage</a> from page.o(i.w_ReleaseEventPage) referenced from widgetindex.o(.constdata)
 <LI><a href="#[e6]">w_ReleaseEventPicanimation</a> from picanimation.o(i.w_ReleaseEventPicanimation) referenced from widgetindex.o(.constdata)
 <LI><a href="#[db]">w_ReleaseEventPictureBox</a> from picturebox.o(i.w_ReleaseEventPictureBox) referenced from widgetindex.o(.constdata)
 <LI><a href="#[de]">w_ReleaseEventPointer</a> from pointer.o(i.w_ReleaseEventPointer) referenced from widgetindex.o(.constdata)
 <LI><a href="#[da]">w_ReleaseEventProgressBar</a> from progressbar.o(i.w_ReleaseEventProgressBar) referenced from widgetindex.o(.constdata)
 <LI><a href="#[e3]">w_ReleaseEventQRcodeBox</a> from qrcodebox.o(i.w_ReleaseEventQRcodeBox) referenced from widgetindex.o(.constdata)
 <LI><a href="#[d6]">w_ReleaseEventRollTextBox</a> from rolltextbox.o(i.w_ReleaseEventRollTextBox) referenced from widgetindex.o(.constdata)
 <LI><a href="#[e5]">w_ReleaseEventRoundSlider</a> from roundslider.o(i.w_ReleaseEventRoundSlider) referenced from widgetindex.o(.constdata)
 <LI><a href="#[e0]">w_ReleaseEventSlider</a> from slider.o(i.w_ReleaseEventSlider) referenced from widgetindex.o(.constdata)
 <LI><a href="#[d5]">w_ReleaseEventTextBox</a> from textbox.o(i.w_ReleaseEventTextBox) referenced from widgetindex.o(.constdata)
 <LI><a href="#[dd]">w_ReleaseEventTouchArea</a> from toucharea.o(i.w_ReleaseEventTouchArea) referenced from widgetindex.o(.constdata)
 <LI><a href="#[e4]">w_ReleaseEventVirtualGif</a> from virtualgif.o(i.w_ReleaseEventVirtualGif) referenced from widgetindex.o(.constdata)
 <LI><a href="#[144]">w_SetPictureIDCutPicture</a> from cutpicture.o(i.w_SetPictureIDCutPicture) referenced from widgetindex.o(.constdata)
 <LI><a href="#[142]">w_SetPictureIDFloatNumbertBox</a> from floatnumberbox.o(i.w_SetPictureIDFloatNumbertBox) referenced from widgetindex.o(.constdata)
 <LI><a href="#[146]">w_SetPictureIDGraph</a> from graph.o(i.w_SetPictureIDGraph) referenced from widgetindex.o(.constdata)
 <LI><a href="#[13e]">w_SetPictureIDNull</a> from widgetindex.o(i.w_SetPictureIDNull) referenced 13 times from widgetindex.o(.constdata)
 <LI><a href="#[141]">w_SetPictureIDNumbertBox</a> from numberbox.o(i.w_SetPictureIDNumbertBox) referenced from widgetindex.o(.constdata)
 <LI><a href="#[147]">w_SetPictureIDPicanimation</a> from picanimation.o(i.w_SetPictureIDPicanimation) referenced from widgetindex.o(.constdata)
 <LI><a href="#[143]">w_SetPictureIDPictureBox</a> from picturebox.o(i.w_SetPictureIDPictureBox) referenced from widgetindex.o(.constdata)
 <LI><a href="#[145]">w_SetPictureIDPointer</a> from pointer.o(i.w_SetPictureIDPointer) referenced from widgetindex.o(.constdata)
 <LI><a href="#[140]">w_SetPictureIDRollTextBox</a> from rolltextbox.o(i.w_SetPictureIDRollTextBox) referenced from widgetindex.o(.constdata)
 <LI><a href="#[13f]">w_SetPictureIDTextBox</a> from textbox.o(i.w_SetPictureIDTextBox) referenced from widgetindex.o(.constdata)
 <LI><a href="#[127]">w_SetTextBinaryButton</a> from binarybutton.o(i.w_SetTextBinaryButton) referenced from widgetindex.o(.constdata)
 <LI><a href="#[125]">w_SetTextButton</a> from button.o(i.w_SetTextButton) referenced from widgetindex.o(.constdata)
 <LI><a href="#[124]">w_SetTextFloatNumbertBox</a> from floatnumberbox.o(i.w_SetTextFloatNumbertBox) referenced from widgetindex.o(.constdata)
 <LI><a href="#[126]">w_SetTextGvariate</a> from gvariate.o(i.w_SetTextGvariate) referenced from widgetindex.o(.constdata)
 <LI><a href="#[120]">w_SetTextNull</a> from widgetindex.o(i.w_SetTextNull) referenced 14 times from widgetindex.o(.constdata)
 <LI><a href="#[123]">w_SetTextNumbertBox</a> from numberbox.o(i.w_SetTextNumbertBox) referenced from widgetindex.o(.constdata)
 <LI><a href="#[128]">w_SetTextQRcodeBox</a> from qrcodebox.o(i.w_SetTextQRcodeBox) referenced from widgetindex.o(.constdata)
 <LI><a href="#[122]">w_SetTextRollTextBox</a> from rolltextbox.o(i.w_SetTextRollTextBox) referenced from widgetindex.o(.constdata)
 <LI><a href="#[121]">w_SetTextTextBox</a> from textbox.o(i.w_SetTextTextBox) referenced from widgetindex.o(.constdata)
 <LI><a href="#[e7]">w_SlidEventNULL</a> from widgetindex.o(i.w_SlidEventNULL) referenced 20 times from widgetindex.o(.constdata)
 <LI><a href="#[e9]">w_SlidEventRoundSlider</a> from roundslider.o(i.w_SlidEventRoundSlider) referenced from widgetindex.o(.constdata)
 <LI><a href="#[e8]">w_SlidEventSlider</a> from slider.o(i.w_SlidEventSlider) referenced from widgetindex.o(.constdata)
 <LI><a href="#[107]">w_TimeOutEventGtimer</a> from gtimer.o(i.w_TimeOutEventGtimer) referenced from widgetindex.o(.constdata)
 <LI><a href="#[105]">w_TimeOutEventNULL</a> from widgetindex.o(i.w_TimeOutEventNULL) referenced 18 times from widgetindex.o(.constdata)
 <LI><a href="#[109]">w_TimeOutEventPicanimation</a> from picanimation.o(i.w_TimeOutEventPicanimation) referenced from widgetindex.o(.constdata)
 <LI><a href="#[106]">w_TimeOutEventRollTextBox</a> from rolltextbox.o(i.w_TimeOutEventRollTextBox) referenced from widgetindex.o(.constdata)
 <LI><a href="#[108]">w_TimeOutEventVirtualGif</a> from virtualgif.o(i.w_TimeOutEventVirtualGif) referenced from widgetindex.o(.constdata)
 <LI><a href="#[b9]">w_UpdateEventBinaryButton</a> from binarybutton.o(i.w_UpdateEventBinaryButton) referenced from widgetindex.o(.constdata)
 <LI><a href="#[b2]">w_UpdateEventButton</a> from button.o(i.w_UpdateEventButton) referenced from widgetindex.o(.constdata)
 <LI><a href="#[b5]">w_UpdateEventCutPicture</a> from cutpicture.o(i.w_UpdateEventCutPicture) referenced from widgetindex.o(.constdata)
 <LI><a href="#[b1]">w_UpdateEventFloatNumberBox</a> from floatnumberbox.o(i.w_UpdateEventFloatNumberBox) referenced from widgetindex.o(.constdata)
 <LI><a href="#[b7]">w_UpdateEventGraph</a> from graph.o(i.w_UpdateEventGraph) referenced from widgetindex.o(.constdata)
 <LI><a href="#[ac]">w_UpdateEventNULL</a> from widgetindex.o(i.w_UpdateEventNULL) referenced 4 times from widgetindex.o(.constdata)
 <LI><a href="#[b0]">w_UpdateEventNumberBox</a> from numberbox.o(i.w_UpdateEventNumberBox) referenced from widgetindex.o(.constdata)
 <LI><a href="#[ba]">w_UpdateEventOptionBox</a> from optionbox.o(i.w_UpdateEventOptionBox) referenced from widgetindex.o(.constdata)
 <LI><a href="#[ad]">w_UpdateEventPage</a> from page.o(i.w_UpdateEventPage) referenced from widgetindex.o(.constdata)
 <LI><a href="#[be]">w_UpdateEventPicanimation</a> from picanimation.o(i.w_UpdateEventPicanimation) referenced from widgetindex.o(.constdata)
 <LI><a href="#[b4]">w_UpdateEventPictureBox</a> from picturebox.o(i.w_UpdateEventPictureBox) referenced from widgetindex.o(.constdata)
 <LI><a href="#[b6]">w_UpdateEventPointer</a> from pointer.o(i.w_UpdateEventPointer) referenced from widgetindex.o(.constdata)
 <LI><a href="#[b3]">w_UpdateEventProgressBar</a> from progressbar.o(i.w_UpdateEventProgressBar) referenced from widgetindex.o(.constdata)
 <LI><a href="#[bb]">w_UpdateEventQRcodeBox</a> from qrcodebox.o(i.w_UpdateEventQRcodeBox) referenced from widgetindex.o(.constdata)
 <LI><a href="#[af]">w_UpdateEventRollTextBox</a> from rolltextbox.o(i.w_UpdateEventRollTextBox) referenced from widgetindex.o(.constdata)
 <LI><a href="#[bd]">w_UpdateEventRoundSlider</a> from roundslider.o(i.w_UpdateEventRoundSlider) referenced from widgetindex.o(.constdata)
 <LI><a href="#[b8]">w_UpdateEventSlider</a> from slider.o(i.w_UpdateEventSlider) referenced from widgetindex.o(.constdata)
 <LI><a href="#[ae]">w_UpdateEventTextBox</a> from textbox.o(i.w_UpdateEventTextBox) referenced from widgetindex.o(.constdata)
 <LI><a href="#[bc]">w_UpdateEventVirtualGif</a> from virtualgif.o(i.w_UpdateEventVirtualGif) referenced from widgetindex.o(.constdata)
 <LI><a href="#[93]">w_createBinaryButton</a> from binarybutton.o(i.w_createBinaryButton) referenced from widgetindex.o(.constdata)
 <LI><a href="#[89]">w_createButton</a> from button.o(i.w_createButton) referenced from widgetindex.o(.constdata)
 <LI><a href="#[8c]">w_createCutPicture</a> from cutpicture.o(i.w_createCutPicture) referenced from widgetindex.o(.constdata)
 <LI><a href="#[88]">w_createFloatNumberBox</a> from floatnumberbox.o(i.w_createFloatNumberBox) referenced from widgetindex.o(.constdata)
 <LI><a href="#[8f]">w_createGraph</a> from graph.o(i.w_createGraph) referenced from widgetindex.o(.constdata)
 <LI><a href="#[91]">w_createGtimer</a> from gtimer.o(i.w_createGtimer) referenced from widgetindex.o(.constdata)
 <LI><a href="#[92]">w_createGvariate</a> from gvariate.o(i.w_createGvariate) referenced from widgetindex.o(.constdata)
 <LI><a href="#[83]">w_createNULL</a> from widgetindex.o(i.w_createNULL) referenced from widgetindex.o(.constdata)
 <LI><a href="#[87]">w_createNumberBox</a> from numberbox.o(i.w_createNumberBox) referenced from widgetindex.o(.constdata)
 <LI><a href="#[94]">w_createOptionBox</a> from optionbox.o(i.w_createOptionBox) referenced from widgetindex.o(.constdata)
 <LI><a href="#[84]">w_createPage</a> from page.o(i.w_createPage) referenced from widgetindex.o(.constdata)
 <LI><a href="#[98]">w_createPicanimation</a> from picanimation.o(i.w_createPicanimation) referenced from widgetindex.o(.constdata)
 <LI><a href="#[8b]">w_createPictureBox</a> from picturebox.o(i.w_createPictureBox) referenced from widgetindex.o(.constdata)
 <LI><a href="#[8e]">w_createPointer</a> from pointer.o(i.w_createPointer) referenced from widgetindex.o(.constdata)
 <LI><a href="#[8a]">w_createProgressBar</a> from progressbar.o(i.w_createProgressBar) referenced from widgetindex.o(.constdata)
 <LI><a href="#[95]">w_createQRcodeBox</a> from qrcodebox.o(i.w_createQRcodeBox) referenced from widgetindex.o(.constdata)
 <LI><a href="#[86]">w_createRollTextBox</a> from rolltextbox.o(i.w_createRollTextBox) referenced from widgetindex.o(.constdata)
 <LI><a href="#[97]">w_createRoundSlider</a> from roundslider.o(i.w_createRoundSlider) referenced from widgetindex.o(.constdata)
 <LI><a href="#[90]">w_createSlider</a> from slider.o(i.w_createSlider) referenced from widgetindex.o(.constdata)
 <LI><a href="#[85]">w_createTextBox</a> from textbox.o(i.w_createTextBox) referenced from widgetindex.o(.constdata)
 <LI><a href="#[8d]">w_createTouchArea</a> from toucharea.o(i.w_createTouchArea) referenced from widgetindex.o(.constdata)
 <LI><a href="#[96]">w_createVirtualGif</a> from virtualgif.o(i.w_createVirtualGif) referenced from widgetindex.o(.constdata)
 <LI><a href="#[fa]">w_deleteBinaryButton</a> from binarybutton.o(i.w_deleteBinaryButton) referenced from widgetindex.o(.constdata)
 <LI><a href="#[f0]">w_deleteButton</a> from button.o(i.w_deleteButton) referenced from widgetindex.o(.constdata)
 <LI><a href="#[f3]">w_deleteCutPicture</a> from cutpicture.o(i.w_deleteCutPicture) referenced from widgetindex.o(.constdata)
 <LI><a href="#[ef]">w_deleteFloatNumberBox</a> from floatnumberbox.o(i.w_deleteFloatNumberBox) referenced from widgetindex.o(.constdata)
 <LI><a href="#[f6]">w_deleteGraph</a> from graph.o(i.w_deleteGraph) referenced from widgetindex.o(.constdata)
 <LI><a href="#[f8]">w_deleteGtimer</a> from gtimer.o(i.w_deleteGtimer) referenced from widgetindex.o(.constdata)
 <LI><a href="#[f9]">w_deleteGvariate</a> from gvariate.o(i.w_deleteGvariate) referenced from widgetindex.o(.constdata)
 <LI><a href="#[ea]">w_deleteNULL</a> from widgetindex.o(i.w_deleteNULL) referenced from widgetindex.o(.constdata)
 <LI><a href="#[ee]">w_deleteNumberBox</a> from numberbox.o(i.w_deleteNumberBox) referenced from widgetindex.o(.constdata)
 <LI><a href="#[fb]">w_deleteOptionBox</a> from optionbox.o(i.w_deleteOptionBox) referenced from widgetindex.o(.constdata)
 <LI><a href="#[eb]">w_deletePage</a> from page.o(i.w_deletePage) referenced from widgetindex.o(.constdata)
 <LI><a href="#[ff]">w_deletePicanimation</a> from picanimation.o(i.w_deletePicanimation) referenced from widgetindex.o(.constdata)
 <LI><a href="#[f2]">w_deletePictureBox</a> from picturebox.o(i.w_deletePictureBox) referenced from widgetindex.o(.constdata)
 <LI><a href="#[f5]">w_deletePointer</a> from pointer.o(i.w_deletePointer) referenced from widgetindex.o(.constdata)
 <LI><a href="#[f1]">w_deleteProgressBar</a> from progressbar.o(i.w_deleteProgressBar) referenced from widgetindex.o(.constdata)
 <LI><a href="#[fc]">w_deleteQRcodeBox</a> from qrcodebox.o(i.w_deleteQRcodeBox) referenced from widgetindex.o(.constdata)
 <LI><a href="#[ed]">w_deleteRollTextBox</a> from rolltextbox.o(i.w_deleteRollTextBox) referenced from widgetindex.o(.constdata)
 <LI><a href="#[fe]">w_deleteRoundSlider</a> from roundslider.o(i.w_deleteRoundSlider) referenced from widgetindex.o(.constdata)
 <LI><a href="#[f7]">w_deleteSlider</a> from slider.o(i.w_deleteSlider) referenced from widgetindex.o(.constdata)
 <LI><a href="#[ec]">w_deleteTextBox</a> from textbox.o(i.w_deleteTextBox) referenced from widgetindex.o(.constdata)
 <LI><a href="#[f4]">w_deleteTouchArea</a> from toucharea.o(i.w_deleteTouchArea) referenced from widgetindex.o(.constdata)
 <LI><a href="#[fd]">w_deleteVirtualGif</a> from virtualgif.o(i.w_deleteVirtualGif) referenced from widgetindex.o(.constdata)
 <LI><a href="#[a6]">w_dispBinaryButton</a> from binarybutton.o(i.w_dispBinaryButton) referenced from widgetindex.o(.constdata)
 <LI><a href="#[9f]">w_dispButton</a> from button.o(i.w_dispButton) referenced from widgetindex.o(.constdata)
 <LI><a href="#[a2]">w_dispCutPicture</a> from cutpicture.o(i.w_dispCutPicture) referenced from widgetindex.o(.constdata)
 <LI><a href="#[9e]">w_dispFloatNumberBox</a> from floatnumberbox.o(i.w_dispFloatNumberBox) referenced from widgetindex.o(.constdata)
 <LI><a href="#[a4]">w_dispGraph</a> from graph.o(i.w_dispGraph) referenced from widgetindex.o(.constdata)
 <LI><a href="#[99]">w_dispNULL</a> from widgetindex.o(i.w_dispNULL) referenced 4 times from widgetindex.o(.constdata)
 <LI><a href="#[9d]">w_dispNumberBox</a> from numberbox.o(i.w_dispNumberBox) referenced from widgetindex.o(.constdata)
 <LI><a href="#[a7]">w_dispOptionBox</a> from optionbox.o(i.w_dispOptionBox) referenced from widgetindex.o(.constdata)
 <LI><a href="#[9a]">w_dispPage</a> from page.o(i.w_dispPage) referenced from widgetindex.o(.constdata)
 <LI><a href="#[ab]">w_dispPicanimation</a> from picanimation.o(i.w_dispPicanimation) referenced from widgetindex.o(.constdata)
 <LI><a href="#[a1]">w_dispPictureBox</a> from picturebox.o(i.w_dispPictureBox) referenced from widgetindex.o(.constdata)
 <LI><a href="#[a3]">w_dispPointer</a> from pointer.o(i.w_dispPointer) referenced from widgetindex.o(.constdata)
 <LI><a href="#[a0]">w_dispProgressBar</a> from progressbar.o(i.w_dispProgressBar) referenced from widgetindex.o(.constdata)
 <LI><a href="#[a8]">w_dispQRcodeBox</a> from qrcodebox.o(i.w_dispQRcodeBox) referenced from widgetindex.o(.constdata)
 <LI><a href="#[9c]">w_dispRollTextBox</a> from rolltextbox.o(i.w_dispRollTextBox) referenced from widgetindex.o(.constdata)
 <LI><a href="#[aa]">w_dispRoundSlider</a> from roundslider.o(i.w_dispRoundSlider) referenced from widgetindex.o(.constdata)
 <LI><a href="#[a5]">w_dispSlider</a> from slider.o(i.w_dispSlider) referenced from widgetindex.o(.constdata)
 <LI><a href="#[9b]">w_dispTextBox</a> from textbox.o(i.w_dispTextBox) referenced from widgetindex.o(.constdata)
 <LI><a href="#[a9]">w_dispVirtualGif</a> from virtualgif.o(i.w_dispVirtualGif) referenced from widgetindex.o(.constdata)
 <LI><a href="#[11a]">w_registerBinaryButtonEvent</a> from binarybutton.o(i.w_registerBinaryButtonEvent) referenced from widgetindex.o(.constdata)
 <LI><a href="#[110]">w_registerButtonEvent</a> from button.o(i.w_registerButtonEvent) referenced from widgetindex.o(.constdata)
 <LI><a href="#[113]">w_registerCutPictureEvent</a> from cutpicture.o(i.w_registerCutPictureEvent) referenced from widgetindex.o(.constdata)
 <LI><a href="#[10f]">w_registerFloatNumberBoxEvent</a> from floatnumberbox.o(i.w_registerFloatNumberBoxEvent) referenced from widgetindex.o(.constdata)
 <LI><a href="#[116]">w_registerGraphEvent</a> from graph.o(i.w_registerGraphEvent) referenced from widgetindex.o(.constdata)
 <LI><a href="#[118]">w_registerGtimerEvent</a> from gtimer.o(i.w_registerGtimerEvent) referenced from widgetindex.o(.constdata)
 <LI><a href="#[119]">w_registerGvariateEvent</a> from gvariate.o(i.w_registerGvariateEvent) referenced from widgetindex.o(.constdata)
 <LI><a href="#[10a]">w_registerNullEvent</a> from widgetindex.o(i.w_registerNullEvent) referenced from widgetindex.o(.constdata)
 <LI><a href="#[10e]">w_registerNumberBoxEvent</a> from numberbox.o(i.w_registerNumberBoxEvent) referenced from widgetindex.o(.constdata)
 <LI><a href="#[11b]">w_registerOptionBoxEvent</a> from optionbox.o(i.w_registerOptionBoxEvent) referenced from widgetindex.o(.constdata)
 <LI><a href="#[10b]">w_registerPageEvent</a> from page.o(i.w_registerPageEvent) referenced from widgetindex.o(.constdata)
 <LI><a href="#[11f]">w_registerPicanimationEvent</a> from picanimation.o(i.w_registerPicanimationEvent) referenced from widgetindex.o(.constdata)
 <LI><a href="#[112]">w_registerPictureBoxEvent</a> from picturebox.o(i.w_registerPictureBoxEvent) referenced from widgetindex.o(.constdata)
 <LI><a href="#[115]">w_registerPointerEvent</a> from pointer.o(i.w_registerPointerEvent) referenced from widgetindex.o(.constdata)
 <LI><a href="#[111]">w_registerProgressBarEvent</a> from progressbar.o(i.w_registerProgressBarEvent) referenced from widgetindex.o(.constdata)
 <LI><a href="#[11c]">w_registerQRcodeBoxEvent</a> from qrcodebox.o(i.w_registerQRcodeBoxEvent) referenced from widgetindex.o(.constdata)
 <LI><a href="#[10d]">w_registerRollTextBoxEvent</a> from rolltextbox.o(i.w_registerRollTextBoxEvent) referenced from widgetindex.o(.constdata)
 <LI><a href="#[11e]">w_registerRoundSliderEvent</a> from roundslider.o(i.w_registerRoundSliderEvent) referenced from widgetindex.o(.constdata)
 <LI><a href="#[117]">w_registerSliderEvent</a> from slider.o(i.w_registerSliderEvent) referenced from widgetindex.o(.constdata)
 <LI><a href="#[10c]">w_registerTextBoxEvent</a> from textbox.o(i.w_registerTextBoxEvent) referenced from widgetindex.o(.constdata)
 <LI><a href="#[114]">w_registerTouchAreaEvent</a> from toucharea.o(i.w_registerTouchAreaEvent) referenced from widgetindex.o(.constdata)
 <LI><a href="#[11d]">w_registerVirtualGifEvent</a> from virtualgif.o(i.w_registerVirtualGifEvent) referenced from widgetindex.o(.constdata)
 <LI><a href="#[102]">widget_TimeoutAdjustGtimer</a> from gtimer.o(i.widget_TimeoutAdjustGtimer) referenced from widgetindex.o(.constdata)
 <LI><a href="#[100]">widget_TimeoutAdjustNULL</a> from widgetindex.o(i.widget_TimeoutAdjustNULL) referenced 18 times from widgetindex.o(.constdata)
 <LI><a href="#[104]">widget_TimeoutAdjustPicanimation</a> from picanimation.o(i.widget_TimeoutAdjustPicanimation) referenced from widgetindex.o(.constdata)
 <LI><a href="#[101]">widget_TimeoutAdjustRollTextBox</a> from rolltextbox.o(i.widget_TimeoutAdjustRollTextBox) referenced from widgetindex.o(.constdata)
 <LI><a href="#[103]">widget_TimeoutAdjustVirtualGif</a> from virtualgif.o(i.widget_TimeoutAdjustVirtualGif) referenced from widgetindex.o(.constdata)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_y6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_y6.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_y6.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_y6.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>ADC0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_y6.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC0_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_y6.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>BITCOPY_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_y6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_y6.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>BOD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_y6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_y6.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>BOR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_y6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_y6.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>CMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_y6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_y6.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>I2C0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_y6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_y6.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>LED_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_y6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_y6.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>QSPI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_y6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_y6.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>QSPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_y6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_y6.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>QSPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_y6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_y6.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_y6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_y6.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>TIM15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_y6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_y6.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>TIM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_y6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_y6.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>UART0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_y6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_y6.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>UART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_y6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_y6.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>USB0_DMA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_y6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_y6.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>USB0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_y6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_y6.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>WKT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_y6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_y6.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>GPIO0_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, y6_it.o(i.GPIO0_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_y6.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>GPIO1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, y6_it.o(i.GPIO1_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_y6.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, y6_it.o(i.HardFault_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HardFault_Handler &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_y6.o(RESET)
</UL>
<P><STRONG><a name="[181]"></a>LCD_CLS</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, lcddriver.o(i.LCD_CLS))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_CLS
</UL>
<BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_fail
</UL>

<P><STRONG><a name="[4]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, y6_it.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_y6.o(RESET)
</UL>
<P><STRONG><a name="[271]"></a>QSPIDMA_ReadBytes</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, qspidma.o(i.QSPIDMA_ReadBytes))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = QSPIDMA_ReadBytes
</UL>
<BR>[Called By]<UL><LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TransferData_FlashToLcd
</UL>

<P><STRONG><a name="[26c]"></a>QSPIDMA_SendBytes</STRONG> (Thumb, 156 bytes, Stack size 16 bytes, qspidma.o(i.QSPIDMA_SendBytes))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = QSPIDMA_SendBytes
</UL>
<BR>[Called By]<UL><LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TransferData_SramToLcd
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TransferData_FlashToLcd
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Fill_UsePartContinuousData
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Fill_UseOneData
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Fill_UseContinuousDataSplitBit
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_ConfigReadFlashMsg
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enter_XIPCritical
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Write_DATA
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Write_CMD
</UL>

<P><STRONG><a name="[26b]"></a>QSPIDMA_WaitEnd</STRONG> (Thumb, 58 bytes, Stack size 12 bytes, qspidma.o(i.QSPIDMA_WaitEnd))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = QSPIDMA_WaitEnd
</UL>
<BR>[Called By]<UL><LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TransferData_SramToLcd
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TransferData_FlashToLcd
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Fill_UsePartContinuousData
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Fill_UseOneData
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Fill_UseContinuousDataSplitBit
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_ConfigReadFlashMsg
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enter_XIPCritical
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Write_DATA
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Write_CMD
</UL>

<P><STRONG><a name="[3]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, y6_it.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_y6.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, y6_it.o(i.SysTick_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_y6.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>TIM16_IRQHandler</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, y6_it.o(i.TIM16_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM16_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiTickHandle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_y6.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>TIM17_IRQHandler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, y6_it.o(i.TIM17_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_y6.o(RESET)
</UL>
<P><STRONG><a name="[242]"></a>TIM4_EncoderInit</STRONG> (Thumb, 152 bytes, Stack size 48 bytes, encoder.o(i.TIM4_EncoderInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = TIM4_EncoderInit &rArr; TIM_ICInit &rArr; TIM_SetIC4Prescaler &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseStructInit
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Reset
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICStructInit
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_EncoderInterfaceConfig
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[e]"></a>TIM4_IRQHandler</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, y6_it.o(i.TIM4_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = TIM4_IRQHandler &rArr; TIM_GetITStatus &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetITStatus
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearITPendingBit
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encoder_getCounter
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_y6.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>UART2_IRQHandler</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, y6_it.o(i.UART2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UART2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_y6.o(RESET)
</UL>
<P><STRONG><a name="[79]"></a>XIP_EraseFlash_Block_4K</STRONG> (Thumb, 144 bytes, Stack size 32 bytes, y6_xip_write.o(i.XIP_EraseFlash_Block_4K))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = XIP_EraseFlash_Block_4K &rArr; xip_flash_global_unprotect &rArr; xip_flash_write_status &rArr; xip_wait &rArr; xip_flash_read_status1 &rArr; xipTX &rArr; xip_DataConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xip_flash_global_unprotect
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xip_flash_erase_block_4k
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xipTX
</UL>
<BR>[Called By]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEA_PRO
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Y6_Set_Key
</UL>
<BR>[Address Reference Count : 1]<UL><LI> flashinterface.o(.constdata)
</UL>
<P><STRONG><a name="[7a]"></a>XIP_WriteFlash_NoCheck</STRONG> (Thumb, 172 bytes, Stack size 24 bytes, y6_xip_write.o(i.XIP_WriteFlash_NoCheck))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = XIP_WriteFlash_NoCheck &rArr; xip_flash_write &rArr; xip_wait &rArr; xip_flash_read_status1 &rArr; xipTX &rArr; xip_DataConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xip_flash_write
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xip_flash_global_unprotect
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xipTX
</UL>
<BR>[Called By]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEA_PRO
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Y6_Set_Key
</UL>
<BR>[Address Reference Count : 1]<UL><LI> flashinterface.o(.constdata)
</UL>
<P><STRONG><a name="[1e2]"></a>commonDelay</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, y6_it.o(i.commonDelay))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = commonDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Y6_Set_Key
</UL>

<P><STRONG><a name="[243]"></a>encoder_getCounter</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, encoder.o(i.encoder_getCounter))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = encoder_getCounter &rArr; TIM_GetCounter &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetCounter
</UL>
<BR>[Called By]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_IRQHandler
</UL>

<P><STRONG><a name="[268]"></a>enter_XIPCritical</STRONG> (Thumb, 86 bytes, Stack size 12 bytes, qspidma.o(i.enter_XIPCritical))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = enter_XIPCritical &rArr; QSPIDMA_SendBytes
</UL>
<BR>[Calls]<UL><LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPIDMA_WaitEnd
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPIDMA_SendBytes
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Fill_UseContinuousData
</UL>

<P><STRONG><a name="[270]"></a>flash_ConfigReadFlashMsg</STRONG> (Thumb, 66 bytes, Stack size 20 bytes, qspidma.o(i.flash_ConfigReadFlashMsg))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = flash_ConfigReadFlashMsg &rArr; QSPIDMA_SendBytes
</UL>
<BR>[Calls]<UL><LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPIDMA_WaitEnd
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPIDMA_SendBytes
</UL>
<BR>[Called By]<UL><LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TransferData_FlashToLcd
</UL>

<P><STRONG><a name="[68]"></a>fputc</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, y6_it.o(i.fputc))
<BR>[Address Reference Count : 1]<UL><LI> printf8.o(i.__0printf$8)
</UL>
<P><STRONG><a name="[26e]"></a>guiTickHandle</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, wtick.o(i.guiTickHandle))
<BR><BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM16_IRQHandler
</UL>

<P><STRONG><a name="[7b]"></a>loadData8FromQspi0</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, y6_xip_write.o(i.loadData8FromQspi0))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = loadData8FromQspi0
</UL>
<BR>[Address Reference Count : 1]<UL><LI> flashinterface.o(.constdata)
</UL>
<P><STRONG><a name="[26a]"></a>quit_XIPCritical</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, qspidma.o(i.quit_XIPCritical))
<BR><BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Fill_UseContinuousData
</UL>

<P><STRONG><a name="[21a]"></a>wGetSystemCount</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, wtick.o(i.wGetSystemCount))
<BR><BR>[Called By]<UL><LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiGetRefreshPicTime
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiGetRefreshColorTime
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wWidgetTimeOutHandleLoop
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_createVirtualGif
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_createRollTextBox
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_createGtimer
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_createPicanimation
</UL>

<P><STRONG><a name="[266]"></a>wGetTickDiffValue</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, wtick.o(i.wGetTickDiffValue))
<BR><BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_TimeoutAdjustVirtualGif
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_TimeoutAdjustRollTextBox
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_TimeoutAdjustGtimer
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_TimeoutAdjustPicanimation
</UL>

<P><STRONG><a name="[276]"></a>xipRX</STRONG> (Thumb, 134 bytes, Stack size 44 bytes, y6_xip_write.o(i.xipRX))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = xipRX &rArr; xip_DataConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xip_GetFlagStatus
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xip_DataConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xip_flash_read_status2
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xip_flash_read_status1
</UL>

<P><STRONG><a name="[272]"></a>xipTX</STRONG> (Thumb, 156 bytes, Stack size 44 bytes, y6_xip_write.o(i.xipTX))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = xipTX &rArr; xip_DataConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xip_GetFlagStatus
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xip_DataConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xip_flash_write_status
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xip_flash_write_enable
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xip_flash_write
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xip_flash_read_status2
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xip_flash_read_status1
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XIP_WriteFlash_NoCheck
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XIP_EraseFlash_Block_4K
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xip_flash_send_cmd_addr
</UL>

<P><STRONG><a name="[277]"></a>xip_DataConfig</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, y6_xip_write.o(i.xip_DataConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = xip_DataConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xipTX
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xipRX
</UL>

<P><STRONG><a name="[278]"></a>xip_GetFlagStatus</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, y6_xip_write.o(i.xip_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xipTX
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xipRX
</UL>

<P><STRONG><a name="[274]"></a>xip_flash_erase_block_4k</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, y6_xip_write.o(i.xip_flash_erase_block_4k))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = xip_flash_erase_block_4k &rArr; xip_wait &rArr; xip_flash_read_status1 &rArr; xipTX &rArr; xip_DataConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xip_wait
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xip_flash_write_enable
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xip_flash_send_cmd_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XIP_EraseFlash_Block_4K
</UL>

<P><STRONG><a name="[273]"></a>xip_flash_global_unprotect</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, y6_xip_write.o(i.xip_flash_global_unprotect))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = xip_flash_global_unprotect &rArr; xip_flash_write_status &rArr; xip_wait &rArr; xip_flash_read_status1 &rArr; xipTX &rArr; xip_DataConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xip_flash_write_status
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xip_flash_write_enable
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xip_flash_read_status2
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xip_flash_read_status1
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XIP_WriteFlash_NoCheck
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XIP_EraseFlash_Block_4K
</UL>

<P><STRONG><a name="[27c]"></a>xip_flash_read_status1</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, y6_xip_write.o(i.xip_flash_read_status1))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = xip_flash_read_status1 &rArr; xipTX &rArr; xip_DataConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xipTX
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xipRX
</UL>
<BR>[Called By]<UL><LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xip_wait
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xip_flash_global_unprotect
</UL>

<P><STRONG><a name="[27d]"></a>xip_flash_read_status2</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, y6_xip_write.o(i.xip_flash_read_status2))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = xip_flash_read_status2 &rArr; xipTX &rArr; xip_DataConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xipTX
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xipRX
</UL>
<BR>[Called By]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xip_flash_global_unprotect
</UL>

<P><STRONG><a name="[275]"></a>xip_flash_write</STRONG> (Thumb, 70 bytes, Stack size 40 bytes, y6_xip_write.o(i.xip_flash_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = xip_flash_write &rArr; xip_wait &rArr; xip_flash_read_status1 &rArr; xipTX &rArr; xip_DataConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xip_wait
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xip_flash_write_enable
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xipTX
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xip_flash_send_cmd_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XIP_WriteFlash_NoCheck
</UL>

<P><STRONG><a name="[279]"></a>xip_flash_write_enable</STRONG> (Thumb, 36 bytes, Stack size 12 bytes, y6_xip_write.o(i.xip_flash_write_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = xip_flash_write_enable &rArr; xipTX &rArr; xip_DataConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xipTX
</UL>
<BR>[Called By]<UL><LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xip_flash_write_status
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xip_flash_write
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xip_flash_global_unprotect
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xip_flash_erase_block_4k
</UL>

<P><STRONG><a name="[27e]"></a>xip_flash_write_status</STRONG> (Thumb, 56 bytes, Stack size 20 bytes, y6_xip_write.o(i.xip_flash_write_status))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = xip_flash_write_status &rArr; xip_wait &rArr; xip_flash_read_status1 &rArr; xipTX &rArr; xip_DataConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xip_wait
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xip_flash_write_enable
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xipTX
</UL>
<BR>[Called By]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xip_flash_global_unprotect
</UL>

<P><STRONG><a name="[27b]"></a>xip_wait</STRONG> (Thumb, 46 bytes, Stack size 20 bytes, y6_xip_write.o(i.xip_wait))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = xip_wait &rArr; xip_flash_read_status1 &rArr; xipTX &rArr; xip_DataConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xip_flash_read_status1
</UL>
<BR>[Called By]<UL><LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xip_flash_write_status
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xip_flash_write
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xip_flash_erase_block_4k
</UL>

<P><STRONG><a name="[20]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_y6.o(.text)
</UL>
<P><STRONG><a name="[282]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[27f]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[281]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[283]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[284]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[285]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[286]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[287]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[280]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[288]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[289]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[28a]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[28b]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[28c]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[149]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rotary_control
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;red_light_num
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;infrared_red
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fan
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;red_led_timeoutEvent2
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;infrared_timeoutEvent
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_dispQRcodeBox
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wDispAlphaImage
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wQueueOut
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wQueueIn
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutUnsignedInt
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutSignedInt
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiInitVariable
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Graph_DrawBackAxisGrid
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRSCodeWord
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_dispCharUseExFont
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wDispCircle_Solid
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_dispProgressBar
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_dispNumberBox
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_dispFloatNumberBox
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_ReleaseEventNumberBox
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_ReleaseEventFloatNumberBox
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_dispPicanimation
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wDispCircle
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawChar_4BPP
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawChar_2BPP
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawChar_1BPP
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_UpdateSliderValue
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[28d]"></a>__aeabi_idiv</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, idiv.o(.text), UNUSED)

<P><STRONG><a name="[148]"></a>__aeabi_idivmod</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, idiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_dispQRcodeBox
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wDrawCircle_Solid_AT
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wDrawArc_AT
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMaskingPattern
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBitLength
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CountPenalty
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reflash
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawHLine_AT
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_dispPicanimation
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Slider_dispVernier
</UL>

<P><STRONG><a name="[28e]"></a>____aeabi_memcpy8$ret$move</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmove.o(.text), UNUSED)

<P><STRONG><a name="[28f]"></a>___aeabi_memmove4$ret</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmove.o(.text), UNUSED)

<P><STRONG><a name="[290]"></a>___aeabi_memmove8$ret</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmove.o(.text), UNUSED)

<P><STRONG><a name="[16d]"></a>__aeabi_memcpy</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, memmove.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wDispAlphaImage
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inputTouchMsgHandle
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wInputMsgInit
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateKeyBoardPage
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateInputArea
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateFunctionArea
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreatePreviewArea
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateKeyBoardPage
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateInputArea
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateFunctionArea
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;internal_alloc
</UL>

<P><STRONG><a name="[215]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmove.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiDebug
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;putBitToPos
</UL>

<P><STRONG><a name="[24a]"></a>__aeabi_memmove</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmove.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memmove
</UL>
<BR>[Called By]<UL><LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qr_encode
</UL>

<P><STRONG><a name="[78]"></a>memcpy</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmove.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> memoryinterface.o(.constdata)
</UL>
<P><STRONG><a name="[291]"></a>memmove</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmove.o(.text), UNUSED)

<P><STRONG><a name="[14b]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[292]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[293]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[14a]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EncodeSourceData
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qr_encode
</UL>

<P><STRONG><a name="[197]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Y6_Set_Key
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FormatModule
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EncodeSourceData
</UL>

<P><STRONG><a name="[294]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[77]"></a>memset</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = memset
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> memoryinterface.o(.constdata)
</UL>
<P><STRONG><a name="[249]"></a>strlen</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, strlen.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qr_encode
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_dispFloatNumberBox
</UL>

<P><STRONG><a name="[179]"></a>__aeabi_uread4</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, uread4.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiJumpPage
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEA_PRO
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Decrypt_pro
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_dispQRcodeBox
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_deleteQRcodeBox
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_createQRcodeBox
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_UpdateEventQRcodeBox
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_SetTextQRcodeBox
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_ReleaseEventQRcodeBox
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_PressEventQRcodeBox
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_GetTextQRcodeBox
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_DeleteTextQRcodeBox
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_AppendTextQRcodeBox
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wGuiMsgHandleLoop
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_UpdateEventRoundSlider
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_SlidEventRoundSlider
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_ReleaseEventRoundSlider
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_PressEventRoundSlider
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_deleteGraph
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_UpdateEventGraph
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_ReleaseEventGraph
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_PressEventGraph
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Graph_DrawBackAxisGrid
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_dispCharUseExFont
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_TimeoutAdjustVirtualGif
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_TimeoutAdjustRollTextBox
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_TimeoutAdjustGtimer
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_dispTextBox
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_dispRollTextBox
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_dispNumberBox
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_dispFloatNumberBox
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_dispButton
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_dispBinaryButton
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_deleteTextBox
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_deleteRollTextBox
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_deleteGvariate
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_deleteButton
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_deleteBinaryButton
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_createTextBox
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_createRollTextBox
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_createGvariate
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_createButton
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_createBinaryButton
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_UpdateEventVirtualGif
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_UpdateEventTextBox
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_UpdateEventSlider
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_UpdateEventRollTextBox
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_UpdateEventProgressBar
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_UpdateEventPointer
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_UpdateEventPictureBox
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_UpdateEventPage
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_UpdateEventOptionBox
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_UpdateEventNumberBox
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_UpdateEventFloatNumberBox
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_UpdateEventCutPicture
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_UpdateEventButton
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_UpdateEventBinaryButton
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_TimeOutEventVirtualGif
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_TimeOutEventRollTextBox
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_TimeOutEventGtimer
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_SlidEventSlider
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_SetTextTextBox
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_SetTextRollTextBox
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_SetTextNumbertBox
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_SetTextGvariate
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_SetTextFloatNumbertBox
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_SetTextButton
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_SetTextBinaryButton
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_ReleaseEventVirtualGif
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_ReleaseEventTouchArea
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_ReleaseEventTextBox
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_ReleaseEventSlider
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_ReleaseEventRollTextBox
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_ReleaseEventProgressBar
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_ReleaseEventPointer
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_ReleaseEventPictureBox
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_ReleaseEventPage
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_ReleaseEventOptionBox
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_ReleaseEventNumberBox
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_ReleaseEventFloatNumberBox
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_ReleaseEventCutPicture
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_ReleaseEventButton
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_ReleaseEventBinaryButton
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_PressEventVirtualGif
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_PressEventTouchArea
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_PressEventTextBox
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_PressEventSlider
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_PressEventRollTextBox
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_PressEventProgressBar
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_PressEventPointer
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_PressEventPictureBox
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_PressEventPage
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_PressEventOptionBox
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_PressEventNumberBox
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_PressEventFloatNumberBox
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_PressEventCutPicture
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_PressEventButton
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_PressEventBinaryButton
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_GetTextTextBox
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_GetTextRollTextBox
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_GetTextGvariate
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_GetTextButton
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_GetTextBinaryButton
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_DeleteTextTextBox
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_DeleteTextRollTextBox
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_DeleteTextGvariate
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_DeleteTextButton
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_DeleteTextBinaryButton
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_AppendTextTextBox
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_AppendTextRollTextBox
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_AppendTextGvariate
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_AppendTextButton
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_AppendTextBinaryButton
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_TimeoutAdjustPicanimation
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_UpdateEventPicanimation
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_TimeOutEventPicanimation
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_ReleaseEventPicanimation
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_PressEventPicanimation
</UL>

<P><STRONG><a name="[295]"></a>__rt_uread4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, uread4.o(.text), UNUSED)

<P><STRONG><a name="[296]"></a>_uread4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, uread4.o(.text), UNUSED)

<P><STRONG><a name="[20e]"></a>__aeabi_uwrite4</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, uwrite4.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiJumpPage
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiSetWidgetPictureID
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_deleteQRcodeBox
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_createQRcodeBox
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inputTouchMsgHandle
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wGetResoureAddrEX
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wWidgetTimeOutHandleLoop
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiSetWidgetText
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiDeleteWidgetText
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiAppendWidgetText
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_registerRoundSliderEvent
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_createRoundSlider
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_registerGraphEvent
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_deleteGraph
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_createGraph
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_registerQRcodeBoxEvent
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_TimeoutAdjustVirtualGif
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_TimeoutAdjustRollTextBox
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_TimeoutAdjustGtimer
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_registerVirtualGifEvent
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_registerTouchAreaEvent
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_registerTextBoxEvent
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_registerSliderEvent
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_registerRollTextBoxEvent
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_registerProgressBarEvent
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_registerPointerEvent
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_registerPictureBoxEvent
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_registerPageEvent
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_registerOptionBoxEvent
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_registerNumberBoxEvent
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_registerGtimerEvent
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_registerFloatNumberBoxEvent
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_registerCutPictureEvent
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_registerButtonEvent
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_registerBinaryButtonEvent
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_dispTextBox
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_dispRollTextBox
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_dispNumberBox
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_dispFloatNumberBox
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_dispButton
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_dispBinaryButton
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_deleteTextBox
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_deleteRollTextBox
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_deleteGvariate
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_deleteButton
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_deleteBinaryButton
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_createVirtualGif
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_createTouchArea
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_createTextBox
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_createSlider
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_createRollTextBox
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_createProgressBar
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_createPointer
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_createPictureBox
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_createPage
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_createOptionBox
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_createNumberBox
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_createGvariate
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_createGtimer
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_createFloatNumberBox
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_createCutPicture
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_createButton
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_createBinaryButton
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_SetTextRollTextBox
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_SetTextNumbertBox
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_SetTextFloatNumbertBox
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_ReleaseEventButton
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_PressEventButton
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;widget_TimeoutAdjustPicanimation
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_registerPicanimationEvent
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_createPicanimation
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;leaveKeyBoard
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enterKeyBoard
</UL>

<P><STRONG><a name="[297]"></a>__rt_uwrite4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, uwrite4.o(.text), UNUSED)

<P><STRONG><a name="[298]"></a>_uwrite4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, uwrite4.o(.text), UNUSED)

<P><STRONG><a name="[14c]"></a>__aeabi_fadd</STRONG> (Thumb, 162 bytes, Stack size 24 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Slider_dispRoundVernier
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawArc_0_90
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pointer_GetNewLoc
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
</UL>

<P><STRONG><a name="[14f]"></a>__aeabi_fsub</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = __aeabi_fsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_UpdateRoundSliderValue
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawArc_0_90
</UL>

<P><STRONG><a name="[150]"></a>__aeabi_frsub</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[188]"></a>__aeabi_fmul</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, fmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Slider_dispRoundVernier
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawArc_0_90
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pointer_GetNewLoc
</UL>

<P><STRONG><a name="[151]"></a>__aeabi_fdiv</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, fdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_UpdateRoundSliderValue
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawArc_0_90
</UL>

<P><STRONG><a name="[152]"></a>__aeabi_dadd</STRONG> (Thumb, 328 bytes, Stack size 48 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = __aeabi_dadd &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawArc_0_90
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
</UL>

<P><STRONG><a name="[157]"></a>__aeabi_dsub</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawArc_0_90
</UL>

<P><STRONG><a name="[158]"></a>__aeabi_drsub</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[187]"></a>__ARM_scalbn</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, dscalb.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawArc_0_90
</UL>

<P><STRONG><a name="[299]"></a>scalbn</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, dscalb.o(.text), UNUSED)

<P><STRONG><a name="[159]"></a>__aeabi_i2f</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, fflti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_i2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_UpdateRoundSliderValue
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Slider_dispRoundVernier
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawArc_0_90
</UL>

<P><STRONG><a name="[15a]"></a>__aeabi_ui2f</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, ffltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_ui2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Slider_dispRoundVernier
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pointer_GetNewLoc
</UL>

<P><STRONG><a name="[15b]"></a>__aeabi_i2d</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, dflti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __aeabi_i2d &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawArc_0_90
</UL>

<P><STRONG><a name="[15c]"></a>__aeabi_ui2d</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, dfltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __aeabi_ui2d &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawArc_0_90
</UL>

<P><STRONG><a name="[189]"></a>__aeabi_f2iz</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, ffixi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawArc_0_90
</UL>

<P><STRONG><a name="[1c2]"></a>__aeabi_f2uiz</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, ffixui.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Slider_dispRoundVernier
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pointer_GetNewLoc
</UL>

<P><STRONG><a name="[15d]"></a>__aeabi_d2iz</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, dfixi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __aeabi_d2iz &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawArc_0_90
</UL>

<P><STRONG><a name="[18a]"></a>__aeabi_f2d</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, f2d.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawArc_0_90
</UL>

<P><STRONG><a name="[15f]"></a>__aeabi_d2f</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, d2f.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2f
</UL>
<BR>[Calls]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawArc_0_90
</UL>

<P><STRONG><a name="[18d]"></a>__aeabi_cfcmpeq</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, cfcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawArc_0_90
</UL>

<P><STRONG><a name="[18c]"></a>__aeabi_cfcmple</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, cfcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_UpdateRoundSliderValue
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawArc_0_90
</UL>

<P><STRONG><a name="[18e]"></a>__aeabi_cfrcmple</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, cfrcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_UpdateRoundSliderValue
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawArc_0_90
</UL>

<P><STRONG><a name="[160]"></a>__aeabi_uldivmod</STRONG> (Thumb, 96 bytes, Stack size 48 bytes, uldiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[153]"></a>__aeabi_llsl</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, llshl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[29a]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[15e]"></a>__aeabi_llsr</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, llushr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[29b]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[154]"></a>__aeabi_lasr</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, llsshr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_lasr
</UL>
<BR>[Called By]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[29c]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[29d]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[14e]"></a>_float_round</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, fepilogue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>

<P><STRONG><a name="[14d]"></a>_float_epilogue</STRONG> (Thumb, 114 bytes, Stack size 12 bytes, fepilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[156]"></a>_double_round</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[155]"></a>_double_epilogue</STRONG> (Thumb, 164 bytes, Stack size 48 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_clz
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[29e]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[29f]"></a>__decompress1</STRONG> (Thumb, 86 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[3f]"></a>main</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, y6_init.o(i.$Sub$$main))
<BR><BR>[Stack]<UL><LI>Max Depth = 412<LI>Call Chain = main &rArr; $Super$$main &rArr; key_control &rArr; red_light_on_off &rArr; guiJumpPage &rArr; wWidgetLoad &rArr; wGetResoureAddr &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_pro
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[226]"></a>ClearList</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, wlist.o(i.ClearList))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ClearList
</UL>
<BR>[Called By]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiJumpPage
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;leaveKeyBoard
</UL>

<P><STRONG><a name="[169]"></a>Cmd_R</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, y6_comparacommand.o(i.Cmd_R))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Cmd_R &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Y6_Set_Key
</UL>

<P><STRONG><a name="[262]"></a>CreateNode</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, wlist.o(i.CreateNode))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CreateNode
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_createQRcodeBox
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_createRoundSlider
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_createGraph
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_createVirtualGif
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_createTouchArea
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_createTextBox
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_createSlider
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_createRollTextBox
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_createProgressBar
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_createPointer
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_createPictureBox
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_createPage
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_createOptionBox
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_createNumberBox
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_createGvariate
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_createGtimer
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_createFloatNumberBox
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_createCutPicture
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_createButton
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_createBinaryButton
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_createPicanimation
</UL>

<P><STRONG><a name="[16]"></a>DMA_IRQHandler</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, y6_dma.o(i.DMA_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = DMA_IRQHandler &rArr; DmaChannelInterruptStatusBit &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DmaChannelInterruptStatusBit
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DmaChannelClearInterruptStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_y6.o(RESET)
</UL>
<P><STRONG><a name="[178]"></a>Decrypt_pro</STRONG> (Thumb, 236 bytes, Stack size 72 bytes, decrypt.o(i.Decrypt_pro))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + In Cycle
<LI>Call Chain = Decrypt_pro &rArr;  LCD_Init (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Y6_Communication_Loop
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM15_PWMInit
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_fail
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SPI_Init
</UL>

<P><STRONG><a name="[1b3]"></a>Delay_ms_LCD</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, lcd_spi_init.o(i.Delay_ms_LCD))
<BR><BR>[Called By]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SPI_0128Init
</UL>

<P><STRONG><a name="[67]"></a>DemoMain_PageEnterEvent</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, demotest01.o(i.DemoMain_PageEnterEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 292<LI>Call Chain = DemoMain_PageEnterEvent &rArr; guiCreateWidget &rArr; wCreateHadnle &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiRegisterEvent
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiCreateWidget
</UL>
<BR>[Address Reference Count : 5]<UL><LI> main.o(i.key_control)
<LI> main.o(i.page_init)
<LI> main.o(i.pump)
<LI> main.o(i.rotary_control)
<LI> demotest01.o(i.DemoTestPage_Init)
</UL>
<P><STRONG><a name="[17f]"></a>DemoTestPage_Init</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, demotest01.o(i.DemoTestPage_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 372<LI>Call Chain = DemoTestPage_Init &rArr; guiJumpPage &rArr; wWidgetLoad &rArr; wGetResoureAddr &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiJumpPage
</UL>
<BR>[Called By]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[17c]"></a>Display_fail</STRONG> (Thumb, 126 bytes, Stack size 16 bytes, decrypt.o(i.Display_fail))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = Display_fail &rArr; LCD_Draw_ColorLine &rArr; gui_dispLine_color &rArr; LCD_DrawPoint_color
</UL>
<BR>[Calls]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_CLS
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Y6_gui_dispCharUseSystemFontLib
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Draw_ColorLine
</UL>
<BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Decrypt_pro
</UL>

<P><STRONG><a name="[177]"></a>DmaChannelClearInterruptStatus</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, y6_dma.o(i.DmaChannelClearInterruptStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = DmaChannelClearInterruptStatus &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_IRQHandler
</UL>

<P><STRONG><a name="[176]"></a>DmaChannelInterruptStatusBit</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, y6_dma.o(i.DmaChannelInterruptStatusBit))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = DmaChannelInterruptStatusBit &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_IRQHandler
</UL>

<P><STRONG><a name="[185]"></a>DrawArc</STRONG> (Thumb, 272 bytes, Stack size 56 bytes, drawfigureaa.o(i.DrawArc))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = DrawArc &rArr; DrawArc_0_90 &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawArc_0_90
</UL>
<BR>[Called By]<UL><LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wDrawArc_AT
</UL>

<P><STRONG><a name="[190]"></a>DrawChar_1BPP</STRONG> (Thumb, 326 bytes, Stack size 88 bytes, drawfont.o(i.DrawChar_1BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = DrawChar_1BPP &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_dispCharUseExFont
</UL>

<P><STRONG><a name="[191]"></a>DrawChar_2BPP</STRONG> (Thumb, 406 bytes, Stack size 72 bytes, drawfont.o(i.DrawChar_2BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = DrawChar_2BPP &rArr; Get_MixColors
</UL>
<BR>[Calls]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_MixColors
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_dispCharUseExFont
</UL>

<P><STRONG><a name="[193]"></a>DrawChar_4BPP</STRONG> (Thumb, 330 bytes, Stack size 72 bytes, drawfont.o(i.DrawChar_4BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = DrawChar_4BPP &rArr; Get_MixColors
</UL>
<BR>[Calls]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_MixColors
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_dispCharUseExFont
</UL>

<P><STRONG><a name="[1d0]"></a>DrawPoint_AT</STRONG> (Thumb, 150 bytes, Stack size 24 bytes, drawfigureaa.o(i.DrawPoint_AT))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = DrawPoint_AT
</UL>
<BR>[Called By]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reflash
</UL>

<P><STRONG><a name="[1a0]"></a>GPIO_ClearPin</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, y6_gpio.o(i.GPIO_ClearPin))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GPIO_ClearPin &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_init
</UL>

<P><STRONG><a name="[1ad]"></a>GPIO_ConfigPull</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, y6_gpio.o(i.GPIO_ConfigPull))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GPIO_ConfigPull
</UL>
<BR>[Called By]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_init
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemUart2_Init
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF_UART_Init
</UL>

<P><STRONG><a name="[1a1]"></a>GPIO_Init</STRONG> (Thumb, 230 bytes, Stack size 16 bytes, y6_gpio.o(i.GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GPIO_Init &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_EncoderInit
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM15_PWMInit
</UL>

<P><STRONG><a name="[1a2]"></a>GPIO_ReadPin</STRONG> (Thumb, 234 bytes, Stack size 16 bytes, y6_gpio.o(i.GPIO_ReadPin))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GPIO_ReadPin &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Scan
</UL>

<P><STRONG><a name="[1a3]"></a>GPIO_SetPin</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, y6_gpio.o(i.GPIO_SetPin))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GPIO_SetPin &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_SPI_Driver
</UL>

<P><STRONG><a name="[1a4]"></a>GPIO_SetPinDir</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, y6_gpio.o(i.GPIO_SetPinDir))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = GPIO_SetPinDir &rArr; GPIO_SetPinMux &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetPinMux
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_init
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_init
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_SPI_Driver
</UL>

<P><STRONG><a name="[1a5]"></a>GPIO_SetPinMux</STRONG> (Thumb, 166 bytes, Stack size 24 bytes, y6_gpio.o(i.GPIO_SetPinMux))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = GPIO_SetPinMux &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetPinDir
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_init
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_init
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemUart2_Init
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF_UART_Init
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_SPI_Driver
</UL>

<P><STRONG><a name="[1a8]"></a>Graph_DrawBackAxisGrid</STRONG> (Thumb, 642 bytes, Stack size 96 bytes, graph.o(i.Graph_DrawBackAxisGrid))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = Graph_DrawBackAxisGrid &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_dispGraph
</UL>

<P><STRONG><a name="[1a9]"></a>InsertionNodeAtEnd</STRONG> (Thumb, 34 bytes, Stack size 4 bytes, wlist.o(i.InsertionNodeAtEnd))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = InsertionNodeAtEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ListIsEmpty
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_createQRcodeBox
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_createRoundSlider
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_createGraph
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_createVirtualGif
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_createTouchArea
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_createTextBox
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_createSlider
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_createRollTextBox
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_createProgressBar
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_createPointer
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_createPictureBox
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_createPage
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_createOptionBox
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_createNumberBox
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_createGvariate
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_createGtimer
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_createFloatNumberBox
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_createCutPicture
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_createButton
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_createBinaryButton
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_createPicanimation
</UL>

<P><STRONG><a name="[1ab]"></a>Key_Scan</STRONG> (Thumb, 122 bytes, Stack size 8 bytes, main.o(i.Key_Scan))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Key_Scan &rArr; GPIO_ReadPin &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadPin
</UL>
<BR>[Called By]<UL><LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_control
</UL>

<P><STRONG><a name="[1ac]"></a>Key_init</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, key.o(i.Key_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Key_init &rArr; GPIO_SetPinDir &rArr; GPIO_SetPinMux &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetPinDir
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ConfigPull
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetPinMux
</UL>
<BR>[Called By]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[182]"></a>LCD_Draw_ColorLine</STRONG> (Thumb, 182 bytes, Stack size 48 bytes, y6_drawfigure.o(i.LCD_Draw_ColorLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = LCD_Draw_ColorLine &rArr; gui_dispLine_color &rArr; LCD_DrawPoint_color
</UL>
<BR>[Calls]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dispLine_color
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawPoint_color
</UL>
<BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_fail
</UL>

<P><STRONG><a name="[17a]"></a>LCD_Init</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, lcdinit.o(i.LCD_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = LCD_Init &rArr; LCD_SPI_Init &rArr; Decrypt_pro &rArr;  LCD_Init (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SPI_Init
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_SPI_Driver
</UL>
<BR>[Called By]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Decrypt_pro
</UL>

<P><STRONG><a name="[1b1]"></a>LCD_SPI_Init</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, lcd_spi_init.o(i.LCD_SPI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = LCD_SPI_Init &rArr; Decrypt_pro &rArr;  LCD_Init (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SPI_0128Init
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Decrypt_pro
</UL>
<BR>[Called By]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL>

<P><STRONG><a name="[1b6]"></a>Led_init</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, led.o(i.Led_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Led_init &rArr; GPIO_SetPinDir &rArr; GPIO_SetPinMux &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetPinDir
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ClearPin
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetPinMux
</UL>
<BR>[Called By]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_pro
</UL>

<P><STRONG><a name="[208]"></a>LibOTP_ReadSN</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, mcudriver.o(i.LibOTP_ReadSN))
<BR><BR>[Called By]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkGuiLibMsg
</UL>

<P><STRONG><a name="[206]"></a>LibOTP_Reset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, mcudriver.o(i.LibOTP_Reset))
<BR><BR>[Called By]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkGuiLibMsg
</UL>

<P><STRONG><a name="[1aa]"></a>ListIsEmpty</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, wlist.o(i.ListIsEmpty))
<BR><BR>[Called By]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InsertionNodeAtEnd
</UL>

<P><STRONG><a name="[1b7]"></a>NVIC_Init</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, misc.o(i.NVIC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = NVIC_Init &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemHeart_Init
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemUart2_Init
</UL>

<P><STRONG><a name="[207]"></a>OTP_ReadDriverID</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, mcudriver.o(i.OTP_ReadDriverID))
<BR><BR>[Called By]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkGuiLibMsg
</UL>

<P><STRONG><a name="[1e7]"></a>OTP_ReadSN</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, y6_otp.o(i.OTP_ReadSN))
<BR><BR>[Called By]<UL><LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Trans
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEA_PRO
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Y6_Set_Key
</UL>

<P><STRONG><a name="[1b8]"></a>OTP_Reset</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, y6_otp.o(i.OTP_Reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = OTP_Reset &rArr; RCC_ResetAHBCLK
</UL>
<BR>[Calls]<UL><LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_ResetAHBCLK
</UL>
<BR>[Called By]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEA_PRO
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Y6_Set_Key
</UL>

<P><STRONG><a name="[1b9]"></a>PRINTF_UART_Init</STRONG> (Thumb, 132 bytes, Stack size 56 bytes, systemuart.o(i.PRINTF_UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = PRINTF_UART_Init &rArr; UART_Init &rArr; RCC_GetClocksFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ConfigPull
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_ResetAHBCLK
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetPinMux
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_UARTCLKSel
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_SETCLKDivider
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_SetAHBCLK
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_StructInit
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Reset
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemUart_Init
</UL>

<P><STRONG><a name="[1c3]"></a>Pointer_UpadateValue</STRONG> (Thumb, 292 bytes, Stack size 40 bytes, pointer.o(i.Pointer_UpadateValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 388<LI>Call Chain = Pointer_UpadateValue &rArr; wDispPartImage_AtLoc &rArr; wGetResoureAddr &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wDispPartImage_AtLoc
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wDispCircle_Solid
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wDispLine
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pointer_GetNewLoc
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_UpdateEventPointer
</UL>

<P><STRONG><a name="[1c7]"></a>PutHexa</STRONG> (Thumb, 74 bytes, Stack size 20 bytes, guidebug.o(i.PutHexa))
<BR><BR>[Stack]<UL><LI>Max Depth = 20 + In Cycle
<LI>Call Chain = PutHexa &rArr;  PutHexa (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutHexa
</UL>
<BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutHexa
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vsnprintf
</UL>

<P><STRONG><a name="[1c8]"></a>PutSignedInt</STRONG> (Thumb, 120 bytes, Stack size 40 bytes, guidebug.o(i.PutSignedInt))
<BR><BR>[Stack]<UL><LI>Max Depth = 52 + In Cycle
<LI>Call Chain = PutSignedInt &rArr;  PutSignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutSignedInt
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutSignedInt
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vsnprintf
</UL>

<P><STRONG><a name="[24c]"></a>PutString</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, guidebug.o(i.PutString))
<BR><BR>[Called By]<UL><LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vsnprintf
</UL>

<P><STRONG><a name="[1c9]"></a>PutUnsignedInt</STRONG> (Thumb, 72 bytes, Stack size 40 bytes, guidebug.o(i.PutUnsignedInt))
<BR><BR>[Stack]<UL><LI>Max Depth = 52 + In Cycle
<LI>Call Chain = PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutUnsignedInt
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutUnsignedInt
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vsnprintf
</UL>

<P><STRONG><a name="[1ca]"></a>QSPI_FirstBitSet</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, y6_qspi.o(i.QSPI_FirstBitSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = QSPI_FirstBitSet &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_HwInit
</UL>

<P><STRONG><a name="[1cb]"></a>QSPI_FrameLengthSet</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, y6_qspi.o(i.QSPI_FrameLengthSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = QSPI_FrameLengthSet &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_HwInit
</UL>

<P><STRONG><a name="[1b5]"></a>QSPI_HwInit</STRONG> (Thumb, 246 bytes, Stack size 24 bytes, y6_qspi.o(i.QSPI_HwInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = QSPI_HwInit &rArr; QSPI_SetPowerState &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_SetPowerState
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_ModeSet
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_FrameLengthSet
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_FirstBitSet
</UL>
<BR>[Called By]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_SPI_Driver
</UL>

<P><STRONG><a name="[1cd]"></a>QSPI_ModeSet</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, y6_qspi.o(i.QSPI_ModeSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = QSPI_ModeSet &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_HwInit
</UL>

<P><STRONG><a name="[1cc]"></a>QSPI_SetPowerState</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, y6_qspi.o(i.QSPI_SetPowerState))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = QSPI_SetPowerState &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_ResetAHBCLK
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_SetAHBCLK
</UL>
<BR>[Called By]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_HwInit
</UL>

<P><STRONG><a name="[1ce]"></a>RCC_GetClocksFreq</STRONG> (Thumb, 280 bytes, Stack size 24 bytes, y6_rcc.o(i.RCC_GetClocksFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = RCC_GetClocksFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
</UL>

<P><STRONG><a name="[1b4]"></a>RCC_ResetAHBCLK</STRONG> (Thumb, 28 bytes, Stack size 4 bytes, y6_rcc.o(i.RCC_ResetAHBCLK))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = RCC_ResetAHBCLK
</UL>
<BR>[Calls]<UL><LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_SetPRESETCTRL
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_SetAHBCLK
</UL>
<BR>[Called By]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_SetPowerState
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OTP_Reset
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemUart2_Init
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF_UART_Init
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_SPI_Driver
</UL>

<P><STRONG><a name="[1bd]"></a>RCC_SETCLKDivider</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, y6_rcc.o(i.RCC_SETCLKDivider))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = RCC_SETCLKDivider &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemUart2_Init
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF_UART_Init
</UL>

<P><STRONG><a name="[1bb]"></a>RCC_SetAHBCLK</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, y6_rcc.o(i.RCC_SetAHBCLK))
<BR><BR>[Called By]<UL><LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_ResetAHBCLK
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_SetPowerState
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemUart2_Init
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF_UART_Init
</UL>

<P><STRONG><a name="[1cf]"></a>RCC_SetPRESETCTRL</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, y6_rcc.o(i.RCC_SetPRESETCTRL))
<BR><BR>[Called By]<UL><LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_ResetAHBCLK
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Reset
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Reset
</UL>

<P><STRONG><a name="[1bc]"></a>RCC_UARTCLKSel</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, y6_rcc.o(i.RCC_UARTCLKSel))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = RCC_UARTCLKSel &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemUart2_Init
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF_UART_Init
</UL>

<P><STRONG><a name="[29]"></a>SetPwm</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, pwm.o(i.SetPwm))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SetPwm &rArr; TIM_SetCompare1 &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCompare1
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Y6_HMI_led_Opera
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcddriver.o(.constdata)
</UL>
<P><STRONG><a name="[1db]"></a>SystemHeart_Init</STRONG> (Thumb, 100 bytes, Stack size 32 bytes, systemheart.o(i.SystemHeart_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = SystemHeart_Init &rArr; TIM_TimeBaseInit &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearITPendingBit
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseStructInit
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SelectOutputTrigger
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ITConfig
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_pro
</UL>

<P><STRONG><a name="[1f]"></a>SystemInit</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, system_y6.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SystemInit &rArr; commonDelay
</UL>
<BR>[Calls]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;commonDelay
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_y6.o(.text)
</UL>
<P><STRONG><a name="[1e3]"></a>SystemUart2_Init</STRONG> (Thumb, 176 bytes, Stack size 64 bytes, systemuart.o(i.SystemUart2_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = SystemUart2_Init &rArr; UART_Init &rArr; RCC_GetClocksFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ConfigPull
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_ResetAHBCLK
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetPinMux
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_UARTCLKSel
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_SETCLKDivider
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_SetAHBCLK
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_StructInit
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Reset
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ITConfig
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemUart_Init
</UL>

<P><STRONG><a name="[1e5]"></a>SystemUart_Init</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, systemuart.o(i.SystemUart_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = SystemUart_Init &rArr; SystemUart2_Init &rArr; UART_Init &rArr; RCC_GetClocksFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemUart2_Init
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF_UART_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_pro
</UL>

<P><STRONG><a name="[1e6]"></a>TEA_PRO</STRONG> (Thumb, 200 bytes, Stack size 64 bytes, encryption.o(i.TEA_PRO))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = TEA_PRO &rArr; XIP_EraseFlash_Block_4K &rArr; xip_flash_global_unprotect &rArr; xip_flash_write_status &rArr; xip_wait &rArr; xip_flash_read_status1 &rArr; xipTX &rArr; xip_DataConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OTP_Reset
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OTP_ReadSN
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encrypt
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Trans
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XIP_WriteFlash_NoCheck
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XIP_EraseFlash_Block_4K
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Y6_Set_Key
</UL>

<P><STRONG><a name="[17b]"></a>TIM15_PWMInit</STRONG> (Thumb, 160 bytes, Stack size 80 bytes, pwm.o(i.TIM15_PWMInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = TIM15_PWMInit &rArr; TIM_TimeBaseInit &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseStructInit
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OCStructInit
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC1PreloadConfig
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC1Init
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_CtrlPWMOutputs
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BDTRStructInit
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BDTRConfig
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ARRPreloadConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Decrypt_pro
</UL>

<P><STRONG><a name="[1f0]"></a>TIM_ARRPreloadConfig</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, y6_tim.o(i.TIM_ARRPreloadConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = TIM_ARRPreloadConfig &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM15_PWMInit
</UL>

<P><STRONG><a name="[1ed]"></a>TIM_BDTRConfig</STRONG> (Thumb, 228 bytes, Stack size 16 bytes, y6_tim.o(i.TIM_BDTRConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = TIM_BDTRConfig &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM15_PWMInit
</UL>

<P><STRONG><a name="[1ec]"></a>TIM_BDTRStructInit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, y6_tim.o(i.TIM_BDTRStructInit))
<BR><BR>[Called By]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM15_PWMInit
</UL>

<P><STRONG><a name="[1df]"></a>TIM_ClearITPendingBit</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, y6_tim.o(i.TIM_ClearITPendingBit))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = TIM_ClearITPendingBit &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemHeart_Init
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_IRQHandler
</UL>

<P><STRONG><a name="[1e1]"></a>TIM_Cmd</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, y6_tim.o(i.TIM_Cmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = TIM_Cmd &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemHeart_Init
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_EncoderInit
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM15_PWMInit
</UL>

<P><STRONG><a name="[1ee]"></a>TIM_CtrlPWMOutputs</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, y6_tim.o(i.TIM_CtrlPWMOutputs))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = TIM_CtrlPWMOutputs &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM15_PWMInit
</UL>

<P><STRONG><a name="[1f1]"></a>TIM_EncoderInterfaceConfig</STRONG> (Thumb, 142 bytes, Stack size 24 bytes, y6_tim.o(i.TIM_EncoderInterfaceConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = TIM_EncoderInterfaceConfig &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_EncoderInit
</UL>

<P><STRONG><a name="[1f2]"></a>TIM_GetCounter</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, y6_tim.o(i.TIM_GetCounter))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = TIM_GetCounter &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encoder_getCounter
</UL>

<P><STRONG><a name="[1f3]"></a>TIM_GetITStatus</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, y6_tim.o(i.TIM_GetITStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = TIM_GetITStatus &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_IRQHandler
</UL>

<P><STRONG><a name="[1f4]"></a>TIM_ICInit</STRONG> (Thumb, 432 bytes, Stack size 24 bytes, y6_tim.o(i.TIM_ICInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = TIM_ICInit &rArr; TIM_SetIC4Prescaler &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI2_Config
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI1_Config
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetIC4Prescaler
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetIC3Prescaler
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetIC2Prescaler
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetIC1Prescaler
</UL>
<BR>[Called By]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_EncoderInit
</UL>

<P><STRONG><a name="[26f]"></a>TIM_ICStructInit</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, y6_tim.o(i.TIM_ICStructInit))
<BR><BR>[Called By]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_EncoderInit
</UL>

<P><STRONG><a name="[1e0]"></a>TIM_ITConfig</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, y6_tim.o(i.TIM_ITConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = TIM_ITConfig &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemHeart_Init
</UL>

<P><STRONG><a name="[1eb]"></a>TIM_OC1Init</STRONG> (Thumb, 312 bytes, Stack size 24 bytes, y6_tim.o(i.TIM_OC1Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = TIM_OC1Init &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM15_PWMInit
</UL>

<P><STRONG><a name="[1ef]"></a>TIM_OC1PreloadConfig</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, y6_tim.o(i.TIM_OC1PreloadConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = TIM_OC1PreloadConfig &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM15_PWMInit
</UL>

<P><STRONG><a name="[1ea]"></a>TIM_OCStructInit</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, y6_tim.o(i.TIM_OCStructInit))
<BR><BR>[Called By]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM15_PWMInit
</UL>

<P><STRONG><a name="[1fb]"></a>TIM_Reset</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, y6_tim.o(i.TIM_Reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = TIM_Reset &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_SetPRESETCTRL
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_EncoderInit
</UL>

<P><STRONG><a name="[1de]"></a>TIM_SelectOutputTrigger</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, y6_tim.o(i.TIM_SelectOutputTrigger))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = TIM_SelectOutputTrigger &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemHeart_Init
</UL>

<P><STRONG><a name="[1d5]"></a>TIM_SetCompare1</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, y6_tim.o(i.TIM_SetCompare1))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = TIM_SetCompare1 &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPwm
</UL>

<P><STRONG><a name="[1f7]"></a>TIM_SetIC1Prescaler</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, y6_tim.o(i.TIM_SetIC1Prescaler))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = TIM_SetIC1Prescaler &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[1f9]"></a>TIM_SetIC2Prescaler</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, y6_tim.o(i.TIM_SetIC2Prescaler))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = TIM_SetIC2Prescaler &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[1fa]"></a>TIM_SetIC3Prescaler</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, y6_tim.o(i.TIM_SetIC3Prescaler))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = TIM_SetIC3Prescaler &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[1f5]"></a>TIM_SetIC4Prescaler</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, y6_tim.o(i.TIM_SetIC4Prescaler))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = TIM_SetIC4Prescaler &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[1dd]"></a>TIM_TimeBaseInit</STRONG> (Thumb, 170 bytes, Stack size 24 bytes, y6_tim.o(i.TIM_TimeBaseInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = TIM_TimeBaseInit &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemHeart_Init
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_EncoderInit
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM15_PWMInit
</UL>

<P><STRONG><a name="[1dc]"></a>TIM_TimeBaseStructInit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, y6_tim.o(i.TIM_TimeBaseStructInit))
<BR><BR>[Called By]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemHeart_Init
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_EncoderInit
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM15_PWMInit
</UL>

<P><STRONG><a name="[1e9]"></a>Trans</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, encryption.o(i.Trans))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Trans
</UL>
<BR>[Calls]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OTP_ReadSN
</UL>
<BR>[Called By]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEA_PRO
</UL>

<P><STRONG><a name="[1c0]"></a>UART_Cmd</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, y6_usart.o(i.UART_Cmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = UART_Cmd &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemUart2_Init
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF_UART_Init
</UL>

<P><STRONG><a name="[1e4]"></a>UART_ITConfig</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, y6_usart.o(i.UART_ITConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = UART_ITConfig &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemUart2_Init
</UL>

<P><STRONG><a name="[1bf]"></a>UART_Init</STRONG> (Thumb, 448 bytes, Stack size 32 bytes, y6_usart.o(i.UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = UART_Init &rArr; RCC_GetClocksFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemUart2_Init
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF_UART_Init
</UL>

<P><STRONG><a name="[1be]"></a>UART_Reset</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, y6_usart.o(i.UART_Reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = UART_Reset &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_SetPRESETCTRL
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemUart2_Init
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF_UART_Init
</UL>

<P><STRONG><a name="[1ba]"></a>UART_StructInit</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, y6_usart.o(i.UART_StructInit))
<BR><BR>[Called By]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemUart2_Init
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF_UART_Init
</UL>

<P><STRONG><a name="[7e]"></a>Y6_ClearScreen</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, y6_comparacommand.o(i.Y6_ClearScreen))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Y6_ClearScreen &rArr; guiGetRefreshColorTime
</UL>
<BR>[Calls]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiGetRefreshColorTime
</UL>
<BR>[Address Reference Count : 1]<UL><LI> y6_command.o(.constdata)
</UL>
<P><STRONG><a name="[17d]"></a>Y6_Communication_Loop</STRONG> (Thumb, 156 bytes, Stack size 24 bytes, y6_command.o(i.Y6_Communication_Loop))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Y6_Communication_Loop
</UL>
<BR>[Called By]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Decrypt_pro
</UL>

<P><STRONG><a name="[82]"></a>Y6_HMISet_Work_Mode</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, y6_comparacommand.o(i.Y6_HMISet_Work_Mode))
<BR>[Address Reference Count : 1]<UL><LI> y6_command.o(.constdata)
</UL>
<P><STRONG><a name="[81]"></a>Y6_HMI_RESET</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, y6_comparacommand.o(i.Y6_HMI_RESET))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Y6_HMI_RESET &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> y6_command.o(.constdata)
</UL>
<P><STRONG><a name="[7f]"></a>Y6_HMI_led_Opera</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, y6_comparacommand.o(i.Y6_HMI_led_Opera))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Y6_HMI_led_Opera &rArr; SetPwm &rArr; TIM_SetCompare1 &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPwm
</UL>
<BR>[Address Reference Count : 1]<UL><LI> y6_command.o(.constdata)
</UL>
<P><STRONG><a name="[7c]"></a>Y6_Return</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, y6_comparacommand.o(i.Y6_Return))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Y6_Return
</UL>
<BR>[Address Reference Count : 1]<UL><LI> y6_command.o(.constdata)
</UL>
<P><STRONG><a name="[80]"></a>Y6_Set_Key</STRONG> (Thumb, 390 bytes, Stack size 88 bytes, decrypt.o(i.Y6_Set_Key))
<BR><BR>[Stack]<UL><LI>Max Depth = 308<LI>Call Chain = Y6_Set_Key &rArr; TEA_PRO &rArr; XIP_EraseFlash_Block_4K &rArr; xip_flash_global_unprotect &rArr; xip_flash_write_status &rArr; xip_wait &rArr; xip_flash_read_status1 &rArr; xipTX &rArr; xip_DataConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;commonDelay
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OTP_Reset
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OTP_ReadSN
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEA_PRO
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XIP_WriteFlash_NoCheck
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XIP_EraseFlash_Block_4K
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cmd_R
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> y6_command.o(.constdata)
</UL>
<P><STRONG><a name="[183]"></a>Y6_gui_dispCharUseSystemFontLib</STRONG> (Thumb, 190 bytes, Stack size 48 bytes, y6_drawchar.o(i.Y6_gui_dispCharUseSystemFontLib))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Y6_gui_dispCharUseSystemFontLib &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_fail
</UL>

<P><STRONG><a name="[1fd]"></a>__0printf$8</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, printf8.o(i.__0printf$8), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[2a0]"></a>__1printf$8</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf8.o(i.__0printf$8), UNUSED)

<P><STRONG><a name="[16a]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf8.o(i.__0printf$8))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rotary_control
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;red_light_on_off
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;red_led4
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;red_led2
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pump
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_init
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_control
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;infrared_red2
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fan2
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fan
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;en_count
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEA_PRO
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Y6_HMI_RESET
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Y6_gui_dispCharUseSystemFontLib
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cmd_R
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Y6_Set_Key
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Decrypt_pro
</UL>

<P><STRONG><a name="[1ff]"></a>__0sprintf$8</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, printf8.o(i.__0sprintf$8), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[2a1]"></a>__1sprintf$8</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf8.o(i.__0sprintf$8), UNUSED)

<P><STRONG><a name="[264]"></a>__2sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf8.o(i.__0sprintf$8))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_dispNumberBox
</UL>

<P><STRONG><a name="[161]"></a>__ARM_clz</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, depilogue.o(i.__ARM_clz))
<BR><BR>[Called By]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[1d4]"></a>__ARM_common_switch8</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, main.o(i.__ARM_common_switch8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rotary_control
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;red_led3
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;red_led
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_init
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_control
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wGuiMsgHandleLoop
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMaskingPattern
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_dispPicanimation
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inputButton12_releaseEvent
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inputButton11_releaseEvent
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inputButton10_releaseEvent
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inputButton09_releaseEvent
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inputButton08_releaseEvent
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inputButton07_releaseEvent
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inputButton06_releaseEvent
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inputButton05_releaseEvent
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inputButton04_releaseEvent
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inputButton03_releaseEvent
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inputButton02_releaseEvent
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inputButton01_releaseEvent
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetInputAreaWidgetText
</UL>

<P><STRONG><a name="[75]"></a>free</STRONG> (Thumb, 94 bytes, Stack size 12 bytes, mallocr.o(i.__free$realloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = free
</UL>
<BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Decrypt_pro
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;realloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> memoryinterface.o(.constdata)
</UL>
<P><STRONG><a name="[74]"></a>malloc</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, mallocr.o(i.__malloc$realloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;internal_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Decrypt_pro
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;realloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> memoryinterface.o(.constdata)
</UL>
<P><STRONG><a name="[238]"></a>all_zero</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, main.o(i.all_zero))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = all_zero
</UL>
<BR>[Called By]<UL><LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_control
</UL>

<P><STRONG><a name="[184]"></a>assert_failed</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, main.o(i.assert_failed))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetPinDir
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ClearPin
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DmaChannelInterruptStatusBit
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DmaChannelClearInterruptStatus
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetITStatus
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearITPendingBit
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetPinMux
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetPin
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadPin
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_UARTCLKSel
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_SETCLKDivider
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_SetPowerState
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_ModeSet
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_HwInit
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_FrameLengthSet
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_FirstBitSet
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Reset
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ITConfig
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Cmd
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetIC4Prescaler
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetIC3Prescaler
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetIC2Prescaler
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetIC1Prescaler
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCompare1
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SelectOutputTrigger
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Reset
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC1PreloadConfig
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC1Init
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ITConfig
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetCounter
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_EncoderInterfaceConfig
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_CtrlPWMOutputs
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BDTRConfig
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ARRPreloadConfig
</UL>

<P><STRONG><a name="[205]"></a>checkGuiLibMsg</STRONG> (Thumb, 196 bytes, Stack size 24 bytes, encipher.o(i.checkGuiLibMsg))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = checkGuiLibMsg
</UL>
<BR>[Calls]<UL><LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OTP_ReadDriverID
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LibOTP_Reset
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LibOTP_ReadSN
</UL>
<BR>[Called By]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiRegisterEvent
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiInitVariable
</UL>

<P><STRONG><a name="[209]"></a>en_count</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, main.o(i.en_count))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = en_count &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rotary_control
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_init
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fan2
</UL>

<P><STRONG><a name="[1e8]"></a>encrypt</STRONG> (Thumb, 132 bytes, Stack size 56 bytes, encryption.o(i.encrypt))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = encrypt
</UL>
<BR>[Called By]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEA_PRO
</UL>

<P><STRONG><a name="[20a]"></a>enterKeyBoard</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, guiprotect.o(i.enterKeyBoard))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = enterKeyBoard &rArr; leaveKeyBoard &rArr; guiSetWidgetText &rArr; wSendMsgGui &rArr; wQueueIn &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wSendMsgGui
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wGetWidgetList
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiMsgClearAll
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;leaveKeyBoard
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
</UL>
<BR>[Called By]<UL><LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wCreatenumberFuncKeyBoard1
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wCreateFullKeyBoard
</UL>

<P><STRONG><a name="[210]"></a>fan</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, main.o(i.fan))
<BR><BR>[Stack]<UL><LI>Max Depth = 388<LI>Call Chain = fan &rArr; guiJumpPage &rArr; wWidgetLoad &rArr; wGetResoureAddr &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiJumpPage
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_control
</UL>

<P><STRONG><a name="[211]"></a>fan2</STRONG> (Thumb, 128 bytes, Stack size 16 bytes, main.o(i.fan2))
<BR><BR>[Stack]<UL><LI>Max Depth = 380<LI>Call Chain = fan2 &rArr; guiJumpPage &rArr; wWidgetLoad &rArr; wGetResoureAddr &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiJumpPage
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;en_count
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_control
</UL>

<P><STRONG><a name="[245]"></a>gb2312StrinMatch</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, gb2312tab.o(i.gb2312StrinMatch))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = gb2312StrinMatch
</UL>
<BR>[Called By]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;matchGB2312IndexAndDisp
</UL>

<P><STRONG><a name="[220]"></a>getDebugBufPoint</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, guidebug.o(i.getDebugBufPoint))
<BR><BR>[Called By]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiInitVariable
</UL>

<P><STRONG><a name="[24b]"></a>getGB2312CharAddr</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, gb2312tab.o(i.getGB2312CharAddr))
<BR><BR>[Called By]<UL><LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchDispGB2312Index
</UL>

<P><STRONG><a name="[221]"></a>getQRcodeBufPoint</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, qrcodebox.o(i.getQRcodeBufPoint))
<BR><BR>[Called By]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiInitVariable
</UL>

<P><STRONG><a name="[168]"></a>guiAppendWidgetText</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, guifunc.o(i.guiAppendWidgetText))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = guiAppendWidgetText &rArr; wSendMsgGui &rArr; wQueueIn &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wSendMsgGui
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wGetWidgetNode_ByWID
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wAppendWidgetTextHandle
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inputButtonDot_releaseEvent
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inputButton09_releaseEvent
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inputButton08_releaseEvent
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inputButton07_releaseEvent
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inputButton06_releaseEvent
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inputButton05_releaseEvent
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inputButton04_releaseEvent
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inputButton03_releaseEvent
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inputButton02_releaseEvent
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inputButton01_releaseEvent
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inputButton00_releaseEvent
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inputFuncSpace_releaseEvent
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inputButton12_releaseEvent
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inputButton11_releaseEvent
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inputButton10_releaseEvent
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inputButton09_releaseEvent
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inputButton08_releaseEvent
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inputButton07_releaseEvent
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inputButton06_releaseEvent
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inputButton05_releaseEvent
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inputButton04_releaseEvent
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inputButton03_releaseEvent
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inputButton02_releaseEvent
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inputButton01_releaseEvent
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appendTextToPinYinPreview
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Alternative3_releaseEvent
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Alternative2_releaseEvent
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Alternative1_releaseEvent
</UL>

<P><STRONG><a name="[16e]"></a>guiCreateWidget</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, guifunc.o(i.guiCreateWidget))
<BR><BR>[Stack]<UL><LI>Max Depth = 284<LI>Call Chain = guiCreateWidget &rArr; wCreateHadnle &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wCreateHadnle
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;red_led_PageEnterEvent2
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;red_led_PageEnterEvent
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;infrared_PageEnterEvent2
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;infrared_PageEnterEvent
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DemoMain_PageEnterEvent
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateKeyBoardPage
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateInputArea
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateFunctionArea
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreatePreviewArea
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateKeyBoardPage
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateInputArea
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateFunctionArea
</UL>

<P><STRONG><a name="[165]"></a>guiDebug</STRONG> (Thumb, 84 bytes, Stack size 168 bytes, guidebug.o(i.guiDebug))
<BR><BR>[Stack]<UL><LI>Max Depth = 260<LI>Call Chain = guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vsnprintf
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;outs
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiRegisterEvent
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_createQRcodeBox
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wDispImageincenter
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wDispAlphaImage
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wGetResoureAddrEX
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wWidgetLoad
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wGetResoureAddr
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wDispImage
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wCreateHadnle
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wInputMsgInit
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wInitResource
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wGuiMsgInit
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiInitVariable
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_createRoundSlider
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_createGraph
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_dispCharUseExFont
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT_SystemInit
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_dispTextBox
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_dispRollTextBox
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_dispNumberBox
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_dispFloatNumberBox
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_dispButton
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_dispBinaryButton
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_createVirtualGif
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_createTextBox
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_createSlider
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_createRollTextBox
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_createProgressBar
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_createPointer
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_createPictureBox
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_createOptionBox
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_createNumberBox
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_createFloatNumberBox
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_createCutPicture
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_createButton
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_createBinaryButton
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_ReleaseEventTextBox
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_ReleaseEventRollTextBox
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_ReleaseEventNumberBox
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_ReleaseEventFloatNumberBox
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_createPicanimation
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateKeyBoardPage
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateKeyBoardPage
</UL>

<P><STRONG><a name="[218]"></a>guiDeleteWidgetText</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, guifunc.o(i.guiDeleteWidgetText))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = guiDeleteWidgetText &rArr; wSendMsgGui &rArr; wQueueIn &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wSendMsgGui
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wGetWidgetNode_ByWID
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wDeleteWidgetTextHandle
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inputFuncDelete_releaseEvent
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inputFuncDelete_releaseEvent
</UL>

<P><STRONG><a name="[1fc]"></a>guiGetRefreshColorTime</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, guifunc.o(i.guiGetRefreshColorTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = guiGetRefreshColorTime
</UL>
<BR>[Calls]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wGetSystemCount
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Y6_ClearScreen
</UL>

<P><STRONG><a name="[21b]"></a>guiGetRefreshPicTime</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, guifunc.o(i.guiGetRefreshPicTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 340<LI>Call Chain = guiGetRefreshPicTime &rArr; wDispImage &rArr; wGetResoureAddr &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wDispImage
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wGetSystemCount
</UL>
<BR>[Called By]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[167]"></a>guiGetWidgetText</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, guifunc.o(i.guiGetWidgetText))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = guiGetWidgetText &rArr; wGetWidgetTextHandle
</UL>
<BR>[Calls]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wGetWidgetTextHandle
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wGetWidgetNode_ByWID
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inputButtonDot_releaseEvent
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inputButton09_releaseEvent
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inputButton08_releaseEvent
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inputButton07_releaseEvent
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inputButton06_releaseEvent
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inputButton05_releaseEvent
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inputButton04_releaseEvent
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inputButton03_releaseEvent
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inputButton02_releaseEvent
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inputButton01_releaseEvent
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inputButton00_releaseEvent
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;leaveKeyBoard
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;matchGB2312IndexAndDisp
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inputFuncDelete_releaseEvent
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appendTextToPinYinPreview
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Alternative3_releaseEvent
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Alternative2_releaseEvent
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Alternative1_releaseEvent
</UL>

<P><STRONG><a name="[21d]"></a>guiInit</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, guiinit.o(i.guiInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 308<LI>Call Chain = guiInit &rArr; guiInitVariable &rArr; wInputMsgInit &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wInitResource
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiInitVariable
</UL>
<BR>[Called By]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[180]"></a>guiJumpPage</STRONG> (Thumb, 146 bytes, Stack size 40 bytes, guifunc.o(i.guiJumpPage))
<BR><BR>[Stack]<UL><LI>Max Depth = 364<LI>Call Chain = guiJumpPage &rArr; wWidgetLoad &rArr; wGetResoureAddr &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wWidgetLoad
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wSendMsgGui
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wRegisterEventHandle
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wGetWidgetNode_ByType
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wGetWidgetList
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wDeleteHandle
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiMsgClearAll
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearList
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Called By]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DemoTestPage_Init
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rotary_control
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;red_light_on_off
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;red_light_num
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;red_light_group
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;red_led4
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;red_led3
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;red_led2
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;red_led
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pump
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_init
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_control
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;infrared_red2
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;infrared_red
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fan2
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fan
</UL>

<P><STRONG><a name="[229]"></a>guiMainLoop</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, guifunc.o(i.guiMainLoop))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = guiMainLoop &rArr; wInputMsgHandleLoop &rArr; inputTouchMsgHandle &rArr; wGetWidgetNode_ByTwoPos
</UL>
<BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wWidgetTimeOutHandleLoop
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wInputMsgHandleLoop
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wGuiMsgHandleLoop
</UL>
<BR>[Called By]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[20b]"></a>guiMsgClearAll</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, wguimsg.o(i.guiMsgClearAll))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = guiMsgClearAll
</UL>
<BR>[Calls]<UL><LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wQueueClear
</UL>
<BR>[Called By]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiJumpPage
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;leaveKeyBoard
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enterKeyBoard
</UL>

<P><STRONG><a name="[16f]"></a>guiRegisterEvent</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, guifunc.o(i.guiRegisterEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 276<LI>Call Chain = guiRegisterEvent &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wRegisterEventHandle
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wGetWidgetNode_ByWID
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiDebug
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkGuiLibMsg
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;red_led_PageEnterEvent2
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;red_led_PageEnterEvent
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;infrared_PageEnterEvent2
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;infrared_PageEnterEvent
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DemoMain_PageEnterEvent
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateInputArea
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateFunctionArea
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreatePreviewArea
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateInputArea
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateFunctionArea
</UL>

<P><STRONG><a name="[17e]"></a>guiSetWidgetPictureID</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, guifunc.o(i.guiSetWidgetPictureID))
<BR><BR>[Stack]<UL><LI>Max Depth = 324<LI>Call Chain = guiSetWidgetPictureID &rArr; wGetResoureAddr &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wSetWidgetPictureID
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wSendMsgGui
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wGetWidgetNode_ByWID
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wGetResoureAddr
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;red_led_timeoutEvent2
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;red_led_timeoutEvent
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;infrared_timeoutEvent2
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;infrared_timeoutEvent
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DemoTest01_timeoutEvent
</UL>

<P><STRONG><a name="[170]"></a>guiSetWidgetText</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, guifunc.o(i.guiSetWidgetText))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = guiSetWidgetText &rArr; wSendMsgGui &rArr; wQueueIn &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wSetWidgetTextHandle
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wSendMsgGui
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wGetWidgetNode_ByWID
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateKeyBoardPage
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateInputArea
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateFunctionArea
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;leaveKeyBoard
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchDispGB2312Index
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inputButton12_releaseEvent
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inputButton11_releaseEvent
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inputButton10_releaseEvent
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inputButton09_releaseEvent
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inputButton08_releaseEvent
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inputButton07_releaseEvent
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inputButton06_releaseEvent
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inputButton05_releaseEvent
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inputButton04_releaseEvent
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inputButton03_releaseEvent
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inputButton02_releaseEvent
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inputButton01_releaseEvent
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetInputAreaWidgetText
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreatePreviewArea
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateKeyBoardPage
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateFunctionArea
</UL>

<P><STRONG><a name="[1ae]"></a>gui_dispLine_color</STRONG> (Thumb, 156 bytes, Stack size 48 bytes, y6_drawfigure.o(i.gui_dispLine_color))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = gui_dispLine_color &rArr; LCD_DrawPoint_color
</UL>
<BR>[Calls]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawPoint_color
</UL>
<BR>[Called By]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Draw_ColorLine
</UL>

<P><STRONG><a name="[6a]"></a>infrared_PageEnterEvent</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, demotest01.o(i.infrared_PageEnterEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 292<LI>Call Chain = infrared_PageEnterEvent &rArr; guiCreateWidget &rArr; wCreateHadnle &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiRegisterEvent
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiCreateWidget
</UL>
<BR>[Address Reference Count : 9]<UL><LI> main.o(i.fan)
<LI> main.o(i.fan2)
<LI> main.o(i.infrared_red)
<LI> main.o(i.infrared_red2)
<LI> main.o(i.page_init)
<LI> main.o(i.red_light_group)
<LI> main.o(i.red_light_num)
<LI> main.o(i.red_light_on_off)
<LI> main.o(i.rotary_control)
</UL>
<P><STRONG><a name="[6b]"></a>infrared_PageEnterEvent2</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, demotest01.o(i.infrared_PageEnterEvent2))
<BR><BR>[Stack]<UL><LI>Max Depth = 292<LI>Call Chain = infrared_PageEnterEvent2 &rArr; guiCreateWidget &rArr; wCreateHadnle &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiRegisterEvent
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiCreateWidget
</UL>
<BR>[Address Reference Count : 6]<UL><LI> main.o(i.fan)
<LI> main.o(i.infrared_red)
<LI> main.o(i.page_init)
<LI> main.o(i.pump)
<LI> main.o(i.red_light_num)
<LI> main.o(i.rotary_control)
</UL>
<P><STRONG><a name="[231]"></a>infrared_red</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, main.o(i.infrared_red))
<BR><BR>[Stack]<UL><LI>Max Depth = 380<LI>Call Chain = infrared_red &rArr; guiJumpPage &rArr; wWidgetLoad &rArr; wGetResoureAddr &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiJumpPage
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_control
</UL>

<P><STRONG><a name="[232]"></a>infrared_red2</STRONG> (Thumb, 118 bytes, Stack size 24 bytes, main.o(i.infrared_red2))
<BR><BR>[Stack]<UL><LI>Max Depth = 388<LI>Call Chain = infrared_red2 &rArr; guiJumpPage &rArr; wWidgetLoad &rArr; wGetResoureAddr &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiJumpPage
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_control
</UL>

<P><STRONG><a name="[162]"></a>init_pro</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, y6_init.o(i.init_pro))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = init_pro &rArr; SystemUart_Init &rArr; SystemUart2_Init &rArr; UART_Init &rArr; RCC_GetClocksFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemUart_Init
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemHeart_Init
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_init
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[237]"></a>key_control</STRONG> (Thumb, 158 bytes, Stack size 16 bytes, main.o(i.key_control))
<BR><BR>[Stack]<UL><LI>Max Depth = 404<LI>Call Chain = key_control &rArr; red_light_on_off &rArr; guiJumpPage &rArr; wWidgetLoad &rArr; wGetResoureAddr &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiJumpPage
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;red_light_on_off
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;red_light_num
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;red_light_group
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;red_led4
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;red_led3
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;red_led2
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;red_led
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pump
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_init
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;infrared_red2
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;infrared_red
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fan2
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fan
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;all_zero
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Scan
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[20d]"></a>leaveKeyBoard</STRONG> (Thumb, 192 bytes, Stack size 48 bytes, guiprotect.o(i.leaveKeyBoard))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = leaveKeyBoard &rArr; guiSetWidgetText &rArr; wSendMsgGui &rArr; wQueueIn &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wSendMsgGui
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wGetWidgetList
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wDeleteHandle
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiMsgClearAll
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearList
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiSetWidgetText
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiGetWidgetText
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inputFuncOK_releaseEvent
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inputFuncBack_releaseEvent
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enterKeyBoard
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inputFuncOK_releaseEvent
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inputFuncBack_releaseEvent
</UL>

<P><STRONG><a name="[163]"></a>$Super$$main</STRONG> (Thumb, 84 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 404<LI>Call Chain = $Super$$main &rArr; key_control &rArr; red_light_on_off &rArr; guiJumpPage &rArr; wWidgetLoad &rArr; wGetResoureAddr &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiMainLoop
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiInit
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiGetRefreshPicTime
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encoder_getCounter
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Y6_Communication_Loop
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_EncoderInit
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_init
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetPin
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DemoTestPage_Init
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rotary_control
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_control
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[239]"></a>page_init</STRONG> (Thumb, 136 bytes, Stack size 16 bytes, main.o(i.page_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 380<LI>Call Chain = page_init &rArr; guiJumpPage &rArr; wWidgetLoad &rArr; wGetResoureAddr &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiJumpPage
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;en_count
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_control
</UL>

<P><STRONG><a name="[32]"></a>printChar</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, systemuart.o(i.printChar))
<BR>[Address Reference Count : 1]<UL><LI> cominterface.o(.constdata)
</UL>
<P><STRONG><a name="[33]"></a>printString</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, systemuart.o(i.printString))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = printString
</UL>
<BR>[Address Reference Count : 2]<UL><LI> systemuart.o(.constdata)
<LI> cominterface.o(.constdata)
</UL>
<P><STRONG><a name="[23b]"></a>pump</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, main.o(i.pump))
<BR><BR>[Stack]<UL><LI>Max Depth = 380<LI>Call Chain = pump &rArr; guiJumpPage &rArr; wWidgetLoad &rArr; wGetResoureAddr &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiJumpPage
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_control
</UL>

<P><STRONG><a name="[248]"></a>qr_encode</STRONG> (Thumb, 642 bytes, Stack size 96 bytes, qr_encode.o(i.qr_encode))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = qr_encode &rArr; GetEncodeVersion &rArr; EncodeSourceData &rArr; GetBitLength &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;putBitToPos
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBitStream
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRSCodeWord
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEncodeVersion
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FormatModule
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memmove
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_dispQRcodeBox
</UL>

<P><STRONG><a name="[76]"></a>realloc</STRONG> (Thumb, 110 bytes, Stack size 40 bytes, mallocr.o(i.realloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = realloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;internal_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> memoryinterface.o(.constdata)
</UL>
<P><STRONG><a name="[23a]"></a>red_led</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, main.o(i.red_led))
<BR><BR>[Stack]<UL><LI>Max Depth = 380<LI>Call Chain = red_led &rArr; guiJumpPage &rArr; wWidgetLoad &rArr; wGetResoureAddr &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiJumpPage
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_control
</UL>

<P><STRONG><a name="[23c]"></a>red_led2</STRONG> (Thumb, 138 bytes, Stack size 24 bytes, main.o(i.red_led2))
<BR><BR>[Stack]<UL><LI>Max Depth = 388<LI>Call Chain = red_led2 &rArr; guiJumpPage &rArr; wWidgetLoad &rArr; wGetResoureAddr &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiJumpPage
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_control
</UL>

<P><STRONG><a name="[23d]"></a>red_led3</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, main.o(i.red_led3))
<BR><BR>[Stack]<UL><LI>Max Depth = 380<LI>Call Chain = red_led3 &rArr; guiJumpPage &rArr; wWidgetLoad &rArr; wGetResoureAddr &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiJumpPage
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_control
</UL>

<P><STRONG><a name="[23e]"></a>red_led4</STRONG> (Thumb, 140 bytes, Stack size 24 bytes, main.o(i.red_led4))
<BR><BR>[Stack]<UL><LI>Max Depth = 388<LI>Call Chain = red_led4 &rArr; guiJumpPage &rArr; wWidgetLoad &rArr; wGetResoureAddr &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiJumpPage
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_control
</UL>

<P><STRONG><a name="[6e]"></a>red_led_PageEnterEvent</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, demotest01.o(i.red_led_PageEnterEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 292<LI>Call Chain = red_led_PageEnterEvent &rArr; guiCreateWidget &rArr; wCreateHadnle &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiRegisterEvent
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiCreateWidget
</UL>
<BR>[Address Reference Count : 6]<UL><LI> main.o(i.page_init)
<LI> main.o(i.red_led)
<LI> main.o(i.red_led2)
<LI> main.o(i.red_led3)
<LI> main.o(i.red_led4)
<LI> main.o(i.rotary_control)
</UL>
<P><STRONG><a name="[6f]"></a>red_led_PageEnterEvent2</STRONG> (Thumb, 98 bytes, Stack size 8 bytes, demotest01.o(i.red_led_PageEnterEvent2))
<BR><BR>[Stack]<UL><LI>Max Depth = 292<LI>Call Chain = red_led_PageEnterEvent2 &rArr; guiCreateWidget &rArr; wCreateHadnle &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiRegisterEvent
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiCreateWidget
</UL>
<BR>[Address Reference Count : 3]<UL><LI> main.o(i.red_led)
<LI> main.o(i.red_led3)
<LI> main.o(i.rotary_control)
</UL>
<P><STRONG><a name="[23f]"></a>red_light_group</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, main.o(i.red_light_group))
<BR><BR>[Stack]<UL><LI>Max Depth = 380<LI>Call Chain = red_light_group &rArr; guiJumpPage &rArr; wWidgetLoad &rArr; wGetResoureAddr &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiJumpPage
</UL>
<BR>[Called By]<UL><LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_control
</UL>

<P><STRONG><a name="[240]"></a>red_light_num</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, main.o(i.red_light_num))
<BR><BR>[Stack]<UL><LI>Max Depth = 380<LI>Call Chain = red_light_num &rArr; guiJumpPage &rArr; wWidgetLoad &rArr; wGetResoureAddr &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiJumpPage
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_control
</UL>

<P><STRONG><a name="[241]"></a>red_light_on_off</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, main.o(i.red_light_on_off))
<BR><BR>[Stack]<UL><LI>Max Depth = 388<LI>Call Chain = red_light_on_off &rArr; guiJumpPage &rArr; wWidgetLoad &rArr; wGetResoureAddr &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiJumpPage
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_control
</UL>

<P><STRONG><a name="[244]"></a>rotary_control</STRONG> (Thumb, 206 bytes, Stack size 24 bytes, main.o(i.rotary_control))
<BR><BR>[Stack]<UL><LI>Max Depth = 388<LI>Call Chain = rotary_control &rArr; guiJumpPage &rArr; wWidgetLoad &rArr; wGetResoureAddr &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiJumpPage
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;en_count
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[213]"></a>wAppendWidgetTextHandle</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, widgethandle.o(i.wAppendWidgetTextHandle))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = wAppendWidgetTextHandle
</UL>
<BR>[Called By]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiAppendWidgetText
</UL>

<P><STRONG><a name="[24d]"></a>wCreateFullKeyBoard</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, fullfunckeyboard.o(i.wCreateFullKeyBoard))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = wCreateFullKeyBoard &rArr; enterKeyBoard &rArr; leaveKeyBoard &rArr; guiSetWidgetText &rArr; wSendMsgGui &rArr; wQueueIn &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enterKeyBoard
</UL>
<BR>[Called By]<UL><LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wCreateKeyBoard
</UL>

<P><STRONG><a name="[214]"></a>wCreateHadnle</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, widgethandle.o(i.wCreateHadnle))
<BR><BR>[Stack]<UL><LI>Max Depth = 276<LI>Call Chain = wCreateHadnle &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiDebug
</UL>
<BR>[Called By]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiCreateWidget
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wWidgetLoad
</UL>

<P><STRONG><a name="[24e]"></a>wCreateKeyBoard</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, keyboard.o(i.wCreateKeyBoard))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = wCreateKeyBoard &rArr; wCreateFullKeyBoard &rArr; enterKeyBoard &rArr; leaveKeyBoard &rArr; guiSetWidgetText &rArr; wSendMsgGui &rArr; wQueueIn &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wCreatenumberFuncKeyBoard1
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wCreateFullKeyBoard
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_ReleaseEventTextBox
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_ReleaseEventRollTextBox
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_ReleaseEventNumberBox
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_ReleaseEventFloatNumberBox
</UL>

<P><STRONG><a name="[24f]"></a>wCreatenumberFuncKeyBoard1</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, numberfunckeyboard1.o(i.wCreatenumberFuncKeyBoard1))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = wCreatenumberFuncKeyBoard1 &rArr; enterKeyBoard &rArr; leaveKeyBoard &rArr; guiSetWidgetText &rArr; wSendMsgGui &rArr; wQueueIn &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enterKeyBoard
</UL>
<BR>[Called By]<UL><LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wCreateKeyBoard
</UL>

<P><STRONG><a name="[225]"></a>wDeleteHandle</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, widgethandle.o(i.wDeleteHandle))
<BR><BR>[Called By]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiJumpPage
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;leaveKeyBoard
</UL>

<P><STRONG><a name="[219]"></a>wDeleteWidgetTextHandle</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, widgethandle.o(i.wDeleteWidgetTextHandle))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = wDeleteWidgetTextHandle
</UL>
<BR>[Called By]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiDeleteWidgetText
</UL>

<P><STRONG><a name="[1d8]"></a>wDispAlphaImage</STRONG> (Thumb, 294 bytes, Stack size 120 bytes, drawimage.o(i.wDispAlphaImage))
<BR><BR>[Stack]<UL><LI>Max Depth = 420<LI>Call Chain = wDispAlphaImage &rArr; wGetResoureAddr &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wGetResoureAddr
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiDebug
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Slider_dispRoundVernier
</UL>

<P><STRONG><a name="[250]"></a>wDispCircle</STRONG> (Thumb, 94 bytes, Stack size 32 bytes, drawfigure.o(i.wDispCircle))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = wDispCircle &rArr; Draw8Point
</UL>
<BR>[Calls]<UL><LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw8Point
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_dispOptionBox
</UL>

<P><STRONG><a name="[1c5]"></a>wDispCircle_Solid</STRONG> (Thumb, 194 bytes, Stack size 48 bytes, drawfigure.o(i.wDispCircle_Solid))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = wDispCircle_Solid &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_dispPointer
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_dispOptionBox
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pointer_UpadateValue
</UL>

<P><STRONG><a name="[25a]"></a>wDispHandle</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, widgethandle.o(i.wDispHandle))
<BR><BR>[Called By]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wGuiMsgHandleLoop
</UL>

<P><STRONG><a name="[1da]"></a>wDispImage</STRONG> (Thumb, 126 bytes, Stack size 24 bytes, drawimage.o(i.wDispImage))
<BR><BR>[Stack]<UL><LI>Max Depth = 324<LI>Call Chain = wDispImage &rArr; wGetResoureAddr &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wGetResoureAddr
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiDebug
</UL>
<BR>[Called By]<UL><LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiGetRefreshPicTime
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_dispRoundSlider
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_dispGraph
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_dispVirtualGif
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_dispTextBox
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_dispSlider
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_dispRollTextBox
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_dispPointer
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_dispPictureBox
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_dispPage
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_dispOptionBox
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_dispNumberBox
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_dispFloatNumberBox
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_dispButton
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_dispBinaryButton
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_ReleaseEventButton
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_PressEventButton
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Slider_dispVernier
</UL>

<P><STRONG><a name="[252]"></a>wDispImageincenter</STRONG> (Thumb, 170 bytes, Stack size 40 bytes, drawimage.o(i.wDispImageincenter))
<BR><BR>[Stack]<UL><LI>Max Depth = 340<LI>Call Chain = wDispImageincenter &rArr; wGetResoureAddr &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wGetResoureAddr
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiDebug
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_dispQRcodeBox
</UL>

<P><STRONG><a name="[1c6]"></a>wDispLine</STRONG> (Thumb, 156 bytes, Stack size 48 bytes, drawfigure.o(i.wDispLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = wDispLine
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_dispPointer
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pointer_UpadateValue
</UL>

<P><STRONG><a name="[1c4]"></a>wDispPartImage_AtLoc</STRONG> (Thumb, 194 bytes, Stack size 48 bytes, drawimage.o(i.wDispPartImage_AtLoc))
<BR><BR>[Stack]<UL><LI>Max Depth = 348<LI>Call Chain = wDispPartImage_AtLoc &rArr; wGetResoureAddr &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wGetResoureAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_dispRoundSlider
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_UpdateEventRoundSlider
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_dispGraph
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_dispTextBox
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_dispSlider
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_dispRollTextBox
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_dispProgressBar
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_dispPointer
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_dispOptionBox
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_dispNumberBox
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_dispFloatNumberBox
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_dispCutPicture
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_dispButton
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_dispBinaryButton
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_UpdateEventSlider
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_UpdateEventCutPicture
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_ReleaseEventButton
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_PressEventButton
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_dispPicanimation
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pointer_UpadateValue
</UL>

<P><STRONG><a name="[263]"></a>wDispRectangle</STRONG> (Thumb, 60 bytes, Stack size 40 bytes, drawfigure.o(i.wDispRectangle))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = wDispRectangle
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_dispTextBox
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_dispRollTextBox
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_dispOptionBox
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_dispNumberBox
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_dispFloatNumberBox
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_dispButton
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_dispBinaryButton
</UL>

<P><STRONG><a name="[265]"></a>wDispRectangle_Solid</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, drawfigure.o(i.wDispRectangle_Solid))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = wDispRectangle_Solid
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_dispOptionBox
</UL>

<P><STRONG><a name="[253]"></a>wDrawArc_AT</STRONG> (Thumb, 78 bytes, Stack size 40 bytes, drawfigureaa.o(i.wDrawArc_AT))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = wDrawArc_AT &rArr; DrawArc &rArr; DrawArc_0_90 &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawArc
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reflash
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT_SystemInit
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_dispRoundSlider
</UL>

<P><STRONG><a name="[1d7]"></a>wDrawCircle_Solid_AT</STRONG> (Thumb, 58 bytes, Stack size 32 bytes, drawfigureaa.o(i.wDrawCircle_Solid_AT))
<BR><BR>[Stack]<UL><LI>Max Depth = 308<LI>Call Chain = wDrawCircle_Solid_AT &rArr; AT_SystemInit &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reflash
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawCircle
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT_SystemInit
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_UpdateEventRoundSlider
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Slider_dispRoundVernier
</UL>

<P><STRONG><a name="[22e]"></a>wGetResoureAddr</STRONG> (Thumb, 164 bytes, Stack size 40 bytes, wexplorer.o(i.wGetResoureAddr))
<BR><BR>[Stack]<UL><LI>Max Depth = 300<LI>Call Chain = wGetResoureAddr &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiDebug
</UL>
<BR>[Called By]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiSetWidgetPictureID
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wDispPartImage_AtLoc
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wDispImageincenter
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wDispAlphaImage
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wWidgetLoad
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wDispImage
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_dispCharUseExFont
</UL>

<P><STRONG><a name="[254]"></a>wGetResoureAddrEX</STRONG> (Thumb, 192 bytes, Stack size 48 bytes, wexplorer.o(i.wGetResoureAddrEX))
<BR><BR>[Stack]<UL><LI>Max Depth = 308<LI>Call Chain = wGetResoureAddrEX &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiDebug
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
</UL>
<BR>[Called By]<UL><LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wResGetFontMsg
</UL>

<P><STRONG><a name="[20c]"></a>wGetWidgetList</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, widgethandle.o(i.wGetWidgetList))
<BR><BR>[Called By]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiJumpPage
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_createQRcodeBox
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wGetWidgetNode_ByTwoPos
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wGetWidgetNode_ByPos
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wGetWidgetNode_ByWID
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wGetWidgetNode_ByType
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_createRoundSlider
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_createGraph
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_createVirtualGif
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_createTouchArea
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_createTextBox
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_createSlider
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_createRollTextBox
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_createProgressBar
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_createPointer
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_createPictureBox
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_createPage
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_createOptionBox
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_createNumberBox
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_createGvariate
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_createGtimer
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_createFloatNumberBox
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_createCutPicture
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_createButton
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_createBinaryButton
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_createPicanimation
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;leaveKeyBoard
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enterKeyBoard
</UL>

<P><STRONG><a name="[234]"></a>wGetWidgetNode_ByPos</STRONG> (Thumb, 200 bytes, Stack size 32 bytes, widgetlookup.o(i.wGetWidgetNode_ByPos))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = wGetWidgetNode_ByPos
</UL>
<BR>[Calls]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wGetWidgetList
</UL>
<BR>[Called By]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inputTouchMsgHandle
</UL>

<P><STRONG><a name="[235]"></a>wGetWidgetNode_ByTwoPos</STRONG> (Thumb, 292 bytes, Stack size 56 bytes, widgetlookup.o(i.wGetWidgetNode_ByTwoPos))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = wGetWidgetNode_ByTwoPos
</UL>
<BR>[Calls]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wGetWidgetList
</UL>
<BR>[Called By]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inputTouchMsgHandle
</UL>

<P><STRONG><a name="[224]"></a>wGetWidgetNode_ByType</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, widgetlookup.o(i.wGetWidgetNode_ByType))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = wGetWidgetNode_ByType
</UL>
<BR>[Calls]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wGetWidgetList
</UL>
<BR>[Called By]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiJumpPage
</UL>

<P><STRONG><a name="[212]"></a>wGetWidgetNode_ByWID</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, widgetlookup.o(i.wGetWidgetNode_ByWID))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = wGetWidgetNode_ByWID
</UL>
<BR>[Calls]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wGetWidgetList
</UL>
<BR>[Called By]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiSetWidgetPictureID
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiRegisterEvent
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiSetWidgetText
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiGetWidgetText
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiDeleteWidgetText
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiAppendWidgetText
</UL>

<P><STRONG><a name="[21c]"></a>wGetWidgetTextHandle</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, widgethandle.o(i.wGetWidgetTextHandle))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = wGetWidgetTextHandle
</UL>
<BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiGetWidgetText
</UL>

<P><STRONG><a name="[22b]"></a>wGuiMsgHandleLoop</STRONG> (Thumb, 140 bytes, Stack size 16 bytes, wguimsg.o(i.wGuiMsgHandleLoop))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = wGuiMsgHandleLoop &rArr; wQueueOut &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wUpdateEventHandle
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wTimeOutEventHandle
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wReleaseEventHandle
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wPressEventHandle
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wDispHandle
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wQueueOut
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Called By]<UL><LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiMainLoop
</UL>

<P><STRONG><a name="[223]"></a>wGuiMsgInit</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, wguimsg.o(i.wGuiMsgInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 268<LI>Call Chain = wGuiMsgInit &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wQueueInit
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiDebug
</UL>
<BR>[Called By]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiInitVariable
</UL>

<P><STRONG><a name="[21f]"></a>wInitResource</STRONG> (Thumb, 142 bytes, Stack size 32 bytes, wexplorer.o(i.wInitResource))
<BR><BR>[Stack]<UL><LI>Max Depth = 292<LI>Call Chain = wInitResource &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiDebug
</UL>
<BR>[Called By]<UL><LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiInit
</UL>

<P><STRONG><a name="[22a]"></a>wInputMsgHandleLoop</STRONG> (Thumb, 34 bytes, Stack size 32 bytes, winputmsg.o(i.wInputMsgHandleLoop))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = wInputMsgHandleLoop &rArr; inputTouchMsgHandle &rArr; wGetWidgetNode_ByTwoPos
</UL>
<BR>[Calls]<UL><LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wQueueOut
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inputTouchMsgHandle
</UL>
<BR>[Called By]<UL><LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiMainLoop
</UL>

<P><STRONG><a name="[222]"></a>wInputMsgInit</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, winputmsg.o(i.wInputMsgInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 284<LI>Call Chain = wInputMsgInit &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wQueueInit
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiDebug
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiInitVariable
</UL>

<P><STRONG><a name="[257]"></a>wPressEventHandle</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, widgethandle.o(i.wPressEventHandle))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = wPressEventHandle
</UL>
<BR>[Called By]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wGuiMsgHandleLoop
</UL>

<P><STRONG><a name="[22d]"></a>wQueueClear</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, wqueue.o(i.wQueueClear))
<BR><BR>[Called By]<UL><LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiMsgClearAll
</UL>

<P><STRONG><a name="[25c]"></a>wQueueIn</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, wqueue.o(i.wQueueIn))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = wQueueIn &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wSendMsgGui
</UL>

<P><STRONG><a name="[25b]"></a>wQueueInit</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, wqueue.o(i.wQueueInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = wQueueInit
</UL>
<BR>[Called By]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wInputMsgInit
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wGuiMsgInit
</UL>

<P><STRONG><a name="[255]"></a>wQueueOut</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, wqueue.o(i.wQueueOut))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = wQueueOut &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wInputMsgHandleLoop
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wGuiMsgHandleLoop
</UL>

<P><STRONG><a name="[228]"></a>wRegisterEventHandle</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, widgethandle.o(i.wRegisterEventHandle))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = wRegisterEventHandle
</UL>
<BR>[Called By]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiJumpPage
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiRegisterEvent
</UL>

<P><STRONG><a name="[258]"></a>wReleaseEventHandle</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, widgethandle.o(i.wReleaseEventHandle))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = wReleaseEventHandle
</UL>
<BR>[Called By]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wGuiMsgHandleLoop
</UL>

<P><STRONG><a name="[25d]"></a>wResGetFontMsg</STRONG> (Thumb, 318 bytes, Stack size 96 bytes, wexplorer.o(i.wResGetFontMsg))
<BR><BR>[Stack]<UL><LI>Max Depth = 404<LI>Call Chain = wResGetFontMsg &rArr; wGetResoureAddrEX &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wGetResoureAddrEX
</UL>
<BR>[Called By]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_dispCharUseExFont
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_dispRollTextBox
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_createRollTextBox
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_GetStringNeedWH
</UL>

<P><STRONG><a name="[20f]"></a>wSendMsgGui</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, wguimsg.o(i.wSendMsgGui))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = wSendMsgGui &rArr; wQueueIn &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wQueueIn
</UL>
<BR>[Called By]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiJumpPage
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiSetWidgetPictureID
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inputTouchMsgHandle
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wWidgetTimeOutHandleLoop
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiSetWidgetText
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiDeleteWidgetText
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiAppendWidgetText
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;leaveKeyBoard
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enterKeyBoard
</UL>

<P><STRONG><a name="[22f]"></a>wSetWidgetPictureID</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, widgethandle.o(i.wSetWidgetPictureID))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = wSetWidgetPictureID
</UL>
<BR>[Called By]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiSetWidgetPictureID
</UL>

<P><STRONG><a name="[230]"></a>wSetWidgetTextHandle</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, widgethandle.o(i.wSetWidgetTextHandle))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = wSetWidgetTextHandle
</UL>
<BR>[Called By]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiSetWidgetText
</UL>

<P><STRONG><a name="[236]"></a>wSlidEventHandle</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, widgethandle.o(i.wSlidEventHandle))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = wSlidEventHandle
</UL>
<BR>[Called By]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inputTouchMsgHandle
</UL>

<P><STRONG><a name="[259]"></a>wTimeOutEventHandle</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, widgethandle.o(i.wTimeOutEventHandle))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = wTimeOutEventHandle
</UL>
<BR>[Called By]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wGuiMsgHandleLoop
</UL>

<P><STRONG><a name="[256]"></a>wUpdateEventHandle</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, widgethandle.o(i.wUpdateEventHandle))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = wUpdateEventHandle
</UL>
<BR>[Called By]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wGuiMsgHandleLoop
</UL>

<P><STRONG><a name="[227]"></a>wWidgetLoad</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, widgethandle.o(i.wWidgetLoad))
<BR><BR>[Stack]<UL><LI>Max Depth = 324<LI>Call Chain = wWidgetLoad &rArr; wGetResoureAddr &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wGetResoureAddr
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wCreateHadnle
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiDebug
</UL>
<BR>[Called By]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiJumpPage
</UL>

<P><STRONG><a name="[22c]"></a>wWidgetTimeOutHandleLoop</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, widgethandle.o(i.wWidgetTimeOutHandleLoop))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = wWidgetTimeOutHandleLoop &rArr; wSendMsgGui &rArr; wQueueIn &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wSendMsgGui
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wGetSystemCount
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
</UL>
<BR>[Called By]<UL><LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiMainLoop
</UL>

<P><STRONG><a name="[12e]"></a>w_AppendTextBinaryButton</STRONG> (Thumb, 106 bytes, Stack size 32 bytes, binarybutton.o(i.w_AppendTextBinaryButton))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = w_AppendTextBinaryButton
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[12c]"></a>w_AppendTextButton</STRONG> (Thumb, 106 bytes, Stack size 32 bytes, button.o(i.w_AppendTextButton))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = w_AppendTextButton
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[12d]"></a>w_AppendTextGvariate</STRONG> (Thumb, 112 bytes, Stack size 40 bytes, gvariate.o(i.w_AppendTextGvariate))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = w_AppendTextGvariate
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[129]"></a>w_AppendTextNull</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, widgetindex.o(i.w_AppendTextNull))
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[12f]"></a>w_AppendTextQRcodeBox</STRONG> (Thumb, 112 bytes, Stack size 40 bytes, qrcodebox.o(i.w_AppendTextQRcodeBox))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = w_AppendTextQRcodeBox
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[12b]"></a>w_AppendTextRollTextBox</STRONG> (Thumb, 116 bytes, Stack size 40 bytes, rolltextbox.o(i.w_AppendTextRollTextBox))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = w_AppendTextRollTextBox
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[12a]"></a>w_AppendTextTextBox</STRONG> (Thumb, 126 bytes, Stack size 40 bytes, textbox.o(i.w_AppendTextTextBox))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = w_AppendTextTextBox
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[135]"></a>w_DeleteTextBinaryButton</STRONG> (Thumb, 132 bytes, Stack size 40 bytes, binarybutton.o(i.w_DeleteTextBinaryButton))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = w_DeleteTextBinaryButton
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[133]"></a>w_DeleteTextButton</STRONG> (Thumb, 132 bytes, Stack size 40 bytes, button.o(i.w_DeleteTextButton))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = w_DeleteTextButton
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[134]"></a>w_DeleteTextGvariate</STRONG> (Thumb, 132 bytes, Stack size 40 bytes, gvariate.o(i.w_DeleteTextGvariate))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = w_DeleteTextGvariate
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[130]"></a>w_DeleteTextNull</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, widgetindex.o(i.w_DeleteTextNull))
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[136]"></a>w_DeleteTextQRcodeBox</STRONG> (Thumb, 132 bytes, Stack size 40 bytes, qrcodebox.o(i.w_DeleteTextQRcodeBox))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = w_DeleteTextQRcodeBox
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[132]"></a>w_DeleteTextRollTextBox</STRONG> (Thumb, 134 bytes, Stack size 40 bytes, rolltextbox.o(i.w_DeleteTextRollTextBox))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = w_DeleteTextRollTextBox
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[131]"></a>w_DeleteTextTextBox</STRONG> (Thumb, 134 bytes, Stack size 40 bytes, textbox.o(i.w_DeleteTextTextBox))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = w_DeleteTextTextBox
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[13c]"></a>w_GetTextBinaryButton</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, binarybutton.o(i.w_GetTextBinaryButton))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = w_GetTextBinaryButton
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[13a]"></a>w_GetTextButton</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, button.o(i.w_GetTextButton))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = w_GetTextButton
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[13b]"></a>w_GetTextGvariate</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, gvariate.o(i.w_GetTextGvariate))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = w_GetTextGvariate
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[137]"></a>w_GetTextNull</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, widgetindex.o(i.w_GetTextNull))
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[13d]"></a>w_GetTextQRcodeBox</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, qrcodebox.o(i.w_GetTextQRcodeBox))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = w_GetTextQRcodeBox
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[139]"></a>w_GetTextRollTextBox</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, rolltextbox.o(i.w_GetTextRollTextBox))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = w_GetTextRollTextBox
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[138]"></a>w_GetTextTextBox</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, textbox.o(i.w_GetTextTextBox))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = w_GetTextTextBox
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[cd]"></a>w_PressEventBinaryButton</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, binarybutton.o(i.w_PressEventBinaryButton))
<BR><BR>[Stack]<UL><LI>Max Depth = 660<LI>Call Chain = w_PressEventBinaryButton &rArr; w_dispBinaryButton &rArr; w_dispCharUseExFont &rArr; w_GetStringNeedWH &rArr; wResGetFontMsg &rArr; wGetResoureAddrEX &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_dispBinaryButton
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[c5]"></a>w_PressEventButton</STRONG> (Thumb, 422 bytes, Stack size 56 bytes, button.o(i.w_PressEventButton))
<BR><BR>[Stack]<UL><LI>Max Depth = 644<LI>Call Chain = w_PressEventButton &rArr; w_dispCharUseExFont &rArr; w_GetStringNeedWH &rArr; wResGetFontMsg &rArr; wGetResoureAddrEX &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wDispPartImage_AtLoc
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wDispImage
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_dispCharUseExFont
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[c8]"></a>w_PressEventCutPicture</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, cutpicture.o(i.w_PressEventCutPicture))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = w_PressEventCutPicture
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[c4]"></a>w_PressEventFloatNumberBox</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, floatnumberbox.o(i.w_PressEventFloatNumberBox))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = w_PressEventFloatNumberBox
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[cb]"></a>w_PressEventGraph</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, graph.o(i.w_PressEventGraph))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = w_PressEventGraph
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[bf]"></a>w_PressEventNULL</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, widgetindex.o(i.w_PressEventNULL))
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[c3]"></a>w_PressEventNumberBox</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, numberbox.o(i.w_PressEventNumberBox))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = w_PressEventNumberBox
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[ce]"></a>w_PressEventOptionBox</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, optionbox.o(i.w_PressEventOptionBox))
<BR><BR>[Stack]<UL><LI>Max Depth = 396<LI>Call Chain = w_PressEventOptionBox &rArr; w_dispOptionBox &rArr; wDispPartImage_AtLoc &rArr; wGetResoureAddr &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_dispOptionBox
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[c0]"></a>w_PressEventPage</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, page.o(i.w_PressEventPage))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = w_PressEventPage
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[d2]"></a>w_PressEventPicanimation</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, picanimation.o(i.w_PressEventPicanimation))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = w_PressEventPicanimation
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[c7]"></a>w_PressEventPictureBox</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, picturebox.o(i.w_PressEventPictureBox))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = w_PressEventPictureBox
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[ca]"></a>w_PressEventPointer</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, pointer.o(i.w_PressEventPointer))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = w_PressEventPointer
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[c6]"></a>w_PressEventProgressBar</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, progressbar.o(i.w_PressEventProgressBar))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = w_PressEventProgressBar
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[cf]"></a>w_PressEventQRcodeBox</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, qrcodebox.o(i.w_PressEventQRcodeBox))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = w_PressEventQRcodeBox
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[c2]"></a>w_PressEventRollTextBox</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, rolltextbox.o(i.w_PressEventRollTextBox))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = w_PressEventRollTextBox
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[d1]"></a>w_PressEventRoundSlider</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, roundslider.o(i.w_PressEventRoundSlider))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = w_PressEventRoundSlider
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[cc]"></a>w_PressEventSlider</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, slider.o(i.w_PressEventSlider))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = w_PressEventSlider
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[c1]"></a>w_PressEventTextBox</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, textbox.o(i.w_PressEventTextBox))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = w_PressEventTextBox
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[c9]"></a>w_PressEventTouchArea</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, toucharea.o(i.w_PressEventTouchArea))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = w_PressEventTouchArea
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[d0]"></a>w_PressEventVirtualGif</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, virtualgif.o(i.w_PressEventVirtualGif))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = w_PressEventVirtualGif
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[e1]"></a>w_ReleaseEventBinaryButton</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, binarybutton.o(i.w_ReleaseEventBinaryButton))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = w_ReleaseEventBinaryButton
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[d9]"></a>w_ReleaseEventButton</STRONG> (Thumb, 436 bytes, Stack size 56 bytes, button.o(i.w_ReleaseEventButton))
<BR><BR>[Stack]<UL><LI>Max Depth = 644<LI>Call Chain = w_ReleaseEventButton &rArr; w_dispCharUseExFont &rArr; w_GetStringNeedWH &rArr; wResGetFontMsg &rArr; wGetResoureAddrEX &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wDispPartImage_AtLoc
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wDispImage
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_dispCharUseExFont
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[dc]"></a>w_ReleaseEventCutPicture</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, cutpicture.o(i.w_ReleaseEventCutPicture))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = w_ReleaseEventCutPicture
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[d8]"></a>w_ReleaseEventFloatNumberBox</STRONG> (Thumb, 222 bytes, Stack size 48 bytes, floatnumberbox.o(i.w_ReleaseEventFloatNumberBox))
<BR><BR>[Stack]<UL><LI>Max Depth = 308<LI>Call Chain = w_ReleaseEventFloatNumberBox &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiDebug
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wCreateKeyBoard
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[df]"></a>w_ReleaseEventGraph</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, graph.o(i.w_ReleaseEventGraph))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = w_ReleaseEventGraph
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[d3]"></a>w_ReleaseEventNULL</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, widgetindex.o(i.w_ReleaseEventNULL))
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[d7]"></a>w_ReleaseEventNumberBox</STRONG> (Thumb, 126 bytes, Stack size 48 bytes, numberbox.o(i.w_ReleaseEventNumberBox))
<BR><BR>[Stack]<UL><LI>Max Depth = 308<LI>Call Chain = w_ReleaseEventNumberBox &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiDebug
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wCreateKeyBoard
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[e2]"></a>w_ReleaseEventOptionBox</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, optionbox.o(i.w_ReleaseEventOptionBox))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = w_ReleaseEventOptionBox
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[d4]"></a>w_ReleaseEventPage</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, page.o(i.w_ReleaseEventPage))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = w_ReleaseEventPage
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[e6]"></a>w_ReleaseEventPicanimation</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, picanimation.o(i.w_ReleaseEventPicanimation))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = w_ReleaseEventPicanimation
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[db]"></a>w_ReleaseEventPictureBox</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, picturebox.o(i.w_ReleaseEventPictureBox))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = w_ReleaseEventPictureBox
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[de]"></a>w_ReleaseEventPointer</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, pointer.o(i.w_ReleaseEventPointer))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = w_ReleaseEventPointer
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[da]"></a>w_ReleaseEventProgressBar</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, progressbar.o(i.w_ReleaseEventProgressBar))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = w_ReleaseEventProgressBar
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[e3]"></a>w_ReleaseEventQRcodeBox</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, qrcodebox.o(i.w_ReleaseEventQRcodeBox))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = w_ReleaseEventQRcodeBox
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[d6]"></a>w_ReleaseEventRollTextBox</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, rolltextbox.o(i.w_ReleaseEventRollTextBox))
<BR><BR>[Stack]<UL><LI>Max Depth = 276<LI>Call Chain = w_ReleaseEventRollTextBox &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiDebug
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wCreateKeyBoard
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[e5]"></a>w_ReleaseEventRoundSlider</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, roundslider.o(i.w_ReleaseEventRoundSlider))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = w_ReleaseEventRoundSlider
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[e0]"></a>w_ReleaseEventSlider</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, slider.o(i.w_ReleaseEventSlider))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = w_ReleaseEventSlider
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[d5]"></a>w_ReleaseEventTextBox</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, textbox.o(i.w_ReleaseEventTextBox))
<BR><BR>[Stack]<UL><LI>Max Depth = 276<LI>Call Chain = w_ReleaseEventTextBox &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiDebug
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wCreateKeyBoard
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[dd]"></a>w_ReleaseEventTouchArea</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, toucharea.o(i.w_ReleaseEventTouchArea))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = w_ReleaseEventTouchArea
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[e4]"></a>w_ReleaseEventVirtualGif</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, virtualgif.o(i.w_ReleaseEventVirtualGif))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = w_ReleaseEventVirtualGif
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[144]"></a>w_SetPictureIDCutPicture</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, cutpicture.o(i.w_SetPictureIDCutPicture))
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[142]"></a>w_SetPictureIDFloatNumbertBox</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, floatnumberbox.o(i.w_SetPictureIDFloatNumbertBox))
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[146]"></a>w_SetPictureIDGraph</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, graph.o(i.w_SetPictureIDGraph))
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[13e]"></a>w_SetPictureIDNull</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, widgetindex.o(i.w_SetPictureIDNull))
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[141]"></a>w_SetPictureIDNumbertBox</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, numberbox.o(i.w_SetPictureIDNumbertBox))
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[147]"></a>w_SetPictureIDPicanimation</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, picanimation.o(i.w_SetPictureIDPicanimation))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = w_SetPictureIDPicanimation
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[143]"></a>w_SetPictureIDPictureBox</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, picturebox.o(i.w_SetPictureIDPictureBox))
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[145]"></a>w_SetPictureIDPointer</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, pointer.o(i.w_SetPictureIDPointer))
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[140]"></a>w_SetPictureIDRollTextBox</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, rolltextbox.o(i.w_SetPictureIDRollTextBox))
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[13f]"></a>w_SetPictureIDTextBox</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, textbox.o(i.w_SetPictureIDTextBox))
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[127]"></a>w_SetTextBinaryButton</STRONG> (Thumb, 96 bytes, Stack size 32 bytes, binarybutton.o(i.w_SetTextBinaryButton))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = w_SetTextBinaryButton
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[125]"></a>w_SetTextButton</STRONG> (Thumb, 96 bytes, Stack size 32 bytes, button.o(i.w_SetTextButton))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = w_SetTextButton
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[124]"></a>w_SetTextFloatNumbertBox</STRONG> (Thumb, 360 bytes, Stack size 64 bytes, floatnumberbox.o(i.w_SetTextFloatNumbertBox))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = w_SetTextFloatNumbertBox
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[126]"></a>w_SetTextGvariate</STRONG> (Thumb, 102 bytes, Stack size 40 bytes, gvariate.o(i.w_SetTextGvariate))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = w_SetTextGvariate
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[120]"></a>w_SetTextNull</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, widgetindex.o(i.w_SetTextNull))
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[123]"></a>w_SetTextNumbertBox</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, numberbox.o(i.w_SetTextNumbertBox))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = w_SetTextNumbertBox
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[128]"></a>w_SetTextQRcodeBox</STRONG> (Thumb, 112 bytes, Stack size 40 bytes, qrcodebox.o(i.w_SetTextQRcodeBox))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = w_SetTextQRcodeBox
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[122]"></a>w_SetTextRollTextBox</STRONG> (Thumb, 142 bytes, Stack size 40 bytes, rolltextbox.o(i.w_SetTextRollTextBox))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = w_SetTextRollTextBox
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[121]"></a>w_SetTextTextBox</STRONG> (Thumb, 104 bytes, Stack size 40 bytes, textbox.o(i.w_SetTextTextBox))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = w_SetTextTextBox
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[e7]"></a>w_SlidEventNULL</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, widgetindex.o(i.w_SlidEventNULL))
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[e9]"></a>w_SlidEventRoundSlider</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, roundslider.o(i.w_SlidEventRoundSlider))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = w_SlidEventRoundSlider &rArr; w_UpdateRoundSliderValue &rArr; __aeabi_fsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_UpdateRoundSliderValue
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[e8]"></a>w_SlidEventSlider</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, slider.o(i.w_SlidEventSlider))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = w_SlidEventSlider &rArr; w_UpdateSliderValue &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_UpdateSliderValue
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[107]"></a>w_TimeOutEventGtimer</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, gtimer.o(i.w_TimeOutEventGtimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = w_TimeOutEventGtimer
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[105]"></a>w_TimeOutEventNULL</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, widgetindex.o(i.w_TimeOutEventNULL))
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[109]"></a>w_TimeOutEventPicanimation</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, picanimation.o(i.w_TimeOutEventPicanimation))
<BR><BR>[Stack]<UL><LI>Max Depth = 524<LI>Call Chain = w_TimeOutEventPicanimation &rArr; w_dispPicanimation &rArr; wDispPartImage_AtLoc &rArr; wGetResoureAddr &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_dispPicanimation
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[106]"></a>w_TimeOutEventRollTextBox</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, rolltextbox.o(i.w_TimeOutEventRollTextBox))
<BR><BR>[Stack]<UL><LI>Max Depth = 700<LI>Call Chain = w_TimeOutEventRollTextBox &rArr; w_dispRollTextBox &rArr; w_dispCharUseExFont &rArr; w_GetStringNeedWH &rArr; wResGetFontMsg &rArr; wGetResoureAddrEX &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_dispRollTextBox
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[108]"></a>w_TimeOutEventVirtualGif</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, virtualgif.o(i.w_TimeOutEventVirtualGif))
<BR><BR>[Stack]<UL><LI>Max Depth = 356<LI>Call Chain = w_TimeOutEventVirtualGif &rArr; w_dispVirtualGif &rArr; wDispImage &rArr; wGetResoureAddr &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_dispVirtualGif
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[b9]"></a>w_UpdateEventBinaryButton</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, binarybutton.o(i.w_UpdateEventBinaryButton))
<BR><BR>[Stack]<UL><LI>Max Depth = 660<LI>Call Chain = w_UpdateEventBinaryButton &rArr; w_dispBinaryButton &rArr; w_dispCharUseExFont &rArr; w_GetStringNeedWH &rArr; wResGetFontMsg &rArr; wGetResoureAddrEX &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_dispBinaryButton
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[b2]"></a>w_UpdateEventButton</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, button.o(i.w_UpdateEventButton))
<BR><BR>[Stack]<UL><LI>Max Depth = 652<LI>Call Chain = w_UpdateEventButton &rArr; w_dispButton &rArr; w_dispCharUseExFont &rArr; w_GetStringNeedWH &rArr; wResGetFontMsg &rArr; wGetResoureAddrEX &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_dispButton
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[b5]"></a>w_UpdateEventCutPicture</STRONG> (Thumb, 90 bytes, Stack size 48 bytes, cutpicture.o(i.w_UpdateEventCutPicture))
<BR><BR>[Stack]<UL><LI>Max Depth = 396<LI>Call Chain = w_UpdateEventCutPicture &rArr; wDispPartImage_AtLoc &rArr; wGetResoureAddr &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wDispPartImage_AtLoc
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[b1]"></a>w_UpdateEventFloatNumberBox</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, floatnumberbox.o(i.w_UpdateEventFloatNumberBox))
<BR><BR>[Stack]<UL><LI>Max Depth = 660<LI>Call Chain = w_UpdateEventFloatNumberBox &rArr; w_dispFloatNumberBox &rArr; w_dispCharUseExFont &rArr; w_GetStringNeedWH &rArr; wResGetFontMsg &rArr; wGetResoureAddrEX &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_dispFloatNumberBox
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[b7]"></a>w_UpdateEventGraph</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, graph.o(i.w_UpdateEventGraph))
<BR><BR>[Stack]<UL><LI>Max Depth = 388<LI>Call Chain = w_UpdateEventGraph &rArr; w_dispGraph &rArr; wDispPartImage_AtLoc &rArr; wGetResoureAddr &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_dispGraph
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[ac]"></a>w_UpdateEventNULL</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, widgetindex.o(i.w_UpdateEventNULL))
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[b0]"></a>w_UpdateEventNumberBox</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, numberbox.o(i.w_UpdateEventNumberBox))
<BR><BR>[Stack]<UL><LI>Max Depth = 684<LI>Call Chain = w_UpdateEventNumberBox &rArr; w_dispNumberBox &rArr; w_dispCharUseExFont &rArr; w_GetStringNeedWH &rArr; wResGetFontMsg &rArr; wGetResoureAddrEX &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_dispNumberBox
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[ba]"></a>w_UpdateEventOptionBox</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, optionbox.o(i.w_UpdateEventOptionBox))
<BR><BR>[Stack]<UL><LI>Max Depth = 396<LI>Call Chain = w_UpdateEventOptionBox &rArr; w_dispOptionBox &rArr; wDispPartImage_AtLoc &rArr; wGetResoureAddr &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_dispOptionBox
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[ad]"></a>w_UpdateEventPage</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, page.o(i.w_UpdateEventPage))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = w_UpdateEventPage
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[be]"></a>w_UpdateEventPicanimation</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, picanimation.o(i.w_UpdateEventPicanimation))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = w_UpdateEventPicanimation
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[b4]"></a>w_UpdateEventPictureBox</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, picturebox.o(i.w_UpdateEventPictureBox))
<BR><BR>[Stack]<UL><LI>Max Depth = 348<LI>Call Chain = w_UpdateEventPictureBox &rArr; w_dispPictureBox &rArr; wDispImage &rArr; wGetResoureAddr &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_dispPictureBox
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[b6]"></a>w_UpdateEventPointer</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, pointer.o(i.w_UpdateEventPointer))
<BR><BR>[Stack]<UL><LI>Max Depth = 404<LI>Call Chain = w_UpdateEventPointer &rArr; Pointer_UpadateValue &rArr; wDispPartImage_AtLoc &rArr; wGetResoureAddr &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_dispPointer
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pointer_UpadateValue
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[b3]"></a>w_UpdateEventProgressBar</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, progressbar.o(i.w_UpdateEventProgressBar))
<BR><BR>[Stack]<UL><LI>Max Depth = 444<LI>Call Chain = w_UpdateEventProgressBar &rArr; w_dispProgressBar &rArr; wDispPartImage_AtLoc &rArr; wGetResoureAddr &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_dispProgressBar
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[bb]"></a>w_UpdateEventQRcodeBox</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, qrcodebox.o(i.w_UpdateEventQRcodeBox))
<BR><BR>[Stack]<UL><LI>Max Depth = 460<LI>Call Chain = w_UpdateEventQRcodeBox &rArr; w_dispQRcodeBox &rArr; wDispImageincenter &rArr; wGetResoureAddr &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_dispQRcodeBox
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[af]"></a>w_UpdateEventRollTextBox</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, rolltextbox.o(i.w_UpdateEventRollTextBox))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = w_UpdateEventRollTextBox
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[bd]"></a>w_UpdateEventRoundSlider</STRONG> (Thumb, 348 bytes, Stack size 48 bytes, roundslider.o(i.w_UpdateEventRoundSlider))
<BR><BR>[Stack]<UL><LI>Max Depth = 532<LI>Call Chain = w_UpdateEventRoundSlider &rArr; Slider_dispRoundVernier &rArr; wDispAlphaImage &rArr; wGetResoureAddr &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wDispPartImage_AtLoc
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wDrawCircle_Solid_AT
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Slider_dispRoundVernier
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[b8]"></a>w_UpdateEventSlider</STRONG> (Thumb, 256 bytes, Stack size 48 bytes, slider.o(i.w_UpdateEventSlider))
<BR><BR>[Stack]<UL><LI>Max Depth = 404<LI>Call Chain = w_UpdateEventSlider &rArr; Slider_dispVernier &rArr; wDispImage &rArr; wGetResoureAddr &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wDispPartImage_AtLoc
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Slider_dispVernier
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[ae]"></a>w_UpdateEventTextBox</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, textbox.o(i.w_UpdateEventTextBox))
<BR><BR>[Stack]<UL><LI>Max Depth = 660<LI>Call Chain = w_UpdateEventTextBox &rArr; w_dispTextBox &rArr; w_dispCharUseExFont &rArr; w_GetStringNeedWH &rArr; wResGetFontMsg &rArr; wGetResoureAddrEX &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_dispTextBox
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[bc]"></a>w_UpdateEventVirtualGif</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, virtualgif.o(i.w_UpdateEventVirtualGif))
<BR><BR>[Stack]<UL><LI>Max Depth = 348<LI>Call Chain = w_UpdateEventVirtualGif &rArr; w_dispVirtualGif &rArr; wDispImage &rArr; wGetResoureAddr &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_dispVirtualGif
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[260]"></a>w_UpdateRoundSliderValue</STRONG> (Thumb, 606 bytes, Stack size 64 bytes, roundslider.o(i.w_UpdateRoundSliderValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = w_UpdateRoundSliderValue &rArr; __aeabi_fsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_SlidEventRoundSlider
</UL>

<P><STRONG><a name="[261]"></a>w_UpdateSliderValue</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, slider.o(i.w_UpdateSliderValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = w_UpdateSliderValue &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_SlidEventSlider
</UL>

<P><STRONG><a name="[93]"></a>w_createBinaryButton</STRONG> (Thumb, 408 bytes, Stack size 40 bytes, binarybutton.o(i.w_createBinaryButton))
<BR><BR>[Stack]<UL><LI>Max Depth = 300<LI>Call Chain = w_createBinaryButton &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InsertionNodeAtEnd
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateNode
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wGetWidgetList
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiDebug
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[89]"></a>w_createButton</STRONG> (Thumb, 394 bytes, Stack size 40 bytes, button.o(i.w_createButton))
<BR><BR>[Stack]<UL><LI>Max Depth = 300<LI>Call Chain = w_createButton &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InsertionNodeAtEnd
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateNode
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wGetWidgetList
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiDebug
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[8c]"></a>w_createCutPicture</STRONG> (Thumb, 186 bytes, Stack size 32 bytes, cutpicture.o(i.w_createCutPicture))
<BR><BR>[Stack]<UL><LI>Max Depth = 292<LI>Call Chain = w_createCutPicture &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InsertionNodeAtEnd
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateNode
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wGetWidgetList
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiDebug
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[88]"></a>w_createFloatNumberBox</STRONG> (Thumb, 250 bytes, Stack size 32 bytes, floatnumberbox.o(i.w_createFloatNumberBox))
<BR><BR>[Stack]<UL><LI>Max Depth = 292<LI>Call Chain = w_createFloatNumberBox &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InsertionNodeAtEnd
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateNode
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wGetWidgetList
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiDebug
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[8f]"></a>w_createGraph</STRONG> (Thumb, 322 bytes, Stack size 32 bytes, graph.o(i.w_createGraph))
<BR><BR>[Stack]<UL><LI>Max Depth = 292<LI>Call Chain = w_createGraph &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InsertionNodeAtEnd
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateNode
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wGetWidgetList
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiDebug
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[91]"></a>w_createGtimer</STRONG> (Thumb, 110 bytes, Stack size 32 bytes, gtimer.o(i.w_createGtimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = w_createGtimer &rArr; CreateNode
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InsertionNodeAtEnd
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateNode
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wGetWidgetList
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wGetSystemCount
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[92]"></a>w_createGvariate</STRONG> (Thumb, 244 bytes, Stack size 32 bytes, gvariate.o(i.w_createGvariate))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = w_createGvariate &rArr; CreateNode
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InsertionNodeAtEnd
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateNode
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wGetWidgetList
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[83]"></a>w_createNULL</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, widgetindex.o(i.w_createNULL))
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[87]"></a>w_createNumberBox</STRONG> (Thumb, 230 bytes, Stack size 32 bytes, numberbox.o(i.w_createNumberBox))
<BR><BR>[Stack]<UL><LI>Max Depth = 292<LI>Call Chain = w_createNumberBox &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InsertionNodeAtEnd
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateNode
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wGetWidgetList
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiDebug
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[94]"></a>w_createOptionBox</STRONG> (Thumb, 208 bytes, Stack size 32 bytes, optionbox.o(i.w_createOptionBox))
<BR><BR>[Stack]<UL><LI>Max Depth = 292<LI>Call Chain = w_createOptionBox &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InsertionNodeAtEnd
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateNode
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wGetWidgetList
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiDebug
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[84]"></a>w_createPage</STRONG> (Thumb, 138 bytes, Stack size 32 bytes, page.o(i.w_createPage))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = w_createPage &rArr; CreateNode
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InsertionNodeAtEnd
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateNode
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wGetWidgetList
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[98]"></a>w_createPicanimation</STRONG> (Thumb, 244 bytes, Stack size 32 bytes, picanimation.o(i.w_createPicanimation))
<BR><BR>[Stack]<UL><LI>Max Depth = 292<LI>Call Chain = w_createPicanimation &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InsertionNodeAtEnd
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateNode
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wGetWidgetList
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiDebug
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wGetSystemCount
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[8b]"></a>w_createPictureBox</STRONG> (Thumb, 198 bytes, Stack size 32 bytes, picturebox.o(i.w_createPictureBox))
<BR><BR>[Stack]<UL><LI>Max Depth = 292<LI>Call Chain = w_createPictureBox &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InsertionNodeAtEnd
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateNode
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wGetWidgetList
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiDebug
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[8e]"></a>w_createPointer</STRONG> (Thumb, 242 bytes, Stack size 32 bytes, pointer.o(i.w_createPointer))
<BR><BR>[Stack]<UL><LI>Max Depth = 292<LI>Call Chain = w_createPointer &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InsertionNodeAtEnd
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateNode
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wGetWidgetList
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiDebug
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[8a]"></a>w_createProgressBar</STRONG> (Thumb, 214 bytes, Stack size 32 bytes, progressbar.o(i.w_createProgressBar))
<BR><BR>[Stack]<UL><LI>Max Depth = 292<LI>Call Chain = w_createProgressBar &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InsertionNodeAtEnd
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateNode
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wGetWidgetList
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiDebug
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[95]"></a>w_createQRcodeBox</STRONG> (Thumb, 350 bytes, Stack size 40 bytes, qrcodebox.o(i.w_createQRcodeBox))
<BR><BR>[Stack]<UL><LI>Max Depth = 300<LI>Call Chain = w_createQRcodeBox &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InsertionNodeAtEnd
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateNode
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wGetWidgetList
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiDebug
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[86]"></a>w_createRollTextBox</STRONG> (Thumb, 566 bytes, Stack size 88 bytes, rolltextbox.o(i.w_createRollTextBox))
<BR><BR>[Stack]<UL><LI>Max Depth = 492<LI>Call Chain = w_createRollTextBox &rArr; wResGetFontMsg &rArr; wGetResoureAddrEX &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wResGetFontMsg
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InsertionNodeAtEnd
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateNode
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wGetWidgetList
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiDebug
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wGetSystemCount
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[97]"></a>w_createRoundSlider</STRONG> (Thumb, 300 bytes, Stack size 32 bytes, roundslider.o(i.w_createRoundSlider))
<BR><BR>[Stack]<UL><LI>Max Depth = 292<LI>Call Chain = w_createRoundSlider &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InsertionNodeAtEnd
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateNode
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wGetWidgetList
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiDebug
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[90]"></a>w_createSlider</STRONG> (Thumb, 248 bytes, Stack size 32 bytes, slider.o(i.w_createSlider))
<BR><BR>[Stack]<UL><LI>Max Depth = 292<LI>Call Chain = w_createSlider &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InsertionNodeAtEnd
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateNode
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wGetWidgetList
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiDebug
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[85]"></a>w_createTextBox</STRONG> (Thumb, 410 bytes, Stack size 40 bytes, textbox.o(i.w_createTextBox))
<BR><BR>[Stack]<UL><LI>Max Depth = 300<LI>Call Chain = w_createTextBox &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InsertionNodeAtEnd
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateNode
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wGetWidgetList
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiDebug
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[8d]"></a>w_createTouchArea</STRONG> (Thumb, 118 bytes, Stack size 32 bytes, toucharea.o(i.w_createTouchArea))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = w_createTouchArea &rArr; CreateNode
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InsertionNodeAtEnd
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateNode
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wGetWidgetList
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[96]"></a>w_createVirtualGif</STRONG> (Thumb, 240 bytes, Stack size 32 bytes, virtualgif.o(i.w_createVirtualGif))
<BR><BR>[Stack]<UL><LI>Max Depth = 292<LI>Call Chain = w_createVirtualGif &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InsertionNodeAtEnd
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateNode
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wGetWidgetList
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiDebug
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wGetSystemCount
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[fa]"></a>w_deleteBinaryButton</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, binarybutton.o(i.w_deleteBinaryButton))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = w_deleteBinaryButton
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[f0]"></a>w_deleteButton</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, button.o(i.w_deleteButton))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = w_deleteButton
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[f3]"></a>w_deleteCutPicture</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, cutpicture.o(i.w_deleteCutPicture))
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[ef]"></a>w_deleteFloatNumberBox</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, floatnumberbox.o(i.w_deleteFloatNumberBox))
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[f6]"></a>w_deleteGraph</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, graph.o(i.w_deleteGraph))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = w_deleteGraph
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[f8]"></a>w_deleteGtimer</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, gtimer.o(i.w_deleteGtimer))
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[f9]"></a>w_deleteGvariate</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, gvariate.o(i.w_deleteGvariate))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = w_deleteGvariate
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[ea]"></a>w_deleteNULL</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, widgetindex.o(i.w_deleteNULL))
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[ee]"></a>w_deleteNumberBox</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, numberbox.o(i.w_deleteNumberBox))
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[fb]"></a>w_deleteOptionBox</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, optionbox.o(i.w_deleteOptionBox))
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[eb]"></a>w_deletePage</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, page.o(i.w_deletePage))
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[ff]"></a>w_deletePicanimation</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, picanimation.o(i.w_deletePicanimation))
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[f2]"></a>w_deletePictureBox</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, picturebox.o(i.w_deletePictureBox))
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[f5]"></a>w_deletePointer</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, pointer.o(i.w_deletePointer))
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[f1]"></a>w_deleteProgressBar</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, progressbar.o(i.w_deleteProgressBar))
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[fc]"></a>w_deleteQRcodeBox</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, qrcodebox.o(i.w_deleteQRcodeBox))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = w_deleteQRcodeBox
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[ed]"></a>w_deleteRollTextBox</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, rolltextbox.o(i.w_deleteRollTextBox))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = w_deleteRollTextBox
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[fe]"></a>w_deleteRoundSlider</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, roundslider.o(i.w_deleteRoundSlider))
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[f7]"></a>w_deleteSlider</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, slider.o(i.w_deleteSlider))
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[ec]"></a>w_deleteTextBox</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, textbox.o(i.w_deleteTextBox))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = w_deleteTextBox
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[f4]"></a>w_deleteTouchArea</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, toucharea.o(i.w_deleteTouchArea))
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[fd]"></a>w_deleteVirtualGif</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, virtualgif.o(i.w_deleteVirtualGif))
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[a6]"></a>w_dispBinaryButton</STRONG> (Thumb, 684 bytes, Stack size 56 bytes, binarybutton.o(i.w_dispBinaryButton))
<BR><BR>[Stack]<UL><LI>Max Depth = 644<LI>Call Chain = w_dispBinaryButton &rArr; w_dispCharUseExFont &rArr; w_GetStringNeedWH &rArr; wResGetFontMsg &rArr; wGetResoureAddrEX &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wDispPartImage_AtLoc
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wDispImage
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiDebug
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_dispCharUseExFont
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wDispRectangle
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_UpdateEventBinaryButton
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_PressEventBinaryButton
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[9f]"></a>w_dispButton</STRONG> (Thumb, 552 bytes, Stack size 48 bytes, button.o(i.w_dispButton))
<BR><BR>[Stack]<UL><LI>Max Depth = 636<LI>Call Chain = w_dispButton &rArr; w_dispCharUseExFont &rArr; w_GetStringNeedWH &rArr; wResGetFontMsg &rArr; wGetResoureAddrEX &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wDispPartImage_AtLoc
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wDispImage
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiDebug
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_dispCharUseExFont
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wDispRectangle
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_UpdateEventButton
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[25f]"></a>w_dispCharUseExFont</STRONG> (Thumb, 824 bytes, Stack size 112 bytes, drawchar.o(i.w_dispCharUseExFont))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = w_dispCharUseExFont &rArr; w_GetStringNeedWH &rArr; wResGetFontMsg &rArr; wGetResoureAddrEX &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wResGetFontMsg
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wGetResoureAddr
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiDebug
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawChar_4BPP
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawChar_2BPP
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawChar_1BPP
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_GetStringNeedWH
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_dispTextBox
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_dispRollTextBox
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_dispNumberBox
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_dispFloatNumberBox
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_dispButton
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_dispBinaryButton
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_ReleaseEventButton
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_PressEventButton
</UL>

<P><STRONG><a name="[a2]"></a>w_dispCutPicture</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, cutpicture.o(i.w_dispCutPicture))
<BR><BR>[Stack]<UL><LI>Max Depth = 372<LI>Call Chain = w_dispCutPicture &rArr; wDispPartImage_AtLoc &rArr; wGetResoureAddr &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wDispPartImage_AtLoc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[9e]"></a>w_dispFloatNumberBox</STRONG> (Thumb, 984 bytes, Stack size 56 bytes, floatnumberbox.o(i.w_dispFloatNumberBox))
<BR><BR>[Stack]<UL><LI>Max Depth = 644<LI>Call Chain = w_dispFloatNumberBox &rArr; w_dispCharUseExFont &rArr; w_GetStringNeedWH &rArr; wResGetFontMsg &rArr; wGetResoureAddrEX &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wDispPartImage_AtLoc
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wDispImage
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiDebug
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_dispCharUseExFont
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wDispRectangle
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_UpdateEventFloatNumberBox
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[a4]"></a>w_dispGraph</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, graph.o(i.w_dispGraph))
<BR><BR>[Stack]<UL><LI>Max Depth = 372<LI>Call Chain = w_dispGraph &rArr; wDispPartImage_AtLoc &rArr; wGetResoureAddr &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wDispPartImage_AtLoc
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wDispImage
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Graph_DrawBackAxisGrid
</UL>
<BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_UpdateEventGraph
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[99]"></a>w_dispNULL</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, widgetindex.o(i.w_dispNULL))
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[9d]"></a>w_dispNumberBox</STRONG> (Thumb, 858 bytes, Stack size 80 bytes, numberbox.o(i.w_dispNumberBox))
<BR><BR>[Stack]<UL><LI>Max Depth = 668<LI>Call Chain = w_dispNumberBox &rArr; w_dispCharUseExFont &rArr; w_GetStringNeedWH &rArr; wResGetFontMsg &rArr; wGetResoureAddrEX &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wDispPartImage_AtLoc
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wDispImage
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiDebug
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_dispCharUseExFont
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wDispRectangle
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_UpdateEventNumberBox
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[a7]"></a>w_dispOptionBox</STRONG> (Thumb, 562 bytes, Stack size 32 bytes, optionbox.o(i.w_dispOptionBox))
<BR><BR>[Stack]<UL><LI>Max Depth = 380<LI>Call Chain = w_dispOptionBox &rArr; wDispPartImage_AtLoc &rArr; wGetResoureAddr &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wDispPartImage_AtLoc
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wDispImage
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wDispRectangle
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wDispCircle_Solid
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wDispRectangle_Solid
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wDispCircle
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_UpdateEventOptionBox
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_PressEventOptionBox
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[9a]"></a>w_dispPage</STRONG> (Thumb, 114 bytes, Stack size 8 bytes, page.o(i.w_dispPage))
<BR><BR>[Stack]<UL><LI>Max Depth = 332<LI>Call Chain = w_dispPage &rArr; wDispImage &rArr; wGetResoureAddr &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wDispImage
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[ab]"></a>w_dispPicanimation</STRONG> (Thumb, 3890 bytes, Stack size 152 bytes, picanimation.o(i.w_dispPicanimation))
<BR><BR>[Stack]<UL><LI>Max Depth = 500<LI>Call Chain = w_dispPicanimation &rArr; wDispPartImage_AtLoc &rArr; wGetResoureAddr &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wDispPartImage_AtLoc
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_TimeOutEventPicanimation
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[a1]"></a>w_dispPictureBox</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, picturebox.o(i.w_dispPictureBox))
<BR><BR>[Stack]<UL><LI>Max Depth = 332<LI>Call Chain = w_dispPictureBox &rArr; wDispImage &rArr; wGetResoureAddr &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wDispImage
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_UpdateEventPictureBox
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[a3]"></a>w_dispPointer</STRONG> (Thumb, 278 bytes, Stack size 32 bytes, pointer.o(i.w_dispPointer))
<BR><BR>[Stack]<UL><LI>Max Depth = 380<LI>Call Chain = w_dispPointer &rArr; wDispPartImage_AtLoc &rArr; wGetResoureAddr &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wDispPartImage_AtLoc
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wDispImage
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wDispCircle_Solid
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wDispLine
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pointer_GetNewLoc
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_UpdateEventPointer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[a0]"></a>w_dispProgressBar</STRONG> (Thumb, 388 bytes, Stack size 80 bytes, progressbar.o(i.w_dispProgressBar))
<BR><BR>[Stack]<UL><LI>Max Depth = 428<LI>Call Chain = w_dispProgressBar &rArr; wDispPartImage_AtLoc &rArr; wGetResoureAddr &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wDispPartImage_AtLoc
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_UpdateEventProgressBar
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[a8]"></a>w_dispQRcodeBox</STRONG> (Thumb, 614 bytes, Stack size 104 bytes, qrcodebox.o(i.w_dispQRcodeBox))
<BR><BR>[Stack]<UL><LI>Max Depth = 444<LI>Call Chain = w_dispQRcodeBox &rArr; wDispImageincenter &rArr; wGetResoureAddr &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wDispImageincenter
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qr_encode
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_UpdateEventQRcodeBox
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[9c]"></a>w_dispRollTextBox</STRONG> (Thumb, 1204 bytes, Stack size 96 bytes, rolltextbox.o(i.w_dispRollTextBox))
<BR><BR>[Stack]<UL><LI>Max Depth = 684<LI>Call Chain = w_dispRollTextBox &rArr; w_dispCharUseExFont &rArr; w_GetStringNeedWH &rArr; wResGetFontMsg &rArr; wGetResoureAddrEX &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wDispPartImage_AtLoc
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wResGetFontMsg
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wDispImage
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiDebug
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_dispCharUseExFont
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wDispRectangle
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_TimeOutEventRollTextBox
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[aa]"></a>w_dispRoundSlider</STRONG> (Thumb, 236 bytes, Stack size 32 bytes, roundslider.o(i.w_dispRoundSlider))
<BR><BR>[Stack]<UL><LI>Max Depth = 516<LI>Call Chain = w_dispRoundSlider &rArr; Slider_dispRoundVernier &rArr; wDispAlphaImage &rArr; wGetResoureAddr &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wDispPartImage_AtLoc
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wDispImage
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wDrawArc_AT
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Slider_dispRoundVernier
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[a5]"></a>w_dispSlider</STRONG> (Thumb, 196 bytes, Stack size 32 bytes, slider.o(i.w_dispSlider))
<BR><BR>[Stack]<UL><LI>Max Depth = 388<LI>Call Chain = w_dispSlider &rArr; Slider_dispVernier &rArr; wDispImage &rArr; wGetResoureAddr &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wDispPartImage_AtLoc
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wDispImage
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Slider_dispVernier
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[9b]"></a>w_dispTextBox</STRONG> (Thumb, 640 bytes, Stack size 56 bytes, textbox.o(i.w_dispTextBox))
<BR><BR>[Stack]<UL><LI>Max Depth = 644<LI>Call Chain = w_dispTextBox &rArr; w_dispCharUseExFont &rArr; w_GetStringNeedWH &rArr; wResGetFontMsg &rArr; wGetResoureAddrEX &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wDispPartImage_AtLoc
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wDispImage
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiDebug
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_dispCharUseExFont
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wDispRectangle
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_UpdateEventTextBox
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[a9]"></a>w_dispVirtualGif</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, virtualgif.o(i.w_dispVirtualGif))
<BR><BR>[Stack]<UL><LI>Max Depth = 332<LI>Call Chain = w_dispVirtualGif &rArr; wDispImage &rArr; wGetResoureAddr &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wDispImage
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_UpdateEventVirtualGif
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_TimeOutEventVirtualGif
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[11a]"></a>w_registerBinaryButtonEvent</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, binarybutton.o(i.w_registerBinaryButtonEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = w_registerBinaryButtonEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[110]"></a>w_registerButtonEvent</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, button.o(i.w_registerButtonEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = w_registerButtonEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[113]"></a>w_registerCutPictureEvent</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, cutpicture.o(i.w_registerCutPictureEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = w_registerCutPictureEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[10f]"></a>w_registerFloatNumberBoxEvent</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, floatnumberbox.o(i.w_registerFloatNumberBoxEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = w_registerFloatNumberBoxEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[116]"></a>w_registerGraphEvent</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, graph.o(i.w_registerGraphEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = w_registerGraphEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[118]"></a>w_registerGtimerEvent</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, gtimer.o(i.w_registerGtimerEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = w_registerGtimerEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[119]"></a>w_registerGvariateEvent</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, gvariate.o(i.w_registerGvariateEvent))
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[10a]"></a>w_registerNullEvent</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, widgetindex.o(i.w_registerNullEvent))
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[10e]"></a>w_registerNumberBoxEvent</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, numberbox.o(i.w_registerNumberBoxEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = w_registerNumberBoxEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[11b]"></a>w_registerOptionBoxEvent</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, optionbox.o(i.w_registerOptionBoxEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = w_registerOptionBoxEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[10b]"></a>w_registerPageEvent</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, page.o(i.w_registerPageEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = w_registerPageEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[11f]"></a>w_registerPicanimationEvent</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, picanimation.o(i.w_registerPicanimationEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = w_registerPicanimationEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[112]"></a>w_registerPictureBoxEvent</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, picturebox.o(i.w_registerPictureBoxEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = w_registerPictureBoxEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[115]"></a>w_registerPointerEvent</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, pointer.o(i.w_registerPointerEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = w_registerPointerEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[111]"></a>w_registerProgressBarEvent</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, progressbar.o(i.w_registerProgressBarEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = w_registerProgressBarEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[11c]"></a>w_registerQRcodeBoxEvent</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, qrcodebox.o(i.w_registerQRcodeBoxEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = w_registerQRcodeBoxEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[10d]"></a>w_registerRollTextBoxEvent</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, rolltextbox.o(i.w_registerRollTextBoxEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = w_registerRollTextBoxEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[11e]"></a>w_registerRoundSliderEvent</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, roundslider.o(i.w_registerRoundSliderEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = w_registerRoundSliderEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[117]"></a>w_registerSliderEvent</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, slider.o(i.w_registerSliderEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = w_registerSliderEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[10c]"></a>w_registerTextBoxEvent</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, textbox.o(i.w_registerTextBoxEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = w_registerTextBoxEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[114]"></a>w_registerTouchAreaEvent</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, toucharea.o(i.w_registerTouchAreaEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = w_registerTouchAreaEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[11d]"></a>w_registerVirtualGifEvent</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, virtualgif.o(i.w_registerVirtualGifEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = w_registerVirtualGifEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[102]"></a>widget_TimeoutAdjustGtimer</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, gtimer.o(i.widget_TimeoutAdjustGtimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = widget_TimeoutAdjustGtimer
</UL>
<BR>[Calls]<UL><LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wGetTickDiffValue
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[100]"></a>widget_TimeoutAdjustNULL</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, widgetindex.o(i.widget_TimeoutAdjustNULL))
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[104]"></a>widget_TimeoutAdjustPicanimation</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, picanimation.o(i.widget_TimeoutAdjustPicanimation))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = widget_TimeoutAdjustPicanimation
</UL>
<BR>[Calls]<UL><LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wGetTickDiffValue
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[101]"></a>widget_TimeoutAdjustRollTextBox</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, rolltextbox.o(i.widget_TimeoutAdjustRollTextBox))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = widget_TimeoutAdjustRollTextBox
</UL>
<BR>[Calls]<UL><LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wGetTickDiffValue
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL>
<P><STRONG><a name="[103]"></a>widget_TimeoutAdjustVirtualGif</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, virtualgif.o(i.widget_TimeoutAdjustVirtualGif))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = widget_TimeoutAdjustVirtualGif
</UL>
<BR>[Calls]<UL><LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wGetTickDiffValue
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetindex.o(.constdata)
</UL><P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[1f6]"></a>TI1_Config</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, y6_tim.o(i.TI1_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TI1_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[1f8]"></a>TI2_Config</STRONG> (Thumb, 42 bytes, Stack size 20 bytes, y6_tim.o(i.TI2_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TI2_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[27]"></a>LCD_DisplayOff</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, lcddriver.o(i.LCD_DisplayOff))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = LCD_DisplayOff &rArr; LCD_Write_CMD &rArr; QSPIDMA_SendBytes
</UL>
<BR>[Calls]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Write_CMD
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcddriver.o(.constdata)
</UL>
<P><STRONG><a name="[26]"></a>LCD_DisplayOn</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, lcddriver.o(i.LCD_DisplayOn))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = LCD_DisplayOn &rArr; LCD_Write_CMD &rArr; QSPIDMA_SendBytes
</UL>
<BR>[Calls]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Write_CMD
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcddriver.o(.constdata)
</UL>
<P><STRONG><a name="[22]"></a>LCD_Read_DATA</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcddriver.o(i.LCD_Read_DATA))
<BR>[Address Reference Count : 1]<UL><LI> lcddriver.o(.constdata)
</UL>
<P><STRONG><a name="[25]"></a>LCD_Scan_Dir</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, lcddriver.o(i.LCD_Scan_Dir))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = LCD_Scan_Dir &rArr; LCD_WriteReg &rArr; LCD_Write_CMD &rArr; QSPIDMA_SendBytes
</UL>
<BR>[Calls]<UL><LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteReg
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcddriver.o(.constdata)
</UL>
<P><STRONG><a name="[28]"></a>LCD_Scroll</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, lcddriver.o(i.LCD_Scroll))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = LCD_Scroll &rArr; LCD_Write_CMD &rArr; QSPIDMA_SendBytes
</UL>
<BR>[Calls]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Write_DATA
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Write_CMD
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcddriver.o(.constdata)
</UL>
<P><STRONG><a name="[24]"></a>LCD_SetCursor</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, lcddriver.o(i.LCD_SetCursor))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = LCD_SetCursor &rArr; LCD_Write_CMD &rArr; QSPIDMA_SendBytes
</UL>
<BR>[Calls]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Write_DATA
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Write_CMD
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcddriver.o(.constdata)
</UL>
<P><STRONG><a name="[26d]"></a>LCD_WriteReg</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, lcddriver.o(i.LCD_WriteReg))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = LCD_WriteReg &rArr; LCD_Write_CMD &rArr; QSPIDMA_SendBytes
</UL>
<BR>[Calls]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Write_DATA
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Write_CMD
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Scan_Dir
</UL>

<P><STRONG><a name="[23]"></a>LCD_Write_CMD</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, lcddriver.o(i.LCD_Write_CMD))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = LCD_Write_CMD &rArr; QSPIDMA_SendBytes
</UL>
<BR>[Calls]<UL><LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPIDMA_WaitEnd
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPIDMA_SendBytes
</UL>
<BR>[Called By]<UL><LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteReg
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetCursor
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Scroll
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayOn
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayOff
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcddriver.o(.constdata)
</UL>
<P><STRONG><a name="[21]"></a>LCD_Write_DATA</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, lcddriver.o(i.LCD_Write_DATA))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = LCD_Write_DATA &rArr; QSPIDMA_SendBytes
</UL>
<BR>[Calls]<UL><LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPIDMA_WaitEnd
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPIDMA_SendBytes
</UL>
<BR>[Called By]<UL><LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteReg
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetCursor
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Scroll
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcddriver.o(.constdata)
</UL>
<P><STRONG><a name="[1b0]"></a>Lcd_SPI_Driver</STRONG> (Thumb, 152 bytes, Stack size 48 bytes, lcdinit.o(i.Lcd_SPI_Driver))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = Lcd_SPI_Driver &rArr; GPIO_SetPinDir &rArr; GPIO_SetPinMux &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetPinDir
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_ResetAHBCLK
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetPinMux
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetPin
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_HwInit
</UL>
<BR>[Called By]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL>

<P><STRONG><a name="[27a]"></a>xip_flash_send_cmd_addr</STRONG> (Thumb, 26 bytes, Stack size 4 bytes, y6_xip_write.o(i.xip_flash_send_cmd_addr))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = xip_flash_send_cmd_addr &rArr; xipTX &rArr; xip_DataConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xipTX
</UL>
<BR>[Called By]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xip_flash_write
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xip_flash_erase_block_4k
</UL>

<P><STRONG><a name="[31]"></a>LCD_Clear</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, lcdinterface.o(i.LCD_Clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = LCD_Clear &rArr; LCD_Fill_UseOneData &rArr; QSPIDMA_SendBytes
</UL>
<BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Fill_UseOneData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcdinterface.o(.constdata)
</UL>
<P><STRONG><a name="[2a]"></a>LCD_DrawPoint</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, lcdinterface.o(i.LCD_DrawPoint))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = LCD_DrawPoint &rArr; LCD_Fill_UseOneData &rArr; QSPIDMA_SendBytes
</UL>
<BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Fill_UseOneData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcdinterface.o(.constdata)
</UL>
<P><STRONG><a name="[2c]"></a>LCD_Fill</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, lcdinterface.o(i.LCD_Fill))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = LCD_Fill &rArr; LCD_Fill_UseOneData &rArr; QSPIDMA_SendBytes
</UL>
<BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Fill_UseOneData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcdinterface.o(.constdata)
</UL>
<P><STRONG><a name="[2e]"></a>LCD_Fill_UseContinuousData</STRONG> (Thumb, 100 bytes, Stack size 40 bytes, lcdinterface.o(i.LCD_Fill_UseContinuousData))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = LCD_Fill_UseContinuousData &rArr; TransferData_FlashToLcd &rArr; flash_ConfigReadFlashMsg &rArr; QSPIDMA_SendBytes
</UL>
<BR>[Calls]<UL><LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TransferData_SramToLcd
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TransferData_FlashToLcd
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;quit_XIPCritical
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enter_XIPCritical
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcdinterface.o(.constdata)
</UL>
<P><STRONG><a name="[30]"></a>LCD_Fill_UseContinuousDataSplitBit</STRONG> (Thumb, 318 bytes, Stack size 56 bytes, lcdinterface.o(i.LCD_Fill_UseContinuousDataSplitBit))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = LCD_Fill_UseContinuousDataSplitBit &rArr; QSPIDMA_SendBytes
</UL>
<BR>[Calls]<UL><LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPIDMA_WaitEnd
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPIDMA_SendBytes
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcdinterface.o(.constdata)
</UL>
<P><STRONG><a name="[2d]"></a>LCD_Fill_UseOneData</STRONG> (Thumb, 100 bytes, Stack size 40 bytes, lcdinterface.o(i.LCD_Fill_UseOneData))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = LCD_Fill_UseOneData &rArr; QSPIDMA_SendBytes
</UL>
<BR>[Calls]<UL><LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPIDMA_WaitEnd
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPIDMA_SendBytes
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Fill
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawPoint
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcdinterface.o(.constdata)
</UL>
<P><STRONG><a name="[2f]"></a>LCD_Fill_UsePartContinuousData</STRONG> (Thumb, 300 bytes, Stack size 56 bytes, lcdinterface.o(i.LCD_Fill_UsePartContinuousData))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = LCD_Fill_UsePartContinuousData &rArr; TransferData_SramToLcd &rArr; QSPIDMA_SendBytes
</UL>
<BR>[Calls]<UL><LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TransferData_SramToLcd
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPIDMA_WaitEnd
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPIDMA_SendBytes
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcdinterface.o(.constdata)
</UL>
<P><STRONG><a name="[2b]"></a>LCD_ReadPoint</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcdinterface.o(i.LCD_ReadPoint))
<BR>[Address Reference Count : 1]<UL><LI> lcdinterface.o(.constdata)
</UL>
<P><STRONG><a name="[269]"></a>TransferData_FlashToLcd</STRONG> (Thumb, 164 bytes, Stack size 24 bytes, lcdinterface.o(i.TransferData_FlashToLcd))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = TransferData_FlashToLcd &rArr; flash_ConfigReadFlashMsg &rArr; QSPIDMA_SendBytes
</UL>
<BR>[Calls]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_ConfigReadFlashMsg
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPIDMA_ReadBytes
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPIDMA_WaitEnd
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPIDMA_SendBytes
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Fill_UseContinuousData
</UL>

<P><STRONG><a name="[267]"></a>TransferData_SramToLcd</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, lcdinterface.o(i.TransferData_SramToLcd))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = TransferData_SramToLcd &rArr; QSPIDMA_SendBytes
</UL>
<BR>[Calls]<UL><LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPIDMA_WaitEnd
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPIDMA_SendBytes
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Fill_UsePartContinuousData
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Fill_UseContinuousData
</UL>

<P><STRONG><a name="[3e]"></a>clearIutput</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, cominterface.o(i.clearIutput))
<BR>[Address Reference Count : 1]<UL><LI> cominterface.o(.constdata)
</UL>
<P><STRONG><a name="[3d]"></a>clearOutput</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, cominterface.o(i.clearOutput))
<BR>[Address Reference Count : 1]<UL><LI> cominterface.o(.constdata)
</UL>
<P><STRONG><a name="[3a]"></a>inputChar</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, cominterface.o(i.inputChar))
<BR>[Address Reference Count : 1]<UL><LI> cominterface.o(.constdata)
</UL>
<P><STRONG><a name="[3c]"></a>inputEnd</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, cominterface.o(i.inputEnd))
<BR>[Address Reference Count : 1]<UL><LI> cominterface.o(.constdata)
</UL>
<P><STRONG><a name="[3b]"></a>inputString</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, cominterface.o(i.inputString))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = inputString
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cominterface.o(.constdata)
</UL>
<P><STRONG><a name="[37]"></a>returnInputBuff</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, cominterface.o(i.returnInputBuff))
<BR>[Address Reference Count : 1]<UL><LI> cominterface.o(.constdata)
</UL>
<P><STRONG><a name="[38]"></a>returnInputLen</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cominterface.o(i.returnInputLen))
<BR>[Address Reference Count : 1]<UL><LI> cominterface.o(.constdata)
</UL>
<P><STRONG><a name="[39]"></a>returnInputStatus</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cominterface.o(i.returnInputStatus))
<BR>[Address Reference Count : 1]<UL><LI> cominterface.o(.constdata)
</UL>
<P><STRONG><a name="[36]"></a>returnIutputMaxLen</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, cominterface.o(i.returnIutputMaxLen))
<BR>[Address Reference Count : 1]<UL><LI> cominterface.o(.constdata)
</UL>
<P><STRONG><a name="[35]"></a>returnOutputBuff</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, cominterface.o(i.returnOutputBuff))
<BR>[Address Reference Count : 1]<UL><LI> cominterface.o(.constdata)
</UL>
<P><STRONG><a name="[34]"></a>returnOutputMaxLen</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, cominterface.o(i.returnOutputMaxLen))
<BR>[Address Reference Count : 1]<UL><LI> cominterface.o(.constdata)
</UL>
<P><STRONG><a name="[1b2]"></a>LCD_SPI_0128Init</STRONG> (Thumb, 1122 bytes, Stack size 8 bytes, lcd_spi_init.o(i.LCD_SPI_0128Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_SPI_0128Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms_LCD
</UL>
<BR>[Called By]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SPI_Init
</UL>

<P><STRONG><a name="[7d]"></a>Y6_NULL_HANDLE</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, y6_command.o(i.Y6_NULL_HANDLE))
<BR>[Address Reference Count : 1]<UL><LI> y6_command.o(.constdata)
</UL>
<P><STRONG><a name="[1af]"></a>LCD_DrawPoint_color</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, y6_drawfigure.o(i.LCD_DrawPoint_color))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_DrawPoint_color
</UL>
<BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dispLine_color
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Draw_ColorLine
</UL>

<P><STRONG><a name="[66]"></a>DemoTest01_timeoutEvent</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, demotest01.o(i.DemoTest01_timeoutEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 332<LI>Call Chain = DemoTest01_timeoutEvent &rArr; guiSetWidgetPictureID &rArr; wGetResoureAddr &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiSetWidgetPictureID
</UL>
<BR>[Address Reference Count : 1]<UL><LI> demotest01.o(i.DemoMain_PageEnterEvent)
</UL>
<P><STRONG><a name="[6c]"></a>infrared_timeoutEvent</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, demotest01.o(i.infrared_timeoutEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 340<LI>Call Chain = infrared_timeoutEvent &rArr; guiSetWidgetPictureID &rArr; wGetResoureAddr &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiSetWidgetPictureID
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> demotest01.o(i.infrared_PageEnterEvent)
</UL>
<P><STRONG><a name="[6d]"></a>infrared_timeoutEvent2</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, demotest01.o(i.infrared_timeoutEvent2))
<BR><BR>[Stack]<UL><LI>Max Depth = 332<LI>Call Chain = infrared_timeoutEvent2 &rArr; guiSetWidgetPictureID &rArr; wGetResoureAddr &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiSetWidgetPictureID
</UL>
<BR>[Address Reference Count : 1]<UL><LI> demotest01.o(i.infrared_PageEnterEvent2)
</UL>
<P><STRONG><a name="[70]"></a>red_led_timeoutEvent</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, demotest01.o(i.red_led_timeoutEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 332<LI>Call Chain = red_led_timeoutEvent &rArr; guiSetWidgetPictureID &rArr; wGetResoureAddr &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiSetWidgetPictureID
</UL>
<BR>[Address Reference Count : 1]<UL><LI> demotest01.o(i.red_led_PageEnterEvent)
</UL>
<P><STRONG><a name="[71]"></a>red_led_timeoutEvent2</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, demotest01.o(i.red_led_timeoutEvent2))
<BR><BR>[Stack]<UL><LI>Max Depth = 340<LI>Call Chain = red_led_timeoutEvent2 &rArr; guiSetWidgetPictureID &rArr; wGetResoureAddr &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiSetWidgetPictureID
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> demotest01.o(i.red_led_PageEnterEvent2)
</UL>
<P><STRONG><a name="[21e]"></a>guiInitVariable</STRONG> (Thumb, 188 bytes, Stack size 16 bytes, guiinit.o(i.guiInitVariable))
<BR><BR>[Stack]<UL><LI>Max Depth = 300<LI>Call Chain = guiInitVariable &rArr; wInputMsgInit &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wInputMsgInit
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wGuiMsgInit
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiDebug
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getQRcodeBufPoint
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getDebugBufPoint
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkGuiLibMsg
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiInit
</UL>

<P><STRONG><a name="[217]"></a>outs</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, guidebug.o(i.outs))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = outs
</UL>
<BR>[Called By]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiDebug
</UL>

<P><STRONG><a name="[216]"></a>vsnprintf</STRONG> (Thumb, 288 bytes, Stack size 40 bytes, guidebug.o(i.vsnprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutUnsignedInt
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutString
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutSignedInt
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutHexa
</UL>
<BR>[Called By]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiDebug
</UL>

<P><STRONG><a name="[233]"></a>inputTouchMsgHandle</STRONG> (Thumb, 516 bytes, Stack size 64 bytes, winputmsg.o(i.inputTouchMsgHandle))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = inputTouchMsgHandle &rArr; wGetWidgetNode_ByTwoPos
</UL>
<BR>[Calls]<UL><LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wSlidEventHandle
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wGetWidgetNode_ByTwoPos
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wGetWidgetNode_ByPos
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wSendMsgGui
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
</UL>
<BR>[Called By]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wInputMsgHandleLoop
</UL>

<P><STRONG><a name="[19a]"></a>AlphabetToBinary</STRONG> (Thumb, 94 bytes, Stack size 0 bytes, qr_encode.o(i.AlphabetToBinary))
<BR><BR>[Called By]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EncodeSourceData
</UL>

<P><STRONG><a name="[16b]"></a>CountPenalty</STRONG> (Thumb, 862 bytes, Stack size 24 bytes, qr_encode.o(i.CountPenalty))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = CountPenalty &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FormatModule
</UL>

<P><STRONG><a name="[196]"></a>EncodeSourceData</STRONG> (Thumb, 1552 bytes, Stack size 72 bytes, qr_encode.o(i.EncodeSourceData))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = EncodeSourceData &rArr; GetBitLength &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBitStream
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBitLength
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AlphabetToBinary
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEncodeVersion
</UL>

<P><STRONG><a name="[19b]"></a>FormatModule</STRONG> (Thumb, 134 bytes, Stack size 16 bytes, qr_encode.o(i.FormatModule))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = FormatModule &rArr; SetMaskingPattern &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMaskingPattern
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetFunctionModule
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetFormatInfoPattern
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetCodeWordPattern
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CountPenalty
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qr_encode
</UL>

<P><STRONG><a name="[198]"></a>GetBitLength</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, qr_encode.o(i.GetBitLength))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = GetBitLength &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EncodeSourceData
</UL>

<P><STRONG><a name="[1a6]"></a>GetEncodeVersion</STRONG> (Thumb, 94 bytes, Stack size 32 bytes, qr_encode.o(i.GetEncodeVersion))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = GetEncodeVersion &rArr; EncodeSourceData &rArr; GetBitLength &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EncodeSourceData
</UL>
<BR>[Called By]<UL><LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qr_encode
</UL>

<P><STRONG><a name="[1a7]"></a>GetRSCodeWord</STRONG> (Thumb, 124 bytes, Stack size 48 bytes, qr_encode.o(i.GetRSCodeWord))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = GetRSCodeWord &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qr_encode
</UL>

<P><STRONG><a name="[1d3]"></a>SetAlignmentPattern</STRONG> (Thumb, 80 bytes, Stack size 20 bytes, qr_encode.o(i.SetAlignmentPattern))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SetAlignmentPattern
</UL>
<BR>[Called By]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetFunctionModule
</UL>

<P><STRONG><a name="[199]"></a>SetBitStream</STRONG> (Thumb, 94 bytes, Stack size 32 bytes, qr_encode.o(i.SetBitStream))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SetBitStream
</UL>
<BR>[Called By]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EncodeSourceData
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qr_encode
</UL>

<P><STRONG><a name="[19d]"></a>SetCodeWordPattern</STRONG> (Thumb, 120 bytes, Stack size 28 bytes, qr_encode.o(i.SetCodeWordPattern))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = SetCodeWordPattern
</UL>
<BR>[Called By]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FormatModule
</UL>

<P><STRONG><a name="[1d1]"></a>SetFinderPattern</STRONG> (Thumb, 64 bytes, Stack size 20 bytes, qr_encode.o(i.SetFinderPattern))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SetFinderPattern
</UL>
<BR>[Called By]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetFunctionModule
</UL>

<P><STRONG><a name="[19f]"></a>SetFormatInfoPattern</STRONG> (Thumb, 264 bytes, Stack size 20 bytes, qr_encode.o(i.SetFormatInfoPattern))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SetFormatInfoPattern
</UL>
<BR>[Called By]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FormatModule
</UL>

<P><STRONG><a name="[19c]"></a>SetFunctionModule</STRONG> (Thumb, 306 bytes, Stack size 24 bytes, qr_encode.o(i.SetFunctionModule))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = SetFunctionModule &rArr; SetVersionPattern
</UL>
<BR>[Calls]<UL><LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetVersionPattern
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetFinderPattern
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetAlignmentPattern
</UL>
<BR>[Called By]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FormatModule
</UL>

<P><STRONG><a name="[19e]"></a>SetMaskingPattern</STRONG> (Thumb, 216 bytes, Stack size 32 bytes, qr_encode.o(i.SetMaskingPattern))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = SetMaskingPattern &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FormatModule
</UL>

<P><STRONG><a name="[1d2]"></a>SetVersionPattern</STRONG> (Thumb, 126 bytes, Stack size 20 bytes, qr_encode.o(i.SetVersionPattern))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SetVersionPattern
</UL>
<BR>[Called By]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetFunctionModule
</UL>

<P><STRONG><a name="[247]"></a>putBitToPos</STRONG> (Thumb, 60 bytes, Stack size 48 bytes, qr_encode.o(i.putBitToPos))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = putBitToPos &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qr_encode
</UL>

<P><STRONG><a name="[1d6]"></a>Slider_dispRoundVernier</STRONG> (Thumb, 380 bytes, Stack size 64 bytes, roundslider.o(i.Slider_dispRoundVernier))
<BR><BR>[Stack]<UL><LI>Max Depth = 484<LI>Call Chain = Slider_dispRoundVernier &rArr; wDispAlphaImage &rArr; wGetResoureAddr &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wDispAlphaImage
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wDrawCircle_Solid_AT
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_dispRoundSlider
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_UpdateEventRoundSlider
</UL>

<P><STRONG><a name="[164]"></a>AT_SystemInit</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, drawfigureaa.o(i.AT_SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 276<LI>Call Chain = AT_SystemInit &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiDebug
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clean
</UL>
<BR>[Called By]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wDrawCircle_Solid_AT
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wDrawArc_AT
</UL>

<P><STRONG><a name="[18b]"></a>Calc_Xdiff</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, drawfigureaa.o(i.Calc_Xdiff))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Calc_Xdiff
</UL>
<BR>[Called By]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawArc_0_90
</UL>

<P><STRONG><a name="[166]"></a>Clean</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, drawfigureaa.o(i.Clean))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Clean
</UL>
<BR>[Called By]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reflash
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT_SystemInit
</UL>

<P><STRONG><a name="[186]"></a>DrawArc_0_90</STRONG> (Thumb, 548 bytes, Stack size 128 bytes, drawfigureaa.o(i.DrawArc_0_90))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = DrawArc_0_90 &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmpeq
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawHLine_AT
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Calc_Xdiff
</UL>
<BR>[Called By]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawArc
</UL>

<P><STRONG><a name="[194]"></a>DrawCircle</STRONG> (Thumb, 206 bytes, Stack size 48 bytes, drawfigureaa.o(i.DrawCircle))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = DrawCircle &rArr; DrawHLine_AT &rArr; Reflash &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawHLine_AT
</UL>
<BR>[Called By]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wDrawCircle_Solid_AT
</UL>

<P><STRONG><a name="[18f]"></a>DrawHLine_AT</STRONG> (Thumb, 222 bytes, Stack size 24 bytes, drawfigureaa.o(i.DrawHLine_AT))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = DrawHLine_AT &rArr; Reflash &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reflash
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawCircle
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawArc_0_90
</UL>

<P><STRONG><a name="[195]"></a>Reflash</STRONG> (Thumb, 196 bytes, Stack size 24 bytes, drawfigureaa.o(i.Reflash))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = Reflash &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawPoint_AT
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clean
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wDrawCircle_Solid_AT
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wDrawArc_AT
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawHLine_AT
</UL>

<P><STRONG><a name="[1c1]"></a>Pointer_GetNewLoc</STRONG> (Thumb, 164 bytes, Stack size 32 bytes, pointer.o(i.Pointer_GetNewLoc))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = Pointer_GetNewLoc &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_dispPointer
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pointer_UpadateValue
</UL>

<P><STRONG><a name="[1d9]"></a>Slider_dispVernier</STRONG> (Thumb, 232 bytes, Stack size 32 bytes, slider.o(i.Slider_dispVernier))
<BR><BR>[Stack]<UL><LI>Max Depth = 356<LI>Call Chain = Slider_dispVernier &rArr; wDispImage &rArr; wGetResoureAddr &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wDispImage
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_dispSlider
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_UpdateEventSlider
</UL>

<P><STRONG><a name="[25e]"></a>w_GetStringNeedWH</STRONG> (Thumb, 140 bytes, Stack size 72 bytes, drawchar.o(i.w_GetStringNeedWH))
<BR><BR>[Stack]<UL><LI>Max Depth = 476<LI>Call Chain = w_GetStringNeedWH &rArr; wResGetFontMsg &rArr; wGetResoureAddrEX &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wResGetFontMsg
</UL>
<BR>[Called By]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w_dispCharUseExFont
</UL>

<P><STRONG><a name="[251]"></a>Draw8Point</STRONG> (Thumb, 134 bytes, Stack size 56 bytes, drawfigure.o(i.Draw8Point))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Draw8Point
</UL>
<BR>[Called By]<UL><LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wDispCircle
</UL>

<P><STRONG><a name="[192]"></a>Get_MixColors</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, drawfont.o(i.Get_MixColors))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Get_MixColors
</UL>
<BR>[Called By]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawChar_4BPP
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawChar_2BPP
</UL>

<P><STRONG><a name="[61]"></a>Alternative1_releaseEvent</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, fullfunckeyboard.o(i.Alternative1_releaseEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = Alternative1_releaseEvent &rArr; guiAppendWidgetText &rArr; wSendMsgGui &rArr; wQueueIn &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiGetWidgetText
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiAppendWidgetText
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fullfunckeyboard.o(i.CreatePreviewArea)
</UL>
<P><STRONG><a name="[62]"></a>Alternative2_releaseEvent</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, fullfunckeyboard.o(i.Alternative2_releaseEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = Alternative2_releaseEvent &rArr; guiAppendWidgetText &rArr; wSendMsgGui &rArr; wQueueIn &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiGetWidgetText
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiAppendWidgetText
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fullfunckeyboard.o(i.CreatePreviewArea)
</UL>
<P><STRONG><a name="[63]"></a>Alternative3_releaseEvent</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, fullfunckeyboard.o(i.Alternative3_releaseEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = Alternative3_releaseEvent &rArr; guiAppendWidgetText &rArr; wSendMsgGui &rArr; wQueueIn &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiGetWidgetText
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiAppendWidgetText
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fullfunckeyboard.o(i.CreatePreviewArea)
</UL>
<P><STRONG><a name="[16c]"></a>CreateFunctionArea</STRONG> (Thumb, 768 bytes, Stack size 32 bytes, fullfunckeyboard.o(i.CreateFunctionArea))
<BR><BR>[Stack]<UL><LI>Max Depth = 316<LI>Call Chain = CreateFunctionArea &rArr; guiCreateWidget &rArr; wCreateHadnle &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiRegisterEvent
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiCreateWidget
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiSetWidgetText
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateKeyBoardPage
</UL>

<P><STRONG><a name="[172]"></a>CreateInputArea</STRONG> (Thumb, 1228 bytes, Stack size 56 bytes, fullfunckeyboard.o(i.CreateInputArea))
<BR><BR>[Stack]<UL><LI>Max Depth = 340<LI>Call Chain = CreateInputArea &rArr; guiCreateWidget &rArr; wCreateHadnle &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiRegisterEvent
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiCreateWidget
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateKeyBoardPage
</UL>

<P><STRONG><a name="[72]"></a>CreateKeyBoardPage</STRONG> (Thumb, 248 bytes, Stack size 24 bytes, fullfunckeyboard.o(i.CreateKeyBoardPage))
<BR><BR>[Stack]<UL><LI>Max Depth = 364<LI>Call Chain = CreateKeyBoardPage &rArr; CreateInputArea &rArr; guiCreateWidget &rArr; wCreateHadnle &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiCreateWidget
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiSetWidgetText
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiDebug
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetInputAreaWidgetText
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreatePreviewArea
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateInputArea
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateFunctionArea
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fullfunckeyboard.o(i.wCreateFullKeyBoard)
</UL>
<P><STRONG><a name="[174]"></a>CreatePreviewArea</STRONG> (Thumb, 660 bytes, Stack size 24 bytes, fullfunckeyboard.o(i.CreatePreviewArea))
<BR><BR>[Stack]<UL><LI>Max Depth = 308<LI>Call Chain = CreatePreviewArea &rArr; guiCreateWidget &rArr; wCreateHadnle &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiRegisterEvent
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiCreateWidget
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiSetWidgetText
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateKeyBoardPage
</UL>

<P><STRONG><a name="[175]"></a>SetInputAreaWidgetText</STRONG> (Thumb, 764 bytes, Stack size 24 bytes, fullfunckeyboard.o(i.SetInputAreaWidgetText))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = SetInputAreaWidgetText &rArr; guiSetWidgetText &rArr; wSendMsgGui &rArr; wQueueIn &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiSetWidgetText
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inputFuncascASCchina_releaseEvent
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inputFuncSymbol_releaseEvent
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inputFuncNumber_releaseEvent
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateKeyBoardPage
</UL>

<P><STRONG><a name="[203]"></a>appendTextToPinYinPreview</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, fullfunckeyboard.o(i.appendTextToPinYinPreview))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = appendTextToPinYinPreview &rArr; matchGB2312IndexAndDisp &rArr; switchDispGB2312Index &rArr; guiSetWidgetText &rArr; wSendMsgGui &rArr; wQueueIn &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiGetWidgetText
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiAppendWidgetText
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;matchGB2312IndexAndDisp
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inputButton09_releaseEvent
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inputButton05_releaseEvent
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inputButton01_releaseEvent
</UL>

<P><STRONG><a name="[4a]"></a>inputButton01_releaseEvent</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, fullfunckeyboard.o(i.inputButton01_releaseEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = inputButton01_releaseEvent &rArr; appendTextToPinYinPreview &rArr; matchGB2312IndexAndDisp &rArr; switchDispGB2312Index &rArr; guiSetWidgetText &rArr; wSendMsgGui &rArr; wQueueIn &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiSetWidgetText
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiAppendWidgetText
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appendTextToPinYinPreview
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fullfunckeyboard.o(i.CreateInputArea)
</UL>
<P><STRONG><a name="[4b]"></a>inputButton02_releaseEvent</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, fullfunckeyboard.o(i.inputButton02_releaseEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = inputButton02_releaseEvent &rArr; guiSetWidgetText &rArr; wSendMsgGui &rArr; wQueueIn &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiSetWidgetText
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiAppendWidgetText
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fullfunckeyboard.o(i.CreateInputArea)
</UL>
<P><STRONG><a name="[4c]"></a>inputButton03_releaseEvent</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, fullfunckeyboard.o(i.inputButton03_releaseEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = inputButton03_releaseEvent &rArr; guiSetWidgetText &rArr; wSendMsgGui &rArr; wQueueIn &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiSetWidgetText
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiAppendWidgetText
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fullfunckeyboard.o(i.CreateInputArea)
</UL>
<P><STRONG><a name="[4d]"></a>inputButton04_releaseEvent</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, fullfunckeyboard.o(i.inputButton04_releaseEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = inputButton04_releaseEvent &rArr; guiSetWidgetText &rArr; wSendMsgGui &rArr; wQueueIn &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiSetWidgetText
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiAppendWidgetText
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fullfunckeyboard.o(i.CreateInputArea)
</UL>
<P><STRONG><a name="[4e]"></a>inputButton05_releaseEvent</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, fullfunckeyboard.o(i.inputButton05_releaseEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = inputButton05_releaseEvent &rArr; appendTextToPinYinPreview &rArr; matchGB2312IndexAndDisp &rArr; switchDispGB2312Index &rArr; guiSetWidgetText &rArr; wSendMsgGui &rArr; wQueueIn &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiSetWidgetText
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiAppendWidgetText
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appendTextToPinYinPreview
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fullfunckeyboard.o(i.CreateInputArea)
</UL>
<P><STRONG><a name="[4f]"></a>inputButton06_releaseEvent</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, fullfunckeyboard.o(i.inputButton06_releaseEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = inputButton06_releaseEvent &rArr; guiSetWidgetText &rArr; wSendMsgGui &rArr; wQueueIn &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiSetWidgetText
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiAppendWidgetText
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fullfunckeyboard.o(i.CreateInputArea)
</UL>
<P><STRONG><a name="[50]"></a>inputButton07_releaseEvent</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, fullfunckeyboard.o(i.inputButton07_releaseEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = inputButton07_releaseEvent &rArr; guiSetWidgetText &rArr; wSendMsgGui &rArr; wQueueIn &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiSetWidgetText
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiAppendWidgetText
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fullfunckeyboard.o(i.CreateInputArea)
</UL>
<P><STRONG><a name="[51]"></a>inputButton08_releaseEvent</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, fullfunckeyboard.o(i.inputButton08_releaseEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = inputButton08_releaseEvent &rArr; guiSetWidgetText &rArr; wSendMsgGui &rArr; wQueueIn &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiSetWidgetText
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiAppendWidgetText
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fullfunckeyboard.o(i.CreateInputArea)
</UL>
<P><STRONG><a name="[52]"></a>inputButton09_releaseEvent</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, fullfunckeyboard.o(i.inputButton09_releaseEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = inputButton09_releaseEvent &rArr; appendTextToPinYinPreview &rArr; matchGB2312IndexAndDisp &rArr; switchDispGB2312Index &rArr; guiSetWidgetText &rArr; wSendMsgGui &rArr; wQueueIn &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiSetWidgetText
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiAppendWidgetText
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appendTextToPinYinPreview
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fullfunckeyboard.o(i.CreateInputArea)
</UL>
<P><STRONG><a name="[53]"></a>inputButton10_releaseEvent</STRONG> (Thumb, 140 bytes, Stack size 16 bytes, fullfunckeyboard.o(i.inputButton10_releaseEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = inputButton10_releaseEvent &rArr; guiSetWidgetText &rArr; wSendMsgGui &rArr; wQueueIn &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiSetWidgetText
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiAppendWidgetText
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fullfunckeyboard.o(i.CreateInputArea)
</UL>
<P><STRONG><a name="[54]"></a>inputButton11_releaseEvent</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, fullfunckeyboard.o(i.inputButton11_releaseEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = inputButton11_releaseEvent &rArr; guiSetWidgetText &rArr; wSendMsgGui &rArr; wQueueIn &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiSetWidgetText
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiAppendWidgetText
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fullfunckeyboard.o(i.CreateInputArea)
</UL>
<P><STRONG><a name="[55]"></a>inputButton12_releaseEvent</STRONG> (Thumb, 152 bytes, Stack size 16 bytes, fullfunckeyboard.o(i.inputButton12_releaseEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = inputButton12_releaseEvent &rArr; guiSetWidgetText &rArr; wSendMsgGui &rArr; wQueueIn &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiSetWidgetText
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiAppendWidgetText
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fullfunckeyboard.o(i.CreateInputArea)
</UL>
<P><STRONG><a name="[45]"></a>inputFuncBack_releaseEvent</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, fullfunckeyboard.o(i.inputFuncBack_releaseEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = inputFuncBack_releaseEvent &rArr; leaveKeyBoard &rArr; guiSetWidgetText &rArr; wSendMsgGui &rArr; wQueueIn &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;leaveKeyBoard
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fullfunckeyboard.o(i.CreateFunctionArea)
</UL>
<P><STRONG><a name="[44]"></a>inputFuncDelete_releaseEvent</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, fullfunckeyboard.o(i.inputFuncDelete_releaseEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = inputFuncDelete_releaseEvent &rArr; matchGB2312IndexAndDisp &rArr; switchDispGB2312Index &rArr; guiSetWidgetText &rArr; wSendMsgGui &rArr; wQueueIn &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiGetWidgetText
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiDeleteWidgetText
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;matchGB2312IndexAndDisp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fullfunckeyboard.o(i.CreateFunctionArea)
</UL>
<P><STRONG><a name="[41]"></a>inputFuncNumber_releaseEvent</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, fullfunckeyboard.o(i.inputFuncNumber_releaseEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = inputFuncNumber_releaseEvent &rArr; SetInputAreaWidgetText &rArr; guiSetWidgetText &rArr; wSendMsgGui &rArr; wQueueIn &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetInputAreaWidgetText
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fullfunckeyboard.o(i.CreateFunctionArea)
</UL>
<P><STRONG><a name="[46]"></a>inputFuncOK_releaseEvent</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, fullfunckeyboard.o(i.inputFuncOK_releaseEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = inputFuncOK_releaseEvent &rArr; leaveKeyBoard &rArr; guiSetWidgetText &rArr; wSendMsgGui &rArr; wQueueIn &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;leaveKeyBoard
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fullfunckeyboard.o(i.CreateFunctionArea)
</UL>
<P><STRONG><a name="[42]"></a>inputFuncSpace_releaseEvent</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, fullfunckeyboard.o(i.inputFuncSpace_releaseEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = inputFuncSpace_releaseEvent &rArr; guiAppendWidgetText &rArr; wSendMsgGui &rArr; wQueueIn &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiAppendWidgetText
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fullfunckeyboard.o(i.CreateFunctionArea)
</UL>
<P><STRONG><a name="[40]"></a>inputFuncSymbol_releaseEvent</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, fullfunckeyboard.o(i.inputFuncSymbol_releaseEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = inputFuncSymbol_releaseEvent &rArr; SetInputAreaWidgetText &rArr; guiSetWidgetText &rArr; wSendMsgGui &rArr; wQueueIn &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetInputAreaWidgetText
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fullfunckeyboard.o(i.CreateFunctionArea)
</UL>
<P><STRONG><a name="[43]"></a>inputFuncascASCchina_releaseEvent</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, fullfunckeyboard.o(i.inputFuncascASCchina_releaseEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = inputFuncascASCchina_releaseEvent &rArr; SetInputAreaWidgetText &rArr; guiSetWidgetText &rArr; wSendMsgGui &rArr; wQueueIn &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetInputAreaWidgetText
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fullfunckeyboard.o(i.CreateFunctionArea)
</UL>
<P><STRONG><a name="[204]"></a>matchGB2312IndexAndDisp</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, fullfunckeyboard.o(i.matchGB2312IndexAndDisp))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = matchGB2312IndexAndDisp &rArr; switchDispGB2312Index &rArr; guiSetWidgetText &rArr; wSendMsgGui &rArr; wQueueIn &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiGetWidgetText
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gb2312StrinMatch
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchDispGB2312Index
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inputFuncDelete_releaseEvent
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appendTextToPinYinPreview
</UL>

<P><STRONG><a name="[65]"></a>switchAlterBackward_releaseEvent</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, fullfunckeyboard.o(i.switchAlterBackward_releaseEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = switchAlterBackward_releaseEvent &rArr; switchDispGB2312Index &rArr; guiSetWidgetText &rArr; wSendMsgGui &rArr; wQueueIn &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchDispGB2312Index
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fullfunckeyboard.o(i.CreatePreviewArea)
</UL>
<P><STRONG><a name="[64]"></a>switchAlterForward_releaseEvent</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, fullfunckeyboard.o(i.switchAlterForward_releaseEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = switchAlterForward_releaseEvent &rArr; switchDispGB2312Index &rArr; guiSetWidgetText &rArr; wSendMsgGui &rArr; wQueueIn &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchDispGB2312Index
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fullfunckeyboard.o(i.CreatePreviewArea)
</UL>
<P><STRONG><a name="[246]"></a>switchDispGB2312Index</STRONG> (Thumb, 180 bytes, Stack size 24 bytes, fullfunckeyboard.o(i.switchDispGB2312Index))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = switchDispGB2312Index &rArr; guiSetWidgetText &rArr; wSendMsgGui &rArr; wQueueIn &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiSetWidgetText
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getGB2312CharAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchAlterForward_releaseEvent
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchAlterBackward_releaseEvent
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;matchGB2312IndexAndDisp
</UL>

<P><STRONG><a name="[171]"></a>CreateFunctionArea</STRONG> (Thumb, 348 bytes, Stack size 32 bytes, numberfunckeyboard1.o(i.CreateFunctionArea))
<BR><BR>[Stack]<UL><LI>Max Depth = 316<LI>Call Chain = CreateFunctionArea &rArr; guiCreateWidget &rArr; wCreateHadnle &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiRegisterEvent
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiCreateWidget
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiSetWidgetText
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateKeyBoardPage
</UL>

<P><STRONG><a name="[173]"></a>CreateInputArea</STRONG> (Thumb, 1294 bytes, Stack size 40 bytes, numberfunckeyboard1.o(i.CreateInputArea))
<BR><BR>[Stack]<UL><LI>Max Depth = 324<LI>Call Chain = CreateInputArea &rArr; guiCreateWidget &rArr; wCreateHadnle &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiRegisterEvent
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiCreateWidget
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiSetWidgetText
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateKeyBoardPage
</UL>

<P><STRONG><a name="[73]"></a>CreateKeyBoardPage</STRONG> (Thumb, 236 bytes, Stack size 24 bytes, numberfunckeyboard1.o(i.CreateKeyBoardPage))
<BR><BR>[Stack]<UL><LI>Max Depth = 348<LI>Call Chain = CreateKeyBoardPage &rArr; CreateInputArea &rArr; guiCreateWidget &rArr; wCreateHadnle &rArr; guiDebug &rArr; vsnprintf &rArr; PutUnsignedInt &rArr;  PutUnsignedInt (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiCreateWidget
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiSetWidgetText
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiDebug
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateInputArea
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateFunctionArea
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> numberfunckeyboard1.o(i.wCreatenumberFuncKeyBoard1)
</UL>
<P><STRONG><a name="[60]"></a>inputButton00_releaseEvent</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, numberfunckeyboard1.o(i.inputButton00_releaseEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = inputButton00_releaseEvent &rArr; guiAppendWidgetText &rArr; wSendMsgGui &rArr; wQueueIn &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiGetWidgetText
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiAppendWidgetText
</UL>
<BR>[Address Reference Count : 1]<UL><LI> numberfunckeyboard1.o(i.CreateInputArea)
</UL>
<P><STRONG><a name="[56]"></a>inputButton01_releaseEvent</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, numberfunckeyboard1.o(i.inputButton01_releaseEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = inputButton01_releaseEvent &rArr; guiAppendWidgetText &rArr; wSendMsgGui &rArr; wQueueIn &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiGetWidgetText
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiAppendWidgetText
</UL>
<BR>[Address Reference Count : 1]<UL><LI> numberfunckeyboard1.o(i.CreateInputArea)
</UL>
<P><STRONG><a name="[57]"></a>inputButton02_releaseEvent</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, numberfunckeyboard1.o(i.inputButton02_releaseEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = inputButton02_releaseEvent &rArr; guiAppendWidgetText &rArr; wSendMsgGui &rArr; wQueueIn &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiGetWidgetText
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiAppendWidgetText
</UL>
<BR>[Address Reference Count : 1]<UL><LI> numberfunckeyboard1.o(i.CreateInputArea)
</UL>
<P><STRONG><a name="[58]"></a>inputButton03_releaseEvent</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, numberfunckeyboard1.o(i.inputButton03_releaseEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = inputButton03_releaseEvent &rArr; guiAppendWidgetText &rArr; wSendMsgGui &rArr; wQueueIn &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiGetWidgetText
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiAppendWidgetText
</UL>
<BR>[Address Reference Count : 1]<UL><LI> numberfunckeyboard1.o(i.CreateInputArea)
</UL>
<P><STRONG><a name="[5a]"></a>inputButton04_releaseEvent</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, numberfunckeyboard1.o(i.inputButton04_releaseEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = inputButton04_releaseEvent &rArr; guiAppendWidgetText &rArr; wSendMsgGui &rArr; wQueueIn &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiGetWidgetText
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiAppendWidgetText
</UL>
<BR>[Address Reference Count : 1]<UL><LI> numberfunckeyboard1.o(i.CreateInputArea)
</UL>
<P><STRONG><a name="[5b]"></a>inputButton05_releaseEvent</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, numberfunckeyboard1.o(i.inputButton05_releaseEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = inputButton05_releaseEvent &rArr; guiAppendWidgetText &rArr; wSendMsgGui &rArr; wQueueIn &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiGetWidgetText
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiAppendWidgetText
</UL>
<BR>[Address Reference Count : 1]<UL><LI> numberfunckeyboard1.o(i.CreateInputArea)
</UL>
<P><STRONG><a name="[5c]"></a>inputButton06_releaseEvent</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, numberfunckeyboard1.o(i.inputButton06_releaseEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = inputButton06_releaseEvent &rArr; guiAppendWidgetText &rArr; wSendMsgGui &rArr; wQueueIn &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiGetWidgetText
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiAppendWidgetText
</UL>
<BR>[Address Reference Count : 1]<UL><LI> numberfunckeyboard1.o(i.CreateInputArea)
</UL>
<P><STRONG><a name="[5d]"></a>inputButton07_releaseEvent</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, numberfunckeyboard1.o(i.inputButton07_releaseEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = inputButton07_releaseEvent &rArr; guiAppendWidgetText &rArr; wSendMsgGui &rArr; wQueueIn &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiGetWidgetText
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiAppendWidgetText
</UL>
<BR>[Address Reference Count : 1]<UL><LI> numberfunckeyboard1.o(i.CreateInputArea)
</UL>
<P><STRONG><a name="[5e]"></a>inputButton08_releaseEvent</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, numberfunckeyboard1.o(i.inputButton08_releaseEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = inputButton08_releaseEvent &rArr; guiAppendWidgetText &rArr; wSendMsgGui &rArr; wQueueIn &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiGetWidgetText
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiAppendWidgetText
</UL>
<BR>[Address Reference Count : 1]<UL><LI> numberfunckeyboard1.o(i.CreateInputArea)
</UL>
<P><STRONG><a name="[5f]"></a>inputButton09_releaseEvent</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, numberfunckeyboard1.o(i.inputButton09_releaseEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = inputButton09_releaseEvent &rArr; guiAppendWidgetText &rArr; wSendMsgGui &rArr; wQueueIn &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiGetWidgetText
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiAppendWidgetText
</UL>
<BR>[Address Reference Count : 1]<UL><LI> numberfunckeyboard1.o(i.CreateInputArea)
</UL>
<P><STRONG><a name="[59]"></a>inputButtonDot_releaseEvent</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, numberfunckeyboard1.o(i.inputButtonDot_releaseEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = inputButtonDot_releaseEvent &rArr; guiAppendWidgetText &rArr; wSendMsgGui &rArr; wQueueIn &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiGetWidgetText
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiAppendWidgetText
</UL>
<BR>[Address Reference Count : 1]<UL><LI> numberfunckeyboard1.o(i.CreateInputArea)
</UL>
<P><STRONG><a name="[47]"></a>inputFuncBack_releaseEvent</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, numberfunckeyboard1.o(i.inputFuncBack_releaseEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = inputFuncBack_releaseEvent &rArr; leaveKeyBoard &rArr; guiSetWidgetText &rArr; wSendMsgGui &rArr; wQueueIn &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;leaveKeyBoard
</UL>
<BR>[Address Reference Count : 1]<UL><LI> numberfunckeyboard1.o(i.CreateFunctionArea)
</UL>
<P><STRONG><a name="[48]"></a>inputFuncDelete_releaseEvent</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, numberfunckeyboard1.o(i.inputFuncDelete_releaseEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = inputFuncDelete_releaseEvent &rArr; guiDeleteWidgetText &rArr; wSendMsgGui &rArr; wQueueIn &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiDeleteWidgetText
</UL>
<BR>[Address Reference Count : 1]<UL><LI> numberfunckeyboard1.o(i.CreateFunctionArea)
</UL>
<P><STRONG><a name="[49]"></a>inputFuncOK_releaseEvent</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, numberfunckeyboard1.o(i.inputFuncOK_releaseEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = inputFuncOK_releaseEvent &rArr; leaveKeyBoard &rArr; guiSetWidgetText &rArr; wSendMsgGui &rArr; wQueueIn &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;leaveKeyBoard
</UL>
<BR>[Address Reference Count : 1]<UL><LI> numberfunckeyboard1.o(i.CreateFunctionArea)
</UL>
<P><STRONG><a name="[1fe]"></a>_printf_core</STRONG> (Thumb, 1020 bytes, Stack size 104 bytes, printf8.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf$8
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf$8
</UL>

<P><STRONG><a name="[202]"></a>_printf_post_padding</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, printf8.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[201]"></a>_printf_pre_padding</STRONG> (Thumb, 44 bytes, Stack size 40 bytes, printf8.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[69]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, printf8.o(i._sputc))
<BR><BR>[Called By]<UL><LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf$8
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printf8.o(i.__0sprintf$8)
</UL>
<P><STRONG><a name="[200]"></a>internal_alloc</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, mallocr.o(i.internal_alloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;realloc
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
