#ifndef _flashInterface_h
#define _flashInterface_h
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/*
*Functional module: flash memory interface
 *Implemented functions.
 *                              
 * List of functions
 *
 *V1.01: Function implementation
 *
 *V1.02.
 */
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#include "gStdint.h"

#ifdef __cplusplus
 extern "C" {
#endif

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/*
 *´¢´æÆ÷FLASH ½Ó¿Ú
 */
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
typedef struct _FLASH_DESCRIPTOR{
	/*addr flash physical address      
	 count number of erasures This project is the number of sectors 4K bytes per sector*/
	void (* erase)(gui_uint32 addr , gui_uint32 count);
	/*buf data buffer to be written 
	 addr physical address of the flash to be written  
	 count Number of bytes written, the interface is not responsible for erasing */
	void (* write)(gui_uint8 *buf , gui_uint32 addr , gui_uint32 count);
	/*addr Physical address to be read         
	 buf the buffer to read 
	 count Number of bytes read*/
	void (* read)(gui_uint32 addr , gui_uint8 *buf , gui_uint32 count);
}FLASH_DESCRIPTOR;
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/*
 *Storage FLASH structure declaration User needs to define and fill it himself
 */
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
extern const FLASH_DESCRIPTOR Flash_Des;


#ifdef __cplusplus
}
#endif

#endif
